!function(A){var t={};function e(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return A[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=A,e.c=t,e.d=function(A,t,r){e.o(A,t)||Object.defineProperty(A,t,{enumerable:!0,get:r})},e.r=function(A){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})},e.t=function(A,t){if(1&t&&(A=e(A)),8&t)return A;if(4&t&&"object"==typeof A&&A&&A.__esModule)return A;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:A}),2&t&&"string"!=typeof A)for(var i in A)e.d(r,i,function(t){return A[t]}.bind(null,i));return r},e.n=function(A){var t=A&&A.__esModule?function(){return A.default}:function(){return A};return e.d(t,"a",t),t},e.o=function(A,t){return Object.prototype.hasOwnProperty.call(A,t)},e.p="",e(e.s=90)}([function(A,t,e){"use strict";e.d(t,"k",(function(){return o})),e.d(t,"j",(function(){return E})),e.d(t,"a",(function(){return a})),e.d(t,"b",(function(){return g})),e.d(t,"o",(function(){return B})),e.d(t,"p",(function(){return I})),e.d(t,"l",(function(){return c})),e.d(t,"i",(function(){return u})),e.d(t,"d",(function(){return h})),e.d(t,"e",(function(){return l})),e.d(t,"c",(function(){return w})),e.d(t,"g",(function(){return f})),e.d(t,"f",(function(){return Q})),e.d(t,"h",(function(){return C})),e.d(t,"n",(function(){return d})),e.d(t,"m",(function(){return R}));const r=new(e(1).b)("bytes/5.5.0");function i(A){return!!A.toHexString}function n(A){return A.slice||(A.slice=function(){const t=Array.prototype.slice.call(arguments);return n(new Uint8Array(Array.prototype.slice.apply(A,t)))}),A}function o(A){return c(A)&&!(A.length%2)||E(A)}function s(A){return"number"==typeof A&&A==A&&A%1==0}function E(A){if(null==A)return!1;if(A.constructor===Uint8Array)return!0;if("string"==typeof A)return!1;if(!s(A.length)||A.length<0)return!1;for(let t=0;t<A.length;t++){const e=A[t];if(!s(e)||e<0||e>=256)return!1}return!0}function a(A,t){if(t||(t={}),"number"==typeof A){r.checkSafeUint53(A,"invalid arrayify value");const t=[];for(;A;)t.unshift(255&A),A=parseInt(String(A/256));return 0===t.length&&t.push(0),n(new Uint8Array(t))}if(t.allowMissingPrefix&&"string"==typeof A&&"0x"!==A.substring(0,2)&&(A="0x"+A),i(A)&&(A=A.toHexString()),c(A)){let e=A.substring(2);e.length%2&&("left"===t.hexPad?e="0x0"+e.substring(2):"right"===t.hexPad?e+="0":r.throwArgumentError("hex data is odd-length","value",A));const i=[];for(let A=0;A<e.length;A+=2)i.push(parseInt(e.substring(A,A+2),16));return n(new Uint8Array(i))}return E(A)?n(new Uint8Array(A)):r.throwArgumentError("invalid arrayify value","value",A)}function g(A){const t=A.map(A=>a(A)),e=t.reduce((A,t)=>A+t.length,0),r=new Uint8Array(e);return t.reduce((A,t)=>(r.set(t,A),A+t.length),0),n(r)}function B(A){let t=a(A);if(0===t.length)return t;let e=0;for(;e<t.length&&0===t[e];)e++;return e&&(t=t.slice(e)),t}function I(A,t){(A=a(A)).length>t&&r.throwArgumentError("value out of range","value",arguments[0]);const e=new Uint8Array(t);return e.set(A,t-A.length),n(e)}function c(A,t){return!("string"!=typeof A||!A.match(/^0x[0-9A-Fa-f]*$/))&&(!t||A.length===2+2*t)}function u(A,t){if(t||(t={}),"number"==typeof A){r.checkSafeUint53(A,"invalid hexlify value");let t="";for(;A;)t="0123456789abcdef"[15&A]+t,A=Math.floor(A/16);return t.length?(t.length%2&&(t="0"+t),"0x"+t):"0x00"}if("bigint"==typeof A)return(A=A.toString(16)).length%2?"0x0"+A:"0x"+A;if(t.allowMissingPrefix&&"string"==typeof A&&"0x"!==A.substring(0,2)&&(A="0x"+A),i(A))return A.toHexString();if(c(A))return A.length%2&&("left"===t.hexPad?A="0x0"+A.substring(2):"right"===t.hexPad?A+="0":r.throwArgumentError("hex data is odd-length","value",A)),A.toLowerCase();if(E(A)){let t="0x";for(let e=0;e<A.length;e++){let r=A[e];t+="0123456789abcdef"[(240&r)>>4]+"0123456789abcdef"[15&r]}return t}return r.throwArgumentError("invalid hexlify value","value",A)}function h(A){if("string"!=typeof A)A=u(A);else if(!c(A)||A.length%2)return null;return(A.length-2)/2}function l(A,t,e){return"string"!=typeof A?A=u(A):(!c(A)||A.length%2)&&r.throwArgumentError("invalid hexData","value",A),t=2+2*t,null!=e?"0x"+A.substring(t,2+2*e):"0x"+A.substring(t)}function w(A){let t="0x";return A.forEach(A=>{t+=u(A).substring(2)}),t}function f(A){const t=Q(u(A,{hexPad:"left"}));return"0x"===t?"0x0":t}function Q(A){"string"!=typeof A&&(A=u(A)),c(A)||r.throwArgumentError("invalid hex string","value",A),A=A.substring(2);let t=0;for(;t<A.length&&"0"===A[t];)t++;return"0x"+A.substring(t)}function C(A,t){for("string"!=typeof A?A=u(A):c(A)||r.throwArgumentError("invalid hex string","value",A),A.length>2*t+2&&r.throwArgumentError("value out of range","value",arguments[1]);A.length<2*t+2;)A="0x0"+A.substring(2);return A}function d(A){const t={r:"0x",s:"0x",_vs:"0x",recoveryParam:0,v:0};if(o(A)){const e=a(A);65!==e.length&&r.throwArgumentError("invalid signature string; must be 65 bytes","signature",A),t.r=u(e.slice(0,32)),t.s=u(e.slice(32,64)),t.v=e[64],t.v<27&&(0===t.v||1===t.v?t.v+=27:r.throwArgumentError("signature invalid v byte","signature",A)),t.recoveryParam=1-t.v%2,t.recoveryParam&&(e[32]|=128),t._vs=u(e.slice(32,64))}else{if(t.r=A.r,t.s=A.s,t.v=A.v,t.recoveryParam=A.recoveryParam,t._vs=A._vs,null!=t._vs){const e=I(a(t._vs),32);t._vs=u(e);const i=e[0]>=128?1:0;null==t.recoveryParam?t.recoveryParam=i:t.recoveryParam!==i&&r.throwArgumentError("signature recoveryParam mismatch _vs","signature",A),e[0]&=127;const n=u(e);null==t.s?t.s=n:t.s!==n&&r.throwArgumentError("signature v mismatch _vs","signature",A)}if(null==t.recoveryParam)null==t.v?r.throwArgumentError("signature missing v and recoveryParam","signature",A):0===t.v||1===t.v?t.recoveryParam=t.v:t.recoveryParam=1-t.v%2;else if(null==t.v)t.v=27+t.recoveryParam;else{const e=0===t.v||1===t.v?t.v:1-t.v%2;t.recoveryParam!==e&&r.throwArgumentError("signature recoveryParam mismatch v","signature",A)}null!=t.r&&c(t.r)?t.r=C(t.r,32):r.throwArgumentError("signature missing or invalid r","signature",A),null!=t.s&&c(t.s)?t.s=C(t.s,32):r.throwArgumentError("signature missing or invalid s","signature",A);const e=a(t.s);e[0]>=128&&r.throwArgumentError("signature s out of range","signature",A),t.recoveryParam&&(e[0]|=128);const i=u(e);t._vs&&(c(t._vs)||r.throwArgumentError("signature invalid _vs","signature",A),t._vs=C(t._vs,32)),null==t._vs?t._vs=i:t._vs!==i&&r.throwArgumentError("signature _vs mismatch v and s","signature",A)}return t}function R(A){return u(g([(A=d(A)).r,A.s,A.recoveryParam?"0x1c":"0x1b"]))}},function(A,t,e){"use strict";e.d(t,"a",(function(){return g})),e.d(t,"b",(function(){return I}));let r=!1,i=!1;const n={debug:1,default:2,info:2,warning:3,error:4,off:5};let o=n.default,s=null;const E=function(){try{const A=[];if(["NFD","NFC","NFKD","NFKC"].forEach(t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(e){A.push(t)}}),A.length)throw new Error("missing "+A.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(A){return A.message}return null}();var a,g;!function(A){A.DEBUG="DEBUG",A.INFO="INFO",A.WARNING="WARNING",A.ERROR="ERROR",A.OFF="OFF"}(a||(a={})),function(A){A.UNKNOWN_ERROR="UNKNOWN_ERROR",A.NOT_IMPLEMENTED="NOT_IMPLEMENTED",A.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",A.NETWORK_ERROR="NETWORK_ERROR",A.SERVER_ERROR="SERVER_ERROR",A.TIMEOUT="TIMEOUT",A.BUFFER_OVERRUN="BUFFER_OVERRUN",A.NUMERIC_FAULT="NUMERIC_FAULT",A.MISSING_NEW="MISSING_NEW",A.INVALID_ARGUMENT="INVALID_ARGUMENT",A.MISSING_ARGUMENT="MISSING_ARGUMENT",A.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",A.CALL_EXCEPTION="CALL_EXCEPTION",A.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",A.NONCE_EXPIRED="NONCE_EXPIRED",A.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",A.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",A.TRANSACTION_REPLACED="TRANSACTION_REPLACED"}(g||(g={}));const B="0123456789abcdef";class I{constructor(A){Object.defineProperty(this,"version",{enumerable:!0,value:A,writable:!1})}_log(A,t){const e=A.toLowerCase();null==n[e]&&this.throwArgumentError("invalid log level name","logLevel",A),o>n[e]||console.log.apply(console,t)}debug(...A){this._log(I.levels.DEBUG,A)}info(...A){this._log(I.levels.INFO,A)}warn(...A){this._log(I.levels.WARNING,A)}makeError(A,t,e){if(i)return this.makeError("censored error",t,{});t||(t=I.errors.UNKNOWN_ERROR),e||(e={});const r=[];Object.keys(e).forEach(A=>{const t=e[A];try{if(t instanceof Uint8Array){let e="";for(let A=0;A<t.length;A++)e+=B[t[A]>>4],e+=B[15&t[A]];r.push(A+"=Uint8Array(0x"+e+")")}else r.push(A+"="+JSON.stringify(t))}catch(t){r.push(A+"="+JSON.stringify(e[A].toString()))}}),r.push("code="+t),r.push("version="+this.version);const n=A;r.length&&(A+=" ("+r.join(", ")+")");const o=new Error(A);return o.reason=n,o.code=t,Object.keys(e).forEach((function(A){o[A]=e[A]})),o}throwError(A,t,e){throw this.makeError(A,t,e)}throwArgumentError(A,t,e){return this.throwError(A,I.errors.INVALID_ARGUMENT,{argument:t,value:e})}assert(A,t,e,r){A||this.throwError(t,e,r)}assertArgument(A,t,e,r){A||this.throwArgumentError(t,e,r)}checkNormalize(A){null==A&&(A="platform missing String.prototype.normalize"),E&&this.throwError("platform missing String.prototype.normalize",I.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:E})}checkSafeUint53(A,t){"number"==typeof A&&(null==t&&(t="value not safe"),(A<0||A>=9007199254740991)&&this.throwError(t,I.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:A}),A%1&&this.throwError(t,I.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:A}))}checkArgumentCount(A,t,e){e=e?": "+e:"",A<t&&this.throwError("missing argument"+e,I.errors.MISSING_ARGUMENT,{count:A,expectedCount:t}),A>t&&this.throwError("too many arguments"+e,I.errors.UNEXPECTED_ARGUMENT,{count:A,expectedCount:t})}checkNew(A,t){A!==Object&&null!=A||this.throwError("missing new",I.errors.MISSING_NEW,{name:t.name})}checkAbstract(A,t){A===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",I.errors.UNSUPPORTED_OPERATION,{name:A.name,operation:"new"}):A!==Object&&null!=A||this.throwError("missing new",I.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return s||(s=new I("logger/5.5.0")),s}static setCensorship(A,t){if(!A&&t&&this.globalLogger().throwError("cannot permanently disable censorship",I.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),r){if(!A)return;this.globalLogger().throwError("error censorship permanent",I.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}i=!!A,r=!!t}static setLogLevel(A){const t=n[A.toLowerCase()];null!=t?o=t:I.globalLogger().warn("invalid log level - "+A)}static from(A){return new I(A)}}I.errors=g,I.levels=a},function(A,t,e){(function(A){!function(A,t){"use strict";function r(A,t){if(!A)throw new Error(t||"Assertion failed")}function i(A,t){A.super_=t;var e=function(){};e.prototype=t.prototype,A.prototype=new e,A.prototype.constructor=A}function n(A,t,e){if(n.isBN(A))return A;this.negative=0,this.words=null,this.length=0,this.red=null,null!==A&&("le"!==t&&"be"!==t||(e=t,t=10),this._init(A||0,t||10,e||"be"))}var o;"object"==typeof A?A.exports=n:t.BN=n,n.BN=n,n.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:e(79).Buffer}catch(A){}function s(A,t){var e=A.charCodeAt(t);return e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:e-48&15}function E(A,t,e){var r=s(A,e);return e-1>=t&&(r|=s(A,e-1)<<4),r}function a(A,t,e,r){for(var i=0,n=Math.min(A.length,e),o=t;o<n;o++){var s=A.charCodeAt(o)-48;i*=r,i+=s>=49?s-49+10:s>=17?s-17+10:s}return i}n.isBN=function(A){return A instanceof n||null!==A&&"object"==typeof A&&A.constructor.wordSize===n.wordSize&&Array.isArray(A.words)},n.max=function(A,t){return A.cmp(t)>0?A:t},n.min=function(A,t){return A.cmp(t)<0?A:t},n.prototype._init=function(A,t,e){if("number"==typeof A)return this._initNumber(A,t,e);if("object"==typeof A)return this._initArray(A,t,e);"hex"===t&&(t=16),r(t===(0|t)&&t>=2&&t<=36);var i=0;"-"===(A=A.toString().replace(/\s+/g,""))[0]&&(i++,this.negative=1),i<A.length&&(16===t?this._parseHex(A,i,e):(this._parseBase(A,t,i),"le"===e&&this._initArray(this.toArray(),t,e)))},n.prototype._initNumber=function(A,t,e){A<0&&(this.negative=1,A=-A),A<67108864?(this.words=[67108863&A],this.length=1):A<4503599627370496?(this.words=[67108863&A,A/67108864&67108863],this.length=2):(r(A<9007199254740992),this.words=[67108863&A,A/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),t,e)},n.prototype._initArray=function(A,t,e){if(r("number"==typeof A.length),A.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(A.length/3),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var n,o,s=0;if("be"===e)for(i=A.length-1,n=0;i>=0;i-=3)o=A[i]|A[i-1]<<8|A[i-2]<<16,this.words[n]|=o<<s&67108863,this.words[n+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,n++);else if("le"===e)for(i=0,n=0;i<A.length;i+=3)o=A[i]|A[i+1]<<8|A[i+2]<<16,this.words[n]|=o<<s&67108863,this.words[n+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,n++);return this.strip()},n.prototype._parseHex=function(A,t,e){this.length=Math.ceil((A.length-t)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var i,n=0,o=0;if("be"===e)for(r=A.length-1;r>=t;r-=2)i=E(A,t,r)<<n,this.words[o]|=67108863&i,n>=18?(n-=18,o+=1,this.words[o]|=i>>>26):n+=8;else for(r=(A.length-t)%2==0?t+1:t;r<A.length;r+=2)i=E(A,t,r)<<n,this.words[o]|=67108863&i,n>=18?(n-=18,o+=1,this.words[o]|=i>>>26):n+=8;this.strip()},n.prototype._parseBase=function(A,t,e){this.words=[0],this.length=1;for(var r=0,i=1;i<=67108863;i*=t)r++;r--,i=i/t|0;for(var n=A.length-e,o=n%r,s=Math.min(n,n-o)+e,E=0,g=e;g<s;g+=r)E=a(A,g,g+r,t),this.imuln(i),this.words[0]+E<67108864?this.words[0]+=E:this._iaddn(E);if(0!==o){var B=1;for(E=a(A,g,A.length,t),g=0;g<o;g++)B*=t;this.imuln(B),this.words[0]+E<67108864?this.words[0]+=E:this._iaddn(E)}this.strip()},n.prototype.copy=function(A){A.words=new Array(this.length);for(var t=0;t<this.length;t++)A.words[t]=this.words[t];A.length=this.length,A.negative=this.negative,A.red=this.red},n.prototype.clone=function(){var A=new n(null);return this.copy(A),A},n.prototype._expand=function(A){for(;this.length<A;)this.words[this.length++]=0;return this},n.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},n.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},n.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var g=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],B=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],I=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function c(A,t,e){e.negative=t.negative^A.negative;var r=A.length+t.length|0;e.length=r,r=r-1|0;var i=0|A.words[0],n=0|t.words[0],o=i*n,s=67108863&o,E=o/67108864|0;e.words[0]=s;for(var a=1;a<r;a++){for(var g=E>>>26,B=67108863&E,I=Math.min(a,t.length-1),c=Math.max(0,a-A.length+1);c<=I;c++){var u=a-c|0;g+=(o=(i=0|A.words[u])*(n=0|t.words[c])+B)/67108864|0,B=67108863&o}e.words[a]=0|B,E=0|g}return 0!==E?e.words[a]=0|E:e.length--,e.strip()}n.prototype.toString=function(A,t){var e;if(t=0|t||1,16===(A=A||10)||"hex"===A){e="";for(var i=0,n=0,o=0;o<this.length;o++){var s=this.words[o],E=(16777215&(s<<i|n)).toString(16);e=0!==(n=s>>>24-i&16777215)||o!==this.length-1?g[6-E.length]+E+e:E+e,(i+=2)>=26&&(i-=26,o--)}for(0!==n&&(e=n.toString(16)+e);e.length%t!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(A===(0|A)&&A>=2&&A<=36){var a=B[A],c=I[A];e="";var u=this.clone();for(u.negative=0;!u.isZero();){var h=u.modn(c).toString(A);e=(u=u.idivn(c)).isZero()?h+e:g[a-h.length]+h+e}for(this.isZero()&&(e="0"+e);e.length%t!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}r(!1,"Base should be between 2 and 36")},n.prototype.toNumber=function(){var A=this.words[0];return 2===this.length?A+=67108864*this.words[1]:3===this.length&&1===this.words[2]?A+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-A:A},n.prototype.toJSON=function(){return this.toString(16)},n.prototype.toBuffer=function(A,t){return r(void 0!==o),this.toArrayLike(o,A,t)},n.prototype.toArray=function(A,t){return this.toArrayLike(Array,A,t)},n.prototype.toArrayLike=function(A,t,e){var i=this.byteLength(),n=e||Math.max(1,i);r(i<=n,"byte array longer than desired length"),r(n>0,"Requested array length <= 0"),this.strip();var o,s,E="le"===t,a=new A(n),g=this.clone();if(E){for(s=0;!g.isZero();s++)o=g.andln(255),g.iushrn(8),a[s]=o;for(;s<n;s++)a[s]=0}else{for(s=0;s<n-i;s++)a[s]=0;for(s=0;!g.isZero();s++)o=g.andln(255),g.iushrn(8),a[n-s-1]=o}return a},Math.clz32?n.prototype._countBits=function(A){return 32-Math.clz32(A)}:n.prototype._countBits=function(A){var t=A,e=0;return t>=4096&&(e+=13,t>>>=13),t>=64&&(e+=7,t>>>=7),t>=8&&(e+=4,t>>>=4),t>=2&&(e+=2,t>>>=2),e+t},n.prototype._zeroBits=function(A){if(0===A)return 26;var t=A,e=0;return 0==(8191&t)&&(e+=13,t>>>=13),0==(127&t)&&(e+=7,t>>>=7),0==(15&t)&&(e+=4,t>>>=4),0==(3&t)&&(e+=2,t>>>=2),0==(1&t)&&e++,e},n.prototype.bitLength=function(){var A=this.words[this.length-1],t=this._countBits(A);return 26*(this.length-1)+t},n.prototype.zeroBits=function(){if(this.isZero())return 0;for(var A=0,t=0;t<this.length;t++){var e=this._zeroBits(this.words[t]);if(A+=e,26!==e)break}return A},n.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},n.prototype.toTwos=function(A){return 0!==this.negative?this.abs().inotn(A).iaddn(1):this.clone()},n.prototype.fromTwos=function(A){return this.testn(A-1)?this.notn(A).iaddn(1).ineg():this.clone()},n.prototype.isNeg=function(){return 0!==this.negative},n.prototype.neg=function(){return this.clone().ineg()},n.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},n.prototype.iuor=function(A){for(;this.length<A.length;)this.words[this.length++]=0;for(var t=0;t<A.length;t++)this.words[t]=this.words[t]|A.words[t];return this.strip()},n.prototype.ior=function(A){return r(0==(this.negative|A.negative)),this.iuor(A)},n.prototype.or=function(A){return this.length>A.length?this.clone().ior(A):A.clone().ior(this)},n.prototype.uor=function(A){return this.length>A.length?this.clone().iuor(A):A.clone().iuor(this)},n.prototype.iuand=function(A){var t;t=this.length>A.length?A:this;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]&A.words[e];return this.length=t.length,this.strip()},n.prototype.iand=function(A){return r(0==(this.negative|A.negative)),this.iuand(A)},n.prototype.and=function(A){return this.length>A.length?this.clone().iand(A):A.clone().iand(this)},n.prototype.uand=function(A){return this.length>A.length?this.clone().iuand(A):A.clone().iuand(this)},n.prototype.iuxor=function(A){var t,e;this.length>A.length?(t=this,e=A):(t=A,e=this);for(var r=0;r<e.length;r++)this.words[r]=t.words[r]^e.words[r];if(this!==t)for(;r<t.length;r++)this.words[r]=t.words[r];return this.length=t.length,this.strip()},n.prototype.ixor=function(A){return r(0==(this.negative|A.negative)),this.iuxor(A)},n.prototype.xor=function(A){return this.length>A.length?this.clone().ixor(A):A.clone().ixor(this)},n.prototype.uxor=function(A){return this.length>A.length?this.clone().iuxor(A):A.clone().iuxor(this)},n.prototype.inotn=function(A){r("number"==typeof A&&A>=0);var t=0|Math.ceil(A/26),e=A%26;this._expand(t),e>0&&t--;for(var i=0;i<t;i++)this.words[i]=67108863&~this.words[i];return e>0&&(this.words[i]=~this.words[i]&67108863>>26-e),this.strip()},n.prototype.notn=function(A){return this.clone().inotn(A)},n.prototype.setn=function(A,t){r("number"==typeof A&&A>=0);var e=A/26|0,i=A%26;return this._expand(e+1),this.words[e]=t?this.words[e]|1<<i:this.words[e]&~(1<<i),this.strip()},n.prototype.iadd=function(A){var t,e,r;if(0!==this.negative&&0===A.negative)return this.negative=0,t=this.isub(A),this.negative^=1,this._normSign();if(0===this.negative&&0!==A.negative)return A.negative=0,t=this.isub(A),A.negative=1,t._normSign();this.length>A.length?(e=this,r=A):(e=A,r=this);for(var i=0,n=0;n<r.length;n++)t=(0|e.words[n])+(0|r.words[n])+i,this.words[n]=67108863&t,i=t>>>26;for(;0!==i&&n<e.length;n++)t=(0|e.words[n])+i,this.words[n]=67108863&t,i=t>>>26;if(this.length=e.length,0!==i)this.words[this.length]=i,this.length++;else if(e!==this)for(;n<e.length;n++)this.words[n]=e.words[n];return this},n.prototype.add=function(A){var t;return 0!==A.negative&&0===this.negative?(A.negative=0,t=this.sub(A),A.negative^=1,t):0===A.negative&&0!==this.negative?(this.negative=0,t=A.sub(this),this.negative=1,t):this.length>A.length?this.clone().iadd(A):A.clone().iadd(this)},n.prototype.isub=function(A){if(0!==A.negative){A.negative=0;var t=this.iadd(A);return A.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(A),this.negative=1,this._normSign();var e,r,i=this.cmp(A);if(0===i)return this.negative=0,this.length=1,this.words[0]=0,this;i>0?(e=this,r=A):(e=A,r=this);for(var n=0,o=0;o<r.length;o++)n=(t=(0|e.words[o])-(0|r.words[o])+n)>>26,this.words[o]=67108863&t;for(;0!==n&&o<e.length;o++)n=(t=(0|e.words[o])+n)>>26,this.words[o]=67108863&t;if(0===n&&o<e.length&&e!==this)for(;o<e.length;o++)this.words[o]=e.words[o];return this.length=Math.max(this.length,o),e!==this&&(this.negative=1),this.strip()},n.prototype.sub=function(A){return this.clone().isub(A)};var u=function(A,t,e){var r,i,n,o=A.words,s=t.words,E=e.words,a=0,g=0|o[0],B=8191&g,I=g>>>13,c=0|o[1],u=8191&c,h=c>>>13,l=0|o[2],w=8191&l,f=l>>>13,Q=0|o[3],C=8191&Q,d=Q>>>13,R=0|o[4],p=8191&R,T=R>>>13,U=0|o[5],m=8191&U,M=U>>>13,F=0|o[6],S=8191&F,D=F>>>13,N=0|o[7],G=8191&N,y=N>>>13,V=0|o[8],b=8191&V,k=V>>>13,v=0|o[9],O=8191&v,Z=v>>>13,J=0|s[0],P=8191&J,Y=J>>>13,L=0|s[1],x=8191&L,H=L>>>13,W=0|s[2],j=8191&W,K=W>>>13,q=0|s[3],z=8191&q,X=q>>>13,_=0|s[4],$=8191&_,AA=_>>>13,tA=0|s[5],eA=8191&tA,rA=tA>>>13,iA=0|s[6],nA=8191&iA,oA=iA>>>13,sA=0|s[7],EA=8191&sA,aA=sA>>>13,gA=0|s[8],BA=8191&gA,IA=gA>>>13,cA=0|s[9],uA=8191&cA,hA=cA>>>13;e.negative=A.negative^t.negative,e.length=19;var lA=(a+(r=Math.imul(B,P))|0)+((8191&(i=(i=Math.imul(B,Y))+Math.imul(I,P)|0))<<13)|0;a=((n=Math.imul(I,Y))+(i>>>13)|0)+(lA>>>26)|0,lA&=67108863,r=Math.imul(u,P),i=(i=Math.imul(u,Y))+Math.imul(h,P)|0,n=Math.imul(h,Y);var wA=(a+(r=r+Math.imul(B,x)|0)|0)+((8191&(i=(i=i+Math.imul(B,H)|0)+Math.imul(I,x)|0))<<13)|0;a=((n=n+Math.imul(I,H)|0)+(i>>>13)|0)+(wA>>>26)|0,wA&=67108863,r=Math.imul(w,P),i=(i=Math.imul(w,Y))+Math.imul(f,P)|0,n=Math.imul(f,Y),r=r+Math.imul(u,x)|0,i=(i=i+Math.imul(u,H)|0)+Math.imul(h,x)|0,n=n+Math.imul(h,H)|0;var fA=(a+(r=r+Math.imul(B,j)|0)|0)+((8191&(i=(i=i+Math.imul(B,K)|0)+Math.imul(I,j)|0))<<13)|0;a=((n=n+Math.imul(I,K)|0)+(i>>>13)|0)+(fA>>>26)|0,fA&=67108863,r=Math.imul(C,P),i=(i=Math.imul(C,Y))+Math.imul(d,P)|0,n=Math.imul(d,Y),r=r+Math.imul(w,x)|0,i=(i=i+Math.imul(w,H)|0)+Math.imul(f,x)|0,n=n+Math.imul(f,H)|0,r=r+Math.imul(u,j)|0,i=(i=i+Math.imul(u,K)|0)+Math.imul(h,j)|0,n=n+Math.imul(h,K)|0;var QA=(a+(r=r+Math.imul(B,z)|0)|0)+((8191&(i=(i=i+Math.imul(B,X)|0)+Math.imul(I,z)|0))<<13)|0;a=((n=n+Math.imul(I,X)|0)+(i>>>13)|0)+(QA>>>26)|0,QA&=67108863,r=Math.imul(p,P),i=(i=Math.imul(p,Y))+Math.imul(T,P)|0,n=Math.imul(T,Y),r=r+Math.imul(C,x)|0,i=(i=i+Math.imul(C,H)|0)+Math.imul(d,x)|0,n=n+Math.imul(d,H)|0,r=r+Math.imul(w,j)|0,i=(i=i+Math.imul(w,K)|0)+Math.imul(f,j)|0,n=n+Math.imul(f,K)|0,r=r+Math.imul(u,z)|0,i=(i=i+Math.imul(u,X)|0)+Math.imul(h,z)|0,n=n+Math.imul(h,X)|0;var CA=(a+(r=r+Math.imul(B,$)|0)|0)+((8191&(i=(i=i+Math.imul(B,AA)|0)+Math.imul(I,$)|0))<<13)|0;a=((n=n+Math.imul(I,AA)|0)+(i>>>13)|0)+(CA>>>26)|0,CA&=67108863,r=Math.imul(m,P),i=(i=Math.imul(m,Y))+Math.imul(M,P)|0,n=Math.imul(M,Y),r=r+Math.imul(p,x)|0,i=(i=i+Math.imul(p,H)|0)+Math.imul(T,x)|0,n=n+Math.imul(T,H)|0,r=r+Math.imul(C,j)|0,i=(i=i+Math.imul(C,K)|0)+Math.imul(d,j)|0,n=n+Math.imul(d,K)|0,r=r+Math.imul(w,z)|0,i=(i=i+Math.imul(w,X)|0)+Math.imul(f,z)|0,n=n+Math.imul(f,X)|0,r=r+Math.imul(u,$)|0,i=(i=i+Math.imul(u,AA)|0)+Math.imul(h,$)|0,n=n+Math.imul(h,AA)|0;var dA=(a+(r=r+Math.imul(B,eA)|0)|0)+((8191&(i=(i=i+Math.imul(B,rA)|0)+Math.imul(I,eA)|0))<<13)|0;a=((n=n+Math.imul(I,rA)|0)+(i>>>13)|0)+(dA>>>26)|0,dA&=67108863,r=Math.imul(S,P),i=(i=Math.imul(S,Y))+Math.imul(D,P)|0,n=Math.imul(D,Y),r=r+Math.imul(m,x)|0,i=(i=i+Math.imul(m,H)|0)+Math.imul(M,x)|0,n=n+Math.imul(M,H)|0,r=r+Math.imul(p,j)|0,i=(i=i+Math.imul(p,K)|0)+Math.imul(T,j)|0,n=n+Math.imul(T,K)|0,r=r+Math.imul(C,z)|0,i=(i=i+Math.imul(C,X)|0)+Math.imul(d,z)|0,n=n+Math.imul(d,X)|0,r=r+Math.imul(w,$)|0,i=(i=i+Math.imul(w,AA)|0)+Math.imul(f,$)|0,n=n+Math.imul(f,AA)|0,r=r+Math.imul(u,eA)|0,i=(i=i+Math.imul(u,rA)|0)+Math.imul(h,eA)|0,n=n+Math.imul(h,rA)|0;var RA=(a+(r=r+Math.imul(B,nA)|0)|0)+((8191&(i=(i=i+Math.imul(B,oA)|0)+Math.imul(I,nA)|0))<<13)|0;a=((n=n+Math.imul(I,oA)|0)+(i>>>13)|0)+(RA>>>26)|0,RA&=67108863,r=Math.imul(G,P),i=(i=Math.imul(G,Y))+Math.imul(y,P)|0,n=Math.imul(y,Y),r=r+Math.imul(S,x)|0,i=(i=i+Math.imul(S,H)|0)+Math.imul(D,x)|0,n=n+Math.imul(D,H)|0,r=r+Math.imul(m,j)|0,i=(i=i+Math.imul(m,K)|0)+Math.imul(M,j)|0,n=n+Math.imul(M,K)|0,r=r+Math.imul(p,z)|0,i=(i=i+Math.imul(p,X)|0)+Math.imul(T,z)|0,n=n+Math.imul(T,X)|0,r=r+Math.imul(C,$)|0,i=(i=i+Math.imul(C,AA)|0)+Math.imul(d,$)|0,n=n+Math.imul(d,AA)|0,r=r+Math.imul(w,eA)|0,i=(i=i+Math.imul(w,rA)|0)+Math.imul(f,eA)|0,n=n+Math.imul(f,rA)|0,r=r+Math.imul(u,nA)|0,i=(i=i+Math.imul(u,oA)|0)+Math.imul(h,nA)|0,n=n+Math.imul(h,oA)|0;var pA=(a+(r=r+Math.imul(B,EA)|0)|0)+((8191&(i=(i=i+Math.imul(B,aA)|0)+Math.imul(I,EA)|0))<<13)|0;a=((n=n+Math.imul(I,aA)|0)+(i>>>13)|0)+(pA>>>26)|0,pA&=67108863,r=Math.imul(b,P),i=(i=Math.imul(b,Y))+Math.imul(k,P)|0,n=Math.imul(k,Y),r=r+Math.imul(G,x)|0,i=(i=i+Math.imul(G,H)|0)+Math.imul(y,x)|0,n=n+Math.imul(y,H)|0,r=r+Math.imul(S,j)|0,i=(i=i+Math.imul(S,K)|0)+Math.imul(D,j)|0,n=n+Math.imul(D,K)|0,r=r+Math.imul(m,z)|0,i=(i=i+Math.imul(m,X)|0)+Math.imul(M,z)|0,n=n+Math.imul(M,X)|0,r=r+Math.imul(p,$)|0,i=(i=i+Math.imul(p,AA)|0)+Math.imul(T,$)|0,n=n+Math.imul(T,AA)|0,r=r+Math.imul(C,eA)|0,i=(i=i+Math.imul(C,rA)|0)+Math.imul(d,eA)|0,n=n+Math.imul(d,rA)|0,r=r+Math.imul(w,nA)|0,i=(i=i+Math.imul(w,oA)|0)+Math.imul(f,nA)|0,n=n+Math.imul(f,oA)|0,r=r+Math.imul(u,EA)|0,i=(i=i+Math.imul(u,aA)|0)+Math.imul(h,EA)|0,n=n+Math.imul(h,aA)|0;var TA=(a+(r=r+Math.imul(B,BA)|0)|0)+((8191&(i=(i=i+Math.imul(B,IA)|0)+Math.imul(I,BA)|0))<<13)|0;a=((n=n+Math.imul(I,IA)|0)+(i>>>13)|0)+(TA>>>26)|0,TA&=67108863,r=Math.imul(O,P),i=(i=Math.imul(O,Y))+Math.imul(Z,P)|0,n=Math.imul(Z,Y),r=r+Math.imul(b,x)|0,i=(i=i+Math.imul(b,H)|0)+Math.imul(k,x)|0,n=n+Math.imul(k,H)|0,r=r+Math.imul(G,j)|0,i=(i=i+Math.imul(G,K)|0)+Math.imul(y,j)|0,n=n+Math.imul(y,K)|0,r=r+Math.imul(S,z)|0,i=(i=i+Math.imul(S,X)|0)+Math.imul(D,z)|0,n=n+Math.imul(D,X)|0,r=r+Math.imul(m,$)|0,i=(i=i+Math.imul(m,AA)|0)+Math.imul(M,$)|0,n=n+Math.imul(M,AA)|0,r=r+Math.imul(p,eA)|0,i=(i=i+Math.imul(p,rA)|0)+Math.imul(T,eA)|0,n=n+Math.imul(T,rA)|0,r=r+Math.imul(C,nA)|0,i=(i=i+Math.imul(C,oA)|0)+Math.imul(d,nA)|0,n=n+Math.imul(d,oA)|0,r=r+Math.imul(w,EA)|0,i=(i=i+Math.imul(w,aA)|0)+Math.imul(f,EA)|0,n=n+Math.imul(f,aA)|0,r=r+Math.imul(u,BA)|0,i=(i=i+Math.imul(u,IA)|0)+Math.imul(h,BA)|0,n=n+Math.imul(h,IA)|0;var UA=(a+(r=r+Math.imul(B,uA)|0)|0)+((8191&(i=(i=i+Math.imul(B,hA)|0)+Math.imul(I,uA)|0))<<13)|0;a=((n=n+Math.imul(I,hA)|0)+(i>>>13)|0)+(UA>>>26)|0,UA&=67108863,r=Math.imul(O,x),i=(i=Math.imul(O,H))+Math.imul(Z,x)|0,n=Math.imul(Z,H),r=r+Math.imul(b,j)|0,i=(i=i+Math.imul(b,K)|0)+Math.imul(k,j)|0,n=n+Math.imul(k,K)|0,r=r+Math.imul(G,z)|0,i=(i=i+Math.imul(G,X)|0)+Math.imul(y,z)|0,n=n+Math.imul(y,X)|0,r=r+Math.imul(S,$)|0,i=(i=i+Math.imul(S,AA)|0)+Math.imul(D,$)|0,n=n+Math.imul(D,AA)|0,r=r+Math.imul(m,eA)|0,i=(i=i+Math.imul(m,rA)|0)+Math.imul(M,eA)|0,n=n+Math.imul(M,rA)|0,r=r+Math.imul(p,nA)|0,i=(i=i+Math.imul(p,oA)|0)+Math.imul(T,nA)|0,n=n+Math.imul(T,oA)|0,r=r+Math.imul(C,EA)|0,i=(i=i+Math.imul(C,aA)|0)+Math.imul(d,EA)|0,n=n+Math.imul(d,aA)|0,r=r+Math.imul(w,BA)|0,i=(i=i+Math.imul(w,IA)|0)+Math.imul(f,BA)|0,n=n+Math.imul(f,IA)|0;var mA=(a+(r=r+Math.imul(u,uA)|0)|0)+((8191&(i=(i=i+Math.imul(u,hA)|0)+Math.imul(h,uA)|0))<<13)|0;a=((n=n+Math.imul(h,hA)|0)+(i>>>13)|0)+(mA>>>26)|0,mA&=67108863,r=Math.imul(O,j),i=(i=Math.imul(O,K))+Math.imul(Z,j)|0,n=Math.imul(Z,K),r=r+Math.imul(b,z)|0,i=(i=i+Math.imul(b,X)|0)+Math.imul(k,z)|0,n=n+Math.imul(k,X)|0,r=r+Math.imul(G,$)|0,i=(i=i+Math.imul(G,AA)|0)+Math.imul(y,$)|0,n=n+Math.imul(y,AA)|0,r=r+Math.imul(S,eA)|0,i=(i=i+Math.imul(S,rA)|0)+Math.imul(D,eA)|0,n=n+Math.imul(D,rA)|0,r=r+Math.imul(m,nA)|0,i=(i=i+Math.imul(m,oA)|0)+Math.imul(M,nA)|0,n=n+Math.imul(M,oA)|0,r=r+Math.imul(p,EA)|0,i=(i=i+Math.imul(p,aA)|0)+Math.imul(T,EA)|0,n=n+Math.imul(T,aA)|0,r=r+Math.imul(C,BA)|0,i=(i=i+Math.imul(C,IA)|0)+Math.imul(d,BA)|0,n=n+Math.imul(d,IA)|0;var MA=(a+(r=r+Math.imul(w,uA)|0)|0)+((8191&(i=(i=i+Math.imul(w,hA)|0)+Math.imul(f,uA)|0))<<13)|0;a=((n=n+Math.imul(f,hA)|0)+(i>>>13)|0)+(MA>>>26)|0,MA&=67108863,r=Math.imul(O,z),i=(i=Math.imul(O,X))+Math.imul(Z,z)|0,n=Math.imul(Z,X),r=r+Math.imul(b,$)|0,i=(i=i+Math.imul(b,AA)|0)+Math.imul(k,$)|0,n=n+Math.imul(k,AA)|0,r=r+Math.imul(G,eA)|0,i=(i=i+Math.imul(G,rA)|0)+Math.imul(y,eA)|0,n=n+Math.imul(y,rA)|0,r=r+Math.imul(S,nA)|0,i=(i=i+Math.imul(S,oA)|0)+Math.imul(D,nA)|0,n=n+Math.imul(D,oA)|0,r=r+Math.imul(m,EA)|0,i=(i=i+Math.imul(m,aA)|0)+Math.imul(M,EA)|0,n=n+Math.imul(M,aA)|0,r=r+Math.imul(p,BA)|0,i=(i=i+Math.imul(p,IA)|0)+Math.imul(T,BA)|0,n=n+Math.imul(T,IA)|0;var FA=(a+(r=r+Math.imul(C,uA)|0)|0)+((8191&(i=(i=i+Math.imul(C,hA)|0)+Math.imul(d,uA)|0))<<13)|0;a=((n=n+Math.imul(d,hA)|0)+(i>>>13)|0)+(FA>>>26)|0,FA&=67108863,r=Math.imul(O,$),i=(i=Math.imul(O,AA))+Math.imul(Z,$)|0,n=Math.imul(Z,AA),r=r+Math.imul(b,eA)|0,i=(i=i+Math.imul(b,rA)|0)+Math.imul(k,eA)|0,n=n+Math.imul(k,rA)|0,r=r+Math.imul(G,nA)|0,i=(i=i+Math.imul(G,oA)|0)+Math.imul(y,nA)|0,n=n+Math.imul(y,oA)|0,r=r+Math.imul(S,EA)|0,i=(i=i+Math.imul(S,aA)|0)+Math.imul(D,EA)|0,n=n+Math.imul(D,aA)|0,r=r+Math.imul(m,BA)|0,i=(i=i+Math.imul(m,IA)|0)+Math.imul(M,BA)|0,n=n+Math.imul(M,IA)|0;var SA=(a+(r=r+Math.imul(p,uA)|0)|0)+((8191&(i=(i=i+Math.imul(p,hA)|0)+Math.imul(T,uA)|0))<<13)|0;a=((n=n+Math.imul(T,hA)|0)+(i>>>13)|0)+(SA>>>26)|0,SA&=67108863,r=Math.imul(O,eA),i=(i=Math.imul(O,rA))+Math.imul(Z,eA)|0,n=Math.imul(Z,rA),r=r+Math.imul(b,nA)|0,i=(i=i+Math.imul(b,oA)|0)+Math.imul(k,nA)|0,n=n+Math.imul(k,oA)|0,r=r+Math.imul(G,EA)|0,i=(i=i+Math.imul(G,aA)|0)+Math.imul(y,EA)|0,n=n+Math.imul(y,aA)|0,r=r+Math.imul(S,BA)|0,i=(i=i+Math.imul(S,IA)|0)+Math.imul(D,BA)|0,n=n+Math.imul(D,IA)|0;var DA=(a+(r=r+Math.imul(m,uA)|0)|0)+((8191&(i=(i=i+Math.imul(m,hA)|0)+Math.imul(M,uA)|0))<<13)|0;a=((n=n+Math.imul(M,hA)|0)+(i>>>13)|0)+(DA>>>26)|0,DA&=67108863,r=Math.imul(O,nA),i=(i=Math.imul(O,oA))+Math.imul(Z,nA)|0,n=Math.imul(Z,oA),r=r+Math.imul(b,EA)|0,i=(i=i+Math.imul(b,aA)|0)+Math.imul(k,EA)|0,n=n+Math.imul(k,aA)|0,r=r+Math.imul(G,BA)|0,i=(i=i+Math.imul(G,IA)|0)+Math.imul(y,BA)|0,n=n+Math.imul(y,IA)|0;var NA=(a+(r=r+Math.imul(S,uA)|0)|0)+((8191&(i=(i=i+Math.imul(S,hA)|0)+Math.imul(D,uA)|0))<<13)|0;a=((n=n+Math.imul(D,hA)|0)+(i>>>13)|0)+(NA>>>26)|0,NA&=67108863,r=Math.imul(O,EA),i=(i=Math.imul(O,aA))+Math.imul(Z,EA)|0,n=Math.imul(Z,aA),r=r+Math.imul(b,BA)|0,i=(i=i+Math.imul(b,IA)|0)+Math.imul(k,BA)|0,n=n+Math.imul(k,IA)|0;var GA=(a+(r=r+Math.imul(G,uA)|0)|0)+((8191&(i=(i=i+Math.imul(G,hA)|0)+Math.imul(y,uA)|0))<<13)|0;a=((n=n+Math.imul(y,hA)|0)+(i>>>13)|0)+(GA>>>26)|0,GA&=67108863,r=Math.imul(O,BA),i=(i=Math.imul(O,IA))+Math.imul(Z,BA)|0,n=Math.imul(Z,IA);var yA=(a+(r=r+Math.imul(b,uA)|0)|0)+((8191&(i=(i=i+Math.imul(b,hA)|0)+Math.imul(k,uA)|0))<<13)|0;a=((n=n+Math.imul(k,hA)|0)+(i>>>13)|0)+(yA>>>26)|0,yA&=67108863;var VA=(a+(r=Math.imul(O,uA))|0)+((8191&(i=(i=Math.imul(O,hA))+Math.imul(Z,uA)|0))<<13)|0;return a=((n=Math.imul(Z,hA))+(i>>>13)|0)+(VA>>>26)|0,VA&=67108863,E[0]=lA,E[1]=wA,E[2]=fA,E[3]=QA,E[4]=CA,E[5]=dA,E[6]=RA,E[7]=pA,E[8]=TA,E[9]=UA,E[10]=mA,E[11]=MA,E[12]=FA,E[13]=SA,E[14]=DA,E[15]=NA,E[16]=GA,E[17]=yA,E[18]=VA,0!==a&&(E[19]=a,e.length++),e};function h(A,t,e){return(new l).mulp(A,t,e)}function l(A,t){this.x=A,this.y=t}Math.imul||(u=c),n.prototype.mulTo=function(A,t){var e=this.length+A.length;return 10===this.length&&10===A.length?u(this,A,t):e<63?c(this,A,t):e<1024?function(A,t,e){e.negative=t.negative^A.negative,e.length=A.length+t.length;for(var r=0,i=0,n=0;n<e.length-1;n++){var o=i;i=0;for(var s=67108863&r,E=Math.min(n,t.length-1),a=Math.max(0,n-A.length+1);a<=E;a++){var g=n-a,B=(0|A.words[g])*(0|t.words[a]),I=67108863&B;s=67108863&(I=I+s|0),i+=(o=(o=o+(B/67108864|0)|0)+(I>>>26)|0)>>>26,o&=67108863}e.words[n]=s,r=o,o=i}return 0!==r?e.words[n]=r:e.length--,e.strip()}(this,A,t):h(this,A,t)},l.prototype.makeRBT=function(A){for(var t=new Array(A),e=n.prototype._countBits(A)-1,r=0;r<A;r++)t[r]=this.revBin(r,e,A);return t},l.prototype.revBin=function(A,t,e){if(0===A||A===e-1)return A;for(var r=0,i=0;i<t;i++)r|=(1&A)<<t-i-1,A>>=1;return r},l.prototype.permute=function(A,t,e,r,i,n){for(var o=0;o<n;o++)r[o]=t[A[o]],i[o]=e[A[o]]},l.prototype.transform=function(A,t,e,r,i,n){this.permute(n,A,t,e,r,i);for(var o=1;o<i;o<<=1)for(var s=o<<1,E=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),g=0;g<i;g+=s)for(var B=E,I=a,c=0;c<o;c++){var u=e[g+c],h=r[g+c],l=e[g+c+o],w=r[g+c+o],f=B*l-I*w;w=B*w+I*l,l=f,e[g+c]=u+l,r[g+c]=h+w,e[g+c+o]=u-l,r[g+c+o]=h-w,c!==s&&(f=E*B-a*I,I=E*I+a*B,B=f)}},l.prototype.guessLen13b=function(A,t){var e=1|Math.max(t,A),r=1&e,i=0;for(e=e/2|0;e;e>>>=1)i++;return 1<<i+1+r},l.prototype.conjugate=function(A,t,e){if(!(e<=1))for(var r=0;r<e/2;r++){var i=A[r];A[r]=A[e-r-1],A[e-r-1]=i,i=t[r],t[r]=-t[e-r-1],t[e-r-1]=-i}},l.prototype.normalize13b=function(A,t){for(var e=0,r=0;r<t/2;r++){var i=8192*Math.round(A[2*r+1]/t)+Math.round(A[2*r]/t)+e;A[r]=67108863&i,e=i<67108864?0:i/67108864|0}return A},l.prototype.convert13b=function(A,t,e,i){for(var n=0,o=0;o<t;o++)n+=0|A[o],e[2*o]=8191&n,n>>>=13,e[2*o+1]=8191&n,n>>>=13;for(o=2*t;o<i;++o)e[o]=0;r(0===n),r(0==(-8192&n))},l.prototype.stub=function(A){for(var t=new Array(A),e=0;e<A;e++)t[e]=0;return t},l.prototype.mulp=function(A,t,e){var r=2*this.guessLen13b(A.length,t.length),i=this.makeRBT(r),n=this.stub(r),o=new Array(r),s=new Array(r),E=new Array(r),a=new Array(r),g=new Array(r),B=new Array(r),I=e.words;I.length=r,this.convert13b(A.words,A.length,o,r),this.convert13b(t.words,t.length,a,r),this.transform(o,n,s,E,r,i),this.transform(a,n,g,B,r,i);for(var c=0;c<r;c++){var u=s[c]*g[c]-E[c]*B[c];E[c]=s[c]*B[c]+E[c]*g[c],s[c]=u}return this.conjugate(s,E,r),this.transform(s,E,I,n,r,i),this.conjugate(I,n,r),this.normalize13b(I,r),e.negative=A.negative^t.negative,e.length=A.length+t.length,e.strip()},n.prototype.mul=function(A){var t=new n(null);return t.words=new Array(this.length+A.length),this.mulTo(A,t)},n.prototype.mulf=function(A){var t=new n(null);return t.words=new Array(this.length+A.length),h(this,A,t)},n.prototype.imul=function(A){return this.clone().mulTo(A,this)},n.prototype.imuln=function(A){r("number"==typeof A),r(A<67108864);for(var t=0,e=0;e<this.length;e++){var i=(0|this.words[e])*A,n=(67108863&i)+(67108863&t);t>>=26,t+=i/67108864|0,t+=n>>>26,this.words[e]=67108863&n}return 0!==t&&(this.words[e]=t,this.length++),this},n.prototype.muln=function(A){return this.clone().imuln(A)},n.prototype.sqr=function(){return this.mul(this)},n.prototype.isqr=function(){return this.imul(this.clone())},n.prototype.pow=function(A){var t=function(A){for(var t=new Array(A.bitLength()),e=0;e<t.length;e++){var r=e/26|0,i=e%26;t[e]=(A.words[r]&1<<i)>>>i}return t}(A);if(0===t.length)return new n(1);for(var e=this,r=0;r<t.length&&0===t[r];r++,e=e.sqr());if(++r<t.length)for(var i=e.sqr();r<t.length;r++,i=i.sqr())0!==t[r]&&(e=e.mul(i));return e},n.prototype.iushln=function(A){r("number"==typeof A&&A>=0);var t,e=A%26,i=(A-e)/26,n=67108863>>>26-e<<26-e;if(0!==e){var o=0;for(t=0;t<this.length;t++){var s=this.words[t]&n,E=(0|this.words[t])-s<<e;this.words[t]=E|o,o=s>>>26-e}o&&(this.words[t]=o,this.length++)}if(0!==i){for(t=this.length-1;t>=0;t--)this.words[t+i]=this.words[t];for(t=0;t<i;t++)this.words[t]=0;this.length+=i}return this.strip()},n.prototype.ishln=function(A){return r(0===this.negative),this.iushln(A)},n.prototype.iushrn=function(A,t,e){var i;r("number"==typeof A&&A>=0),i=t?(t-t%26)/26:0;var n=A%26,o=Math.min((A-n)/26,this.length),s=67108863^67108863>>>n<<n,E=e;if(i-=o,i=Math.max(0,i),E){for(var a=0;a<o;a++)E.words[a]=this.words[a];E.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var g=0;for(a=this.length-1;a>=0&&(0!==g||a>=i);a--){var B=0|this.words[a];this.words[a]=g<<26-n|B>>>n,g=B&s}return E&&0!==g&&(E.words[E.length++]=g),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},n.prototype.ishrn=function(A,t,e){return r(0===this.negative),this.iushrn(A,t,e)},n.prototype.shln=function(A){return this.clone().ishln(A)},n.prototype.ushln=function(A){return this.clone().iushln(A)},n.prototype.shrn=function(A){return this.clone().ishrn(A)},n.prototype.ushrn=function(A){return this.clone().iushrn(A)},n.prototype.testn=function(A){r("number"==typeof A&&A>=0);var t=A%26,e=(A-t)/26,i=1<<t;return!(this.length<=e)&&!!(this.words[e]&i)},n.prototype.imaskn=function(A){r("number"==typeof A&&A>=0);var t=A%26,e=(A-t)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==t&&e++,this.length=Math.min(e,this.length),0!==t){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this.strip()},n.prototype.maskn=function(A){return this.clone().imaskn(A)},n.prototype.iaddn=function(A){return r("number"==typeof A),r(A<67108864),A<0?this.isubn(-A):0!==this.negative?1===this.length&&(0|this.words[0])<A?(this.words[0]=A-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(A),this.negative=1,this):this._iaddn(A)},n.prototype._iaddn=function(A){this.words[0]+=A;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},n.prototype.isubn=function(A){if(r("number"==typeof A),r(A<67108864),A<0)return this.iaddn(-A);if(0!==this.negative)return this.negative=0,this.iaddn(A),this.negative=1,this;if(this.words[0]-=A,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},n.prototype.addn=function(A){return this.clone().iaddn(A)},n.prototype.subn=function(A){return this.clone().isubn(A)},n.prototype.iabs=function(){return this.negative=0,this},n.prototype.abs=function(){return this.clone().iabs()},n.prototype._ishlnsubmul=function(A,t,e){var i,n,o=A.length+e;this._expand(o);var s=0;for(i=0;i<A.length;i++){n=(0|this.words[i+e])+s;var E=(0|A.words[i])*t;s=((n-=67108863&E)>>26)-(E/67108864|0),this.words[i+e]=67108863&n}for(;i<this.length-e;i++)s=(n=(0|this.words[i+e])+s)>>26,this.words[i+e]=67108863&n;if(0===s)return this.strip();for(r(-1===s),s=0,i=0;i<this.length;i++)s=(n=-(0|this.words[i])+s)>>26,this.words[i]=67108863&n;return this.negative=1,this.strip()},n.prototype._wordDiv=function(A,t){var e=(this.length,A.length),r=this.clone(),i=A,o=0|i.words[i.length-1];0!==(e=26-this._countBits(o))&&(i=i.ushln(e),r.iushln(e),o=0|i.words[i.length-1]);var s,E=r.length-i.length;if("mod"!==t){(s=new n(null)).length=E+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var g=r.clone()._ishlnsubmul(i,1,E);0===g.negative&&(r=g,s&&(s.words[E]=1));for(var B=E-1;B>=0;B--){var I=67108864*(0|r.words[i.length+B])+(0|r.words[i.length+B-1]);for(I=Math.min(I/o|0,67108863),r._ishlnsubmul(i,I,B);0!==r.negative;)I--,r.negative=0,r._ishlnsubmul(i,1,B),r.isZero()||(r.negative^=1);s&&(s.words[B]=I)}return s&&s.strip(),r.strip(),"div"!==t&&0!==e&&r.iushrn(e),{div:s||null,mod:r}},n.prototype.divmod=function(A,t,e){return r(!A.isZero()),this.isZero()?{div:new n(0),mod:new n(0)}:0!==this.negative&&0===A.negative?(s=this.neg().divmod(A,t),"mod"!==t&&(i=s.div.neg()),"div"!==t&&(o=s.mod.neg(),e&&0!==o.negative&&o.iadd(A)),{div:i,mod:o}):0===this.negative&&0!==A.negative?(s=this.divmod(A.neg(),t),"mod"!==t&&(i=s.div.neg()),{div:i,mod:s.mod}):0!=(this.negative&A.negative)?(s=this.neg().divmod(A.neg(),t),"div"!==t&&(o=s.mod.neg(),e&&0!==o.negative&&o.isub(A)),{div:s.div,mod:o}):A.length>this.length||this.cmp(A)<0?{div:new n(0),mod:this}:1===A.length?"div"===t?{div:this.divn(A.words[0]),mod:null}:"mod"===t?{div:null,mod:new n(this.modn(A.words[0]))}:{div:this.divn(A.words[0]),mod:new n(this.modn(A.words[0]))}:this._wordDiv(A,t);var i,o,s},n.prototype.div=function(A){return this.divmod(A,"div",!1).div},n.prototype.mod=function(A){return this.divmod(A,"mod",!1).mod},n.prototype.umod=function(A){return this.divmod(A,"mod",!0).mod},n.prototype.divRound=function(A){var t=this.divmod(A);if(t.mod.isZero())return t.div;var e=0!==t.div.negative?t.mod.isub(A):t.mod,r=A.ushrn(1),i=A.andln(1),n=e.cmp(r);return n<0||1===i&&0===n?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},n.prototype.modn=function(A){r(A<=67108863);for(var t=(1<<26)%A,e=0,i=this.length-1;i>=0;i--)e=(t*e+(0|this.words[i]))%A;return e},n.prototype.idivn=function(A){r(A<=67108863);for(var t=0,e=this.length-1;e>=0;e--){var i=(0|this.words[e])+67108864*t;this.words[e]=i/A|0,t=i%A}return this.strip()},n.prototype.divn=function(A){return this.clone().idivn(A)},n.prototype.egcd=function(A){r(0===A.negative),r(!A.isZero());var t=this,e=A.clone();t=0!==t.negative?t.umod(A):t.clone();for(var i=new n(1),o=new n(0),s=new n(0),E=new n(1),a=0;t.isEven()&&e.isEven();)t.iushrn(1),e.iushrn(1),++a;for(var g=e.clone(),B=t.clone();!t.isZero();){for(var I=0,c=1;0==(t.words[0]&c)&&I<26;++I,c<<=1);if(I>0)for(t.iushrn(I);I-- >0;)(i.isOdd()||o.isOdd())&&(i.iadd(g),o.isub(B)),i.iushrn(1),o.iushrn(1);for(var u=0,h=1;0==(e.words[0]&h)&&u<26;++u,h<<=1);if(u>0)for(e.iushrn(u);u-- >0;)(s.isOdd()||E.isOdd())&&(s.iadd(g),E.isub(B)),s.iushrn(1),E.iushrn(1);t.cmp(e)>=0?(t.isub(e),i.isub(s),o.isub(E)):(e.isub(t),s.isub(i),E.isub(o))}return{a:s,b:E,gcd:e.iushln(a)}},n.prototype._invmp=function(A){r(0===A.negative),r(!A.isZero());var t=this,e=A.clone();t=0!==t.negative?t.umod(A):t.clone();for(var i,o=new n(1),s=new n(0),E=e.clone();t.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,g=1;0==(t.words[0]&g)&&a<26;++a,g<<=1);if(a>0)for(t.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(E),o.iushrn(1);for(var B=0,I=1;0==(e.words[0]&I)&&B<26;++B,I<<=1);if(B>0)for(e.iushrn(B);B-- >0;)s.isOdd()&&s.iadd(E),s.iushrn(1);t.cmp(e)>=0?(t.isub(e),o.isub(s)):(e.isub(t),s.isub(o))}return(i=0===t.cmpn(1)?o:s).cmpn(0)<0&&i.iadd(A),i},n.prototype.gcd=function(A){if(this.isZero())return A.abs();if(A.isZero())return this.abs();var t=this.clone(),e=A.clone();t.negative=0,e.negative=0;for(var r=0;t.isEven()&&e.isEven();r++)t.iushrn(1),e.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;e.isEven();)e.iushrn(1);var i=t.cmp(e);if(i<0){var n=t;t=e,e=n}else if(0===i||0===e.cmpn(1))break;t.isub(e)}return e.iushln(r)},n.prototype.invm=function(A){return this.egcd(A).a.umod(A)},n.prototype.isEven=function(){return 0==(1&this.words[0])},n.prototype.isOdd=function(){return 1==(1&this.words[0])},n.prototype.andln=function(A){return this.words[0]&A},n.prototype.bincn=function(A){r("number"==typeof A);var t=A%26,e=(A-t)/26,i=1<<t;if(this.length<=e)return this._expand(e+1),this.words[e]|=i,this;for(var n=i,o=e;0!==n&&o<this.length;o++){var s=0|this.words[o];n=(s+=n)>>>26,s&=67108863,this.words[o]=s}return 0!==n&&(this.words[o]=n,this.length++),this},n.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},n.prototype.cmpn=function(A){var t,e=A<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this.strip(),this.length>1)t=1;else{e&&(A=-A),r(A<=67108863,"Number is too big");var i=0|this.words[0];t=i===A?0:i<A?-1:1}return 0!==this.negative?0|-t:t},n.prototype.cmp=function(A){if(0!==this.negative&&0===A.negative)return-1;if(0===this.negative&&0!==A.negative)return 1;var t=this.ucmp(A);return 0!==this.negative?0|-t:t},n.prototype.ucmp=function(A){if(this.length>A.length)return 1;if(this.length<A.length)return-1;for(var t=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],i=0|A.words[e];if(r!==i){r<i?t=-1:r>i&&(t=1);break}}return t},n.prototype.gtn=function(A){return 1===this.cmpn(A)},n.prototype.gt=function(A){return 1===this.cmp(A)},n.prototype.gten=function(A){return this.cmpn(A)>=0},n.prototype.gte=function(A){return this.cmp(A)>=0},n.prototype.ltn=function(A){return-1===this.cmpn(A)},n.prototype.lt=function(A){return-1===this.cmp(A)},n.prototype.lten=function(A){return this.cmpn(A)<=0},n.prototype.lte=function(A){return this.cmp(A)<=0},n.prototype.eqn=function(A){return 0===this.cmpn(A)},n.prototype.eq=function(A){return 0===this.cmp(A)},n.red=function(A){return new p(A)},n.prototype.toRed=function(A){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),A.convertTo(this)._forceRed(A)},n.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},n.prototype._forceRed=function(A){return this.red=A,this},n.prototype.forceRed=function(A){return r(!this.red,"Already a number in reduction context"),this._forceRed(A)},n.prototype.redAdd=function(A){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,A)},n.prototype.redIAdd=function(A){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,A)},n.prototype.redSub=function(A){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,A)},n.prototype.redISub=function(A){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,A)},n.prototype.redShl=function(A){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,A)},n.prototype.redMul=function(A){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,A),this.red.mul(this,A)},n.prototype.redIMul=function(A){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,A),this.red.imul(this,A)},n.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},n.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},n.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},n.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},n.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},n.prototype.redPow=function(A){return r(this.red&&!A.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,A)};var w={k256:null,p224:null,p192:null,p25519:null};function f(A,t){this.name=A,this.p=new n(t,16),this.n=this.p.bitLength(),this.k=new n(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function Q(){f.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function C(){f.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function d(){f.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function R(){f.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function p(A){if("string"==typeof A){var t=n._prime(A);this.m=t.p,this.prime=t}else r(A.gtn(1),"modulus must be greater than 1"),this.m=A,this.prime=null}function T(A){p.call(this,A),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new n(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}f.prototype._tmp=function(){var A=new n(null);return A.words=new Array(Math.ceil(this.n/13)),A},f.prototype.ireduce=function(A){var t,e=A;do{this.split(e,this.tmp),t=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(t>this.n);var r=t<this.n?-1:e.ucmp(this.p);return 0===r?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):void 0!==e.strip?e.strip():e._strip(),e},f.prototype.split=function(A,t){A.iushrn(this.n,0,t)},f.prototype.imulK=function(A){return A.imul(this.k)},i(Q,f),Q.prototype.split=function(A,t){for(var e=Math.min(A.length,9),r=0;r<e;r++)t.words[r]=A.words[r];if(t.length=e,A.length<=9)return A.words[0]=0,void(A.length=1);var i=A.words[9];for(t.words[t.length++]=4194303&i,r=10;r<A.length;r++){var n=0|A.words[r];A.words[r-10]=(4194303&n)<<4|i>>>22,i=n}i>>>=22,A.words[r-10]=i,0===i&&A.length>10?A.length-=10:A.length-=9},Q.prototype.imulK=function(A){A.words[A.length]=0,A.words[A.length+1]=0,A.length+=2;for(var t=0,e=0;e<A.length;e++){var r=0|A.words[e];t+=977*r,A.words[e]=67108863&t,t=64*r+(t/67108864|0)}return 0===A.words[A.length-1]&&(A.length--,0===A.words[A.length-1]&&A.length--),A},i(C,f),i(d,f),i(R,f),R.prototype.imulK=function(A){for(var t=0,e=0;e<A.length;e++){var r=19*(0|A.words[e])+t,i=67108863&r;r>>>=26,A.words[e]=i,t=r}return 0!==t&&(A.words[A.length++]=t),A},n._prime=function(A){if(w[A])return w[A];var t;if("k256"===A)t=new Q;else if("p224"===A)t=new C;else if("p192"===A)t=new d;else{if("p25519"!==A)throw new Error("Unknown prime "+A);t=new R}return w[A]=t,t},p.prototype._verify1=function(A){r(0===A.negative,"red works only with positives"),r(A.red,"red works only with red numbers")},p.prototype._verify2=function(A,t){r(0==(A.negative|t.negative),"red works only with positives"),r(A.red&&A.red===t.red,"red works only with red numbers")},p.prototype.imod=function(A){return this.prime?this.prime.ireduce(A)._forceRed(this):A.umod(this.m)._forceRed(this)},p.prototype.neg=function(A){return A.isZero()?A.clone():this.m.sub(A)._forceRed(this)},p.prototype.add=function(A,t){this._verify2(A,t);var e=A.add(t);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},p.prototype.iadd=function(A,t){this._verify2(A,t);var e=A.iadd(t);return e.cmp(this.m)>=0&&e.isub(this.m),e},p.prototype.sub=function(A,t){this._verify2(A,t);var e=A.sub(t);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},p.prototype.isub=function(A,t){this._verify2(A,t);var e=A.isub(t);return e.cmpn(0)<0&&e.iadd(this.m),e},p.prototype.shl=function(A,t){return this._verify1(A),this.imod(A.ushln(t))},p.prototype.imul=function(A,t){return this._verify2(A,t),this.imod(A.imul(t))},p.prototype.mul=function(A,t){return this._verify2(A,t),this.imod(A.mul(t))},p.prototype.isqr=function(A){return this.imul(A,A.clone())},p.prototype.sqr=function(A){return this.mul(A,A)},p.prototype.sqrt=function(A){if(A.isZero())return A.clone();var t=this.m.andln(3);if(r(t%2==1),3===t){var e=this.m.add(new n(1)).iushrn(2);return this.pow(A,e)}for(var i=this.m.subn(1),o=0;!i.isZero()&&0===i.andln(1);)o++,i.iushrn(1);r(!i.isZero());var s=new n(1).toRed(this),E=s.redNeg(),a=this.m.subn(1).iushrn(1),g=this.m.bitLength();for(g=new n(2*g*g).toRed(this);0!==this.pow(g,a).cmp(E);)g.redIAdd(E);for(var B=this.pow(g,i),I=this.pow(A,i.addn(1).iushrn(1)),c=this.pow(A,i),u=o;0!==c.cmp(s);){for(var h=c,l=0;0!==h.cmp(s);l++)h=h.redSqr();r(l<u);var w=this.pow(B,new n(1).iushln(u-l-1));I=I.redMul(w),B=w.redSqr(),c=c.redMul(B),u=l}return I},p.prototype.invm=function(A){var t=A._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},p.prototype.pow=function(A,t){if(t.isZero())return new n(1).toRed(this);if(0===t.cmpn(1))return A.clone();var e=new Array(16);e[0]=new n(1).toRed(this),e[1]=A;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],A);var i=e[0],o=0,s=0,E=t.bitLength()%26;for(0===E&&(E=26),r=t.length-1;r>=0;r--){for(var a=t.words[r],g=E-1;g>=0;g--){var B=a>>g&1;i!==e[0]&&(i=this.sqr(i)),0!==B||0!==o?(o<<=1,o|=B,(4===++s||0===r&&0===g)&&(i=this.mul(i,e[o]),s=0,o=0)):s=0}E=26}return i},p.prototype.convertTo=function(A){var t=A.umod(this.m);return t===A?t.clone():t},p.prototype.convertFrom=function(A){var t=A.clone();return t.red=null,t},n.mont=function(A){return new T(A)},i(T,p),T.prototype.convertTo=function(A){return this.imod(A.ushln(this.shift))},T.prototype.convertFrom=function(A){var t=this.imod(A.mul(this.rinv));return t.red=null,t},T.prototype.imul=function(A,t){if(A.isZero()||t.isZero())return A.words[0]=0,A.length=1,A;var e=A.imul(t),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=e.isub(r).iushrn(this.shift),n=i;return i.cmp(this.m)>=0?n=i.isub(this.m):i.cmpn(0)<0&&(n=i.iadd(this.m)),n._forceRed(this)},T.prototype.mul=function(A,t){if(A.isZero()||t.isZero())return new n(0)._forceRed(this);var e=A.mul(t),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),i=e.isub(r).iushrn(this.shift),o=i;return i.cmp(this.m)>=0?o=i.isub(this.m):i.cmpn(0)<0&&(o=i.iadd(this.m)),o._forceRed(this)},T.prototype.invm=function(A){return this.imod(A._invmp(this.m).mul(this.r2))._forceRed(this)}}(A,this)}).call(this,e(78)(A))},,function(A,t,e){var r=t;r.utils=e(10),r.common=e(17),r.sha=e(81),r.ripemd=e(85),r.hmac=e(86),r.sha1=r.sha.sha1,r.sha256=r.sha.sha256,r.sha224=r.sha.sha224,r.sha384=r.sha.sha384,r.sha512=r.sha.sha512,r.ripemd160=r.ripemd.ripemd160},function(A,t,e){"use strict";e.d(t,"a",(function(){return a})),e.d(t,"b",(function(){return E})),e.d(t,"c",(function(){return s})),e.d(t,"d",(function(){return g}));var r={},i={},n=function(A,t){i[A]=t},o=function(A){var t=function(t,e){Object.assign(this,e),this.name=A,this.message=t||A,this.stack=(new Error).stack};return t.prototype=new Error,r[A]=t,t};o("AccountNameRequired"),o("AccountNotSupported"),o("AmountRequired"),o("BluetoothRequired"),o("BtcUnmatchedApp"),o("CantOpenDevice"),o("CashAddrNotSupported"),o("CurrencyNotSupported"),o("DeviceAppVerifyNotSupported"),o("DeviceGenuineSocketEarlyClose"),o("DeviceNotGenuine"),o("DeviceOnDashboardExpected"),o("DeviceOnDashboardUnexpected"),o("DeviceInOSUExpected"),o("DeviceHalted"),o("DeviceNameInvalid"),o("DeviceSocketFail"),o("DeviceSocketNoBulkStatus"),o("DisconnectedDevice"),o("DisconnectedDeviceDuringOperation"),o("EnpointConfig"),o("EthAppPleaseEnableContractData"),o("FeeEstimationFailed"),o("FirmwareNotRecognized"),o("HardResetFail"),o("InvalidXRPTag"),o("InvalidAddress"),o("InvalidAddressBecauseDestinationIsAlsoSource"),o("LatestMCUInstalledError"),o("UnknownMCU"),o("LedgerAPIError"),o("LedgerAPIErrorWithMessage"),o("LedgerAPINotAvailable"),o("ManagerAppAlreadyInstalled"),o("ManagerAppRelyOnBTC"),o("ManagerAppDepInstallRequired"),o("ManagerAppDepUninstallRequired"),o("ManagerDeviceLocked"),o("ManagerFirmwareNotEnoughSpace"),o("ManagerNotEnoughSpace"),o("ManagerUninstallBTCDep"),o("NetworkDown"),o("NoAddressesFound"),o("NotEnoughBalance"),o("NotEnoughBalanceToDelegate"),o("NotEnoughBalanceInParentAccount"),o("NotEnoughSpendableBalance"),o("NotEnoughBalanceBecauseDestinationNotCreated"),o("NoAccessToCamera"),o("NotEnoughGas"),o("NotSupportedLegacyAddress"),o("GasLessThanEstimate"),o("PasswordsDontMatch"),o("PasswordIncorrect"),o("RecommendSubAccountsToEmpty"),o("RecommendUndelegation"),o("TimeoutTagged"),o("UnexpectedBootloader"),o("MCUNotGenuineToDashboard"),o("RecipientRequired"),o("UnavailableTezosOriginatedAccountReceive"),o("UnavailableTezosOriginatedAccountSend"),o("UpdateFetchFileFail"),o("UpdateIncorrectHash"),o("UpdateIncorrectSig"),o("UpdateYourApp"),o("UserRefusedDeviceNameChange"),o("UserRefusedAddress"),o("UserRefusedFirmwareUpdate"),o("UserRefusedAllowManager"),o("UserRefusedOnDevice"),o("TransportOpenUserCancelled"),o("TransportInterfaceNotAvailable");var s=o("TransportRaceCondition");o("TransportWebUSBGestureRequired"),o("DeviceShouldStayInApp"),o("WebsocketConnectionError"),o("WebsocketConnectionFailed"),o("WrongDeviceForAccount"),o("WrongAppForCurrency"),o("ETHAddressNonEIP"),o("CantScanQRCode"),o("FeeNotLoaded"),o("FeeRequired"),o("FeeTooHigh"),o("SyncError"),o("PairingFailed"),o("GenuineCheckFailed"),o("LedgerAPI4xx"),o("LedgerAPI5xx"),o("FirmwareOrAppUpdateRequired"),o("NoDBPathGiven"),o("DBWrongPassword"),o("DBNotReset");function E(A,t){this.name="TransportError",this.message=A,this.stack=(new Error).stack,this.id=t}E.prototype=new Error,n("TransportError",(function(A){return new E(A.message,A.id)}));var a={PIN_REMAINING_ATTEMPTS:25536,INCORRECT_LENGTH:26368,MISSING_CRITICAL_PARAMETER:26624,COMMAND_INCOMPATIBLE_FILE_STRUCTURE:27009,SECURITY_STATUS_NOT_SATISFIED:27010,CONDITIONS_OF_USE_NOT_SATISFIED:27013,INCORRECT_DATA:27264,NOT_ENOUGH_MEMORY_SPACE:27268,REFERENCED_DATA_NOT_FOUND:27272,FILE_ALREADY_EXISTS:27273,INCORRECT_P1_P2:27392,INS_NOT_SUPPORTED:27904,CLA_NOT_SUPPORTED:28160,TECHNICAL_PROBLEM:28416,OK:36864,MEMORY_PROBLEM:37440,NO_EF_SELECTED:37888,INVALID_OFFSET:37890,FILE_NOT_FOUND:37892,INCONSISTENT_FILE:37896,ALGORITHM_NOT_SUPPORTED:38020,INVALID_KCV:38021,CODE_NOT_INITIALIZED:38914,ACCESS_CONDITION_NOT_FULFILLED:38916,CONTRADICTION_SECRET_CODE_STATUS:38920,CONTRADICTION_INVALIDATION:38928,CODE_BLOCKED:38976,MAX_VALUE_REACHED:38992,GP_AUTH_FAILED:25344,LICENSING:28482,HALTED:28586};function g(A){this.name="TransportStatusError";var t=Object.keys(a).find((function(t){return a[t]===A}))||"UNKNOWN_ERROR",e=function(A){switch(A){case 26368:return"Incorrect length";case 26624:return"Missing critical parameter";case 27010:return"Security not satisfied (dongle locked or have invalid access rights)";case 27013:return"Condition of use not satisfied (denied by the user?)";case 27264:return"Invalid data received";case 27392:return"Invalid parameter received"}if(28416<=A&&A<=28671)return"Internal error, please report"}(A)||t,r=A.toString(16);this.message="Ledger device: "+e+" (0x"+r+")",this.stack=(new Error).stack,this.statusCode=A,this.statusText=t}g.prototype=new Error,n("TransportStatusError",(function(A){return new g(A.statusCode)}))},function(A,t,e){"use strict";function r(A){var t=[];return A.split("/").forEach((function(A){var e=parseInt(A,10);isNaN(e)||(A.length>1&&"'"===A[A.length-1]&&(e+=2147483648),t.push(e))})),t}function i(A,t){return Promise.resolve().then((function(){return function A(e,r,i){return e>=r.length?i:t(r[e],e).then((function(t){return i.push(t),A(e+1,r,i)}))}(0,A,[])}))}e.d(t,"b",(function(){return r})),e.d(t,"a",(function(){return i}))},function(A,t,e){"use strict";var r=e(32),i=Object.prototype.toString;function n(A){return"[object Array]"===i.call(A)}function o(A){return void 0===A}function s(A){return null!==A&&"object"==typeof A}function E(A){if("[object Object]"!==i.call(A))return!1;var t=Object.getPrototypeOf(A);return null===t||t===Object.prototype}function a(A){return"[object Function]"===i.call(A)}function g(A,t){if(null!=A)if("object"!=typeof A&&(A=[A]),n(A))for(var e=0,r=A.length;e<r;e++)t.call(null,A[e],e,A);else for(var i in A)Object.prototype.hasOwnProperty.call(A,i)&&t.call(null,A[i],i,A)}A.exports={isArray:n,isArrayBuffer:function(A){return"[object ArrayBuffer]"===i.call(A)},isBuffer:function(A){return null!==A&&!o(A)&&null!==A.constructor&&!o(A.constructor)&&"function"==typeof A.constructor.isBuffer&&A.constructor.isBuffer(A)},isFormData:function(A){return"undefined"!=typeof FormData&&A instanceof FormData},isArrayBufferView:function(A){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&A.buffer instanceof ArrayBuffer},isString:function(A){return"string"==typeof A},isNumber:function(A){return"number"==typeof A},isObject:s,isPlainObject:E,isUndefined:o,isDate:function(A){return"[object Date]"===i.call(A)},isFile:function(A){return"[object File]"===i.call(A)},isBlob:function(A){return"[object Blob]"===i.call(A)},isFunction:a,isStream:function(A){return s(A)&&a(A.pipe)},isURLSearchParams:function(A){return"undefined"!=typeof URLSearchParams&&A instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:g,merge:function A(){var t={};function e(e,r){E(t[r])&&E(e)?t[r]=A(t[r],e):E(e)?t[r]=A({},e):n(e)?t[r]=e.slice():t[r]=e}for(var r=0,i=arguments.length;r<i;r++)g(arguments[r],e);return t},extend:function(A,t,e){return g(t,(function(t,i){A[i]=e&&"function"==typeof t?r(t,e):t})),A},trim:function(A){return A.trim?A.trim():A.replace(/^\s+|\s+$/g,"")},stripBOM:function(A){return 65279===A.charCodeAt(0)&&(A=A.slice(1)),A}}},,function(A,t,e){"use strict";!function(t){function e(A){return parseInt(A)===A}function r(A){if(!e(A.length))return!1;for(var t=0;t<A.length;t++)if(!e(A[t])||A[t]<0||A[t]>255)return!1;return!0}function i(A,t){if(A.buffer&&ArrayBuffer.isView(A)&&"Uint8Array"===A.name)return t&&(A=A.slice?A.slice():Array.prototype.slice.call(A)),A;if(Array.isArray(A)){if(!r(A))throw new Error("Array contains invalid value: "+A);return new Uint8Array(A)}if(e(A.length)&&r(A))return new Uint8Array(A);throw new Error("unsupported array-like object")}function n(A){return new Uint8Array(A)}function o(A,t,e,r,i){null==r&&null==i||(A=A.slice?A.slice(r,i):Array.prototype.slice.call(A,r,i)),t.set(A,e)}var s,E={toBytes:function(A){var t=[],e=0;for(A=encodeURI(A);e<A.length;){var r=A.charCodeAt(e++);37===r?(t.push(parseInt(A.substr(e,2),16)),e+=2):t.push(r)}return i(t)},fromBytes:function(A){for(var t=[],e=0;e<A.length;){var r=A[e];r<128?(t.push(String.fromCharCode(r)),e++):r>191&&r<224?(t.push(String.fromCharCode((31&r)<<6|63&A[e+1])),e+=2):(t.push(String.fromCharCode((15&r)<<12|(63&A[e+1])<<6|63&A[e+2])),e+=3)}return t.join("")}},a=(s="0123456789abcdef",{toBytes:function(A){for(var t=[],e=0;e<A.length;e+=2)t.push(parseInt(A.substr(e,2),16));return t},fromBytes:function(A){for(var t=[],e=0;e<A.length;e++){var r=A[e];t.push(s[(240&r)>>4]+s[15&r])}return t.join("")}}),g={16:10,24:12,32:14},B=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],I=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],c=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],u=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],h=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],l=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],w=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],f=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],Q=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],C=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],d=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],R=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],p=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],T=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],U=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function m(A){for(var t=[],e=0;e<A.length;e+=4)t.push(A[e]<<24|A[e+1]<<16|A[e+2]<<8|A[e+3]);return t}var M=function(A){if(!(this instanceof M))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:i(A,!0)}),this._prepare()};M.prototype._prepare=function(){var A=g[this.key.length];if(null==A)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var t=0;t<=A;t++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);var e,r=4*(A+1),i=this.key.length/4,n=m(this.key);for(t=0;t<i;t++)e=t>>2,this._Ke[e][t%4]=n[t],this._Kd[A-e][t%4]=n[t];for(var o,s=0,E=i;E<r;){if(o=n[i-1],n[0]^=I[o>>16&255]<<24^I[o>>8&255]<<16^I[255&o]<<8^I[o>>24&255]^B[s]<<24,s+=1,8!=i)for(t=1;t<i;t++)n[t]^=n[t-1];else{for(t=1;t<i/2;t++)n[t]^=n[t-1];o=n[i/2-1],n[i/2]^=I[255&o]^I[o>>8&255]<<8^I[o>>16&255]<<16^I[o>>24&255]<<24;for(t=i/2+1;t<i;t++)n[t]^=n[t-1]}for(t=0;t<i&&E<r;)a=E>>2,c=E%4,this._Ke[a][c]=n[t],this._Kd[A-a][c]=n[t++],E++}for(var a=1;a<A;a++)for(var c=0;c<4;c++)o=this._Kd[a][c],this._Kd[a][c]=R[o>>24&255]^p[o>>16&255]^T[o>>8&255]^U[255&o]},M.prototype.encrypt=function(A){if(16!=A.length)throw new Error("invalid plaintext size (must be 16 bytes)");for(var t=this._Ke.length-1,e=[0,0,0,0],r=m(A),i=0;i<4;i++)r[i]^=this._Ke[0][i];for(var o=1;o<t;o++){for(i=0;i<4;i++)e[i]=u[r[i]>>24&255]^h[r[(i+1)%4]>>16&255]^l[r[(i+2)%4]>>8&255]^w[255&r[(i+3)%4]]^this._Ke[o][i];r=e.slice()}var s,E=n(16);for(i=0;i<4;i++)s=this._Ke[t][i],E[4*i]=255&(I[r[i]>>24&255]^s>>24),E[4*i+1]=255&(I[r[(i+1)%4]>>16&255]^s>>16),E[4*i+2]=255&(I[r[(i+2)%4]>>8&255]^s>>8),E[4*i+3]=255&(I[255&r[(i+3)%4]]^s);return E},M.prototype.decrypt=function(A){if(16!=A.length)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var t=this._Kd.length-1,e=[0,0,0,0],r=m(A),i=0;i<4;i++)r[i]^=this._Kd[0][i];for(var o=1;o<t;o++){for(i=0;i<4;i++)e[i]=f[r[i]>>24&255]^Q[r[(i+3)%4]>>16&255]^C[r[(i+2)%4]>>8&255]^d[255&r[(i+1)%4]]^this._Kd[o][i];r=e.slice()}var s,E=n(16);for(i=0;i<4;i++)s=this._Kd[t][i],E[4*i]=255&(c[r[i]>>24&255]^s>>24),E[4*i+1]=255&(c[r[(i+3)%4]>>16&255]^s>>16),E[4*i+2]=255&(c[r[(i+2)%4]>>8&255]^s>>8),E[4*i+3]=255&(c[255&r[(i+1)%4]]^s);return E};var F=function(A){if(!(this instanceof F))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new M(A)};F.prototype.encrypt=function(A){if((A=i(A)).length%16!=0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var t=n(A.length),e=n(16),r=0;r<A.length;r+=16)o(A,e,0,r,r+16),o(e=this._aes.encrypt(e),t,r);return t},F.prototype.decrypt=function(A){if((A=i(A)).length%16!=0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var t=n(A.length),e=n(16),r=0;r<A.length;r+=16)o(A,e,0,r,r+16),o(e=this._aes.decrypt(e),t,r);return t};var S=function(A,t){if(!(this instanceof S))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else t=n(16);this._lastCipherblock=i(t,!0),this._aes=new M(A)};S.prototype.encrypt=function(A){if((A=i(A)).length%16!=0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var t=n(A.length),e=n(16),r=0;r<A.length;r+=16){o(A,e,0,r,r+16);for(var s=0;s<16;s++)e[s]^=this._lastCipherblock[s];this._lastCipherblock=this._aes.encrypt(e),o(this._lastCipherblock,t,r)}return t},S.prototype.decrypt=function(A){if((A=i(A)).length%16!=0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var t=n(A.length),e=n(16),r=0;r<A.length;r+=16){o(A,e,0,r,r+16),e=this._aes.decrypt(e);for(var s=0;s<16;s++)t[r+s]=e[s]^this._lastCipherblock[s];o(A,this._lastCipherblock,0,r,r+16)}return t};var D=function(A,t,e){if(!(this instanceof D))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 size)")}else t=n(16);e||(e=1),this.segmentSize=e,this._shiftRegister=i(t,!0),this._aes=new M(A)};D.prototype.encrypt=function(A){if(A.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var t,e=i(A,!0),r=0;r<e.length;r+=this.segmentSize){t=this._aes.encrypt(this._shiftRegister);for(var n=0;n<this.segmentSize;n++)e[r+n]^=t[n];o(this._shiftRegister,this._shiftRegister,0,this.segmentSize),o(e,this._shiftRegister,16-this.segmentSize,r,r+this.segmentSize)}return e},D.prototype.decrypt=function(A){if(A.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var t,e=i(A,!0),r=0;r<e.length;r+=this.segmentSize){t=this._aes.encrypt(this._shiftRegister);for(var n=0;n<this.segmentSize;n++)e[r+n]^=t[n];o(this._shiftRegister,this._shiftRegister,0,this.segmentSize),o(A,this._shiftRegister,16-this.segmentSize,r,r+this.segmentSize)}return e};var N=function(A,t){if(!(this instanceof N))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else t=n(16);this._lastPrecipher=i(t,!0),this._lastPrecipherIndex=16,this._aes=new M(A)};N.prototype.encrypt=function(A){for(var t=i(A,!0),e=0;e<t.length;e++)16===this._lastPrecipherIndex&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),t[e]^=this._lastPrecipher[this._lastPrecipherIndex++];return t},N.prototype.decrypt=N.prototype.encrypt;var G=function(A){if(!(this instanceof G))throw Error("Counter must be instanitated with `new`");0===A||A||(A=1),"number"==typeof A?(this._counter=n(16),this.setValue(A)):this.setBytes(A)};G.prototype.setValue=function(A){if("number"!=typeof A||parseInt(A)!=A)throw new Error("invalid counter value (must be an integer)");for(var t=15;t>=0;--t)this._counter[t]=A%256,A>>=8},G.prototype.setBytes=function(A){if(16!=(A=i(A,!0)).length)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=A},G.prototype.increment=function(){for(var A=15;A>=0;A--){if(255!==this._counter[A]){this._counter[A]++;break}this._counter[A]=0}};var y=function(A,t){if(!(this instanceof y))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",t instanceof G||(t=new G(t)),this._counter=t,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new M(A)};y.prototype.encrypt=function(A){for(var t=i(A,!0),e=0;e<t.length;e++)16===this._remainingCounterIndex&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),t[e]^=this._remainingCounter[this._remainingCounterIndex++];return t},y.prototype.decrypt=y.prototype.encrypt;var V={AES:M,Counter:G,ModeOfOperation:{ecb:F,cbc:S,cfb:D,ofb:N,ctr:y},utils:{hex:a,utf8:E},padding:{pkcs7:{pad:function(A){var t=16-(A=i(A,!0)).length%16,e=n(A.length+t);o(A,e);for(var r=A.length;r<e.length;r++)e[r]=t;return e},strip:function(A){if((A=i(A,!0)).length<16)throw new Error("PKCS#7 invalid length");var t=A[A.length-1];if(t>16)throw new Error("PKCS#7 padding byte out of range");for(var e=A.length-t,r=0;r<t;r++)if(A[e+r]!==t)throw new Error("PKCS#7 invalid padding byte");var s=n(e);return o(A,s,0,0,e),s}}},_arrayTest:{coerceArray:i,createArray:n,copyArray:o}};A.exports=V}()},function(A,t,e){"use strict";var r=e(16),i=e(80);function n(A,t){return 55296==(64512&A.charCodeAt(t))&&(!(t<0||t+1>=A.length)&&56320==(64512&A.charCodeAt(t+1)))}function o(A){return(A>>>24|A>>>8&65280|A<<8&16711680|(255&A)<<24)>>>0}function s(A){return 1===A.length?"0"+A:A}function E(A){return 7===A.length?"0"+A:6===A.length?"00"+A:5===A.length?"000"+A:4===A.length?"0000"+A:3===A.length?"00000"+A:2===A.length?"000000"+A:1===A.length?"0000000"+A:A}t.inherits=i,t.toArray=function(A,t){if(Array.isArray(A))return A.slice();if(!A)return[];var e=[];if("string"==typeof A)if(t){if("hex"===t)for((A=A.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(A="0"+A),i=0;i<A.length;i+=2)e.push(parseInt(A[i]+A[i+1],16))}else for(var r=0,i=0;i<A.length;i++){var o=A.charCodeAt(i);o<128?e[r++]=o:o<2048?(e[r++]=o>>6|192,e[r++]=63&o|128):n(A,i)?(o=65536+((1023&o)<<10)+(1023&A.charCodeAt(++i)),e[r++]=o>>18|240,e[r++]=o>>12&63|128,e[r++]=o>>6&63|128,e[r++]=63&o|128):(e[r++]=o>>12|224,e[r++]=o>>6&63|128,e[r++]=63&o|128)}else for(i=0;i<A.length;i++)e[i]=0|A[i];return e},t.toHex=function(A){for(var t="",e=0;e<A.length;e++)t+=s(A[e].toString(16));return t},t.htonl=o,t.toHex32=function(A,t){for(var e="",r=0;r<A.length;r++){var i=A[r];"little"===t&&(i=o(i)),e+=E(i.toString(16))}return e},t.zero2=s,t.zero8=E,t.join32=function(A,t,e,i){var n=e-t;r(n%4==0);for(var o=new Array(n/4),s=0,E=t;s<o.length;s++,E+=4){var a;a="big"===i?A[E]<<24|A[E+1]<<16|A[E+2]<<8|A[E+3]:A[E+3]<<24|A[E+2]<<16|A[E+1]<<8|A[E],o[s]=a>>>0}return o},t.split32=function(A,t){for(var e=new Array(4*A.length),r=0,i=0;r<A.length;r++,i+=4){var n=A[r];"big"===t?(e[i]=n>>>24,e[i+1]=n>>>16&255,e[i+2]=n>>>8&255,e[i+3]=255&n):(e[i+3]=n>>>24,e[i+2]=n>>>16&255,e[i+1]=n>>>8&255,e[i]=255&n)}return e},t.rotr32=function(A,t){return A>>>t|A<<32-t},t.rotl32=function(A,t){return A<<t|A>>>32-t},t.sum32=function(A,t){return A+t>>>0},t.sum32_3=function(A,t,e){return A+t+e>>>0},t.sum32_4=function(A,t,e,r){return A+t+e+r>>>0},t.sum32_5=function(A,t,e,r,i){return A+t+e+r+i>>>0},t.sum64=function(A,t,e,r){var i=A[t],n=r+A[t+1]>>>0,o=(n<r?1:0)+e+i;A[t]=o>>>0,A[t+1]=n},t.sum64_hi=function(A,t,e,r){return(t+r>>>0<t?1:0)+A+e>>>0},t.sum64_lo=function(A,t,e,r){return t+r>>>0},t.sum64_4_hi=function(A,t,e,r,i,n,o,s){var E=0,a=t;return E+=(a=a+r>>>0)<t?1:0,E+=(a=a+n>>>0)<n?1:0,A+e+i+o+(E+=(a=a+s>>>0)<s?1:0)>>>0},t.sum64_4_lo=function(A,t,e,r,i,n,o,s){return t+r+n+s>>>0},t.sum64_5_hi=function(A,t,e,r,i,n,o,s,E,a){var g=0,B=t;return g+=(B=B+r>>>0)<t?1:0,g+=(B=B+n>>>0)<n?1:0,g+=(B=B+s>>>0)<s?1:0,A+e+i+o+E+(g+=(B=B+a>>>0)<a?1:0)>>>0},t.sum64_5_lo=function(A,t,e,r,i,n,o,s,E,a){return t+r+n+s+a>>>0},t.rotr64_hi=function(A,t,e){return(t<<32-e|A>>>e)>>>0},t.rotr64_lo=function(A,t,e){return(A<<32-e|t>>>e)>>>0},t.shr64_hi=function(A,t,e){return A>>>e},t.shr64_lo=function(A,t,e){return(A<<32-e|t>>>e)>>>0}},function(A,t,e){"use strict";e.d(t,"a",(function(){return n}));var r=0,i=[],n=function(A,t,e){var n={type:A,id:String(++r),date:new Date};t&&(n.message=t),e&&(n.data=e),function(A){for(var t=0;t<i.length;t++)try{i[t](A)}catch(A){console.error(A)}}(n)};"undefined"!=typeof window&&(window.__ledgerLogsListen=function(A){return i.push(A),function(){var t=i.indexOf(A);-1!==t&&(i[t]=i[i.length-1],i.pop())}})},function(A,t){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(A){"object"==typeof window&&(e=window)}A.exports=e},,,function(A,t,e){"use strict";(function(A){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=e(56),i=e(57),n=e(58);function o(){return E.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(A,t){if(o()<t)throw new RangeError("Invalid typed array length");return E.TYPED_ARRAY_SUPPORT?(A=new Uint8Array(t)).__proto__=E.prototype:(null===A&&(A=new E(t)),A.length=t),A}function E(A,t,e){if(!(E.TYPED_ARRAY_SUPPORT||this instanceof E))return new E(A,t,e);if("number"==typeof A){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return B(this,A)}return a(this,A,t,e)}function a(A,t,e,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(A,t,e,r){if(t.byteLength,e<0||t.byteLength<e)throw new RangeError("'offset' is out of bounds");if(t.byteLength<e+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r);E.TYPED_ARRAY_SUPPORT?(A=t).__proto__=E.prototype:A=I(A,t);return A}(A,t,e,r):"string"==typeof t?function(A,t,e){"string"==typeof e&&""!==e||(e="utf8");if(!E.isEncoding(e))throw new TypeError('"encoding" must be a valid string encoding');var r=0|u(t,e),i=(A=s(A,r)).write(t,e);i!==r&&(A=A.slice(0,i));return A}(A,t,e):function(A,t){if(E.isBuffer(t)){var e=0|c(t.length);return 0===(A=s(A,e)).length||t.copy(A,0,0,e),A}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?s(A,0):I(A,t);if("Buffer"===t.type&&n(t.data))return I(A,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(A,t)}function g(A){if("number"!=typeof A)throw new TypeError('"size" argument must be a number');if(A<0)throw new RangeError('"size" argument must not be negative')}function B(A,t){if(g(t),A=s(A,t<0?0:0|c(t)),!E.TYPED_ARRAY_SUPPORT)for(var e=0;e<t;++e)A[e]=0;return A}function I(A,t){var e=t.length<0?0:0|c(t.length);A=s(A,e);for(var r=0;r<e;r+=1)A[r]=255&t[r];return A}function c(A){if(A>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|A}function u(A,t){if(E.isBuffer(A))return A.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(A)||A instanceof ArrayBuffer))return A.byteLength;"string"!=typeof A&&(A=""+A);var e=A.length;if(0===e)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":case void 0:return J(A).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return P(A).length;default:if(r)return J(A).length;t=(""+t).toLowerCase(),r=!0}}function h(A,t,e){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===e||e>this.length)&&(e=this.length),e<=0)return"";if((e>>>=0)<=(t>>>=0))return"";for(A||(A="utf8");;)switch(A){case"hex":return S(this,t,e);case"utf8":case"utf-8":return m(this,t,e);case"ascii":return M(this,t,e);case"latin1":case"binary":return F(this,t,e);case"base64":return U(this,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return D(this,t,e);default:if(r)throw new TypeError("Unknown encoding: "+A);A=(A+"").toLowerCase(),r=!0}}function l(A,t,e){var r=A[t];A[t]=A[e],A[e]=r}function w(A,t,e,r,i){if(0===A.length)return-1;if("string"==typeof e?(r=e,e=0):e>2147483647?e=2147483647:e<-2147483648&&(e=-2147483648),e=+e,isNaN(e)&&(e=i?0:A.length-1),e<0&&(e=A.length+e),e>=A.length){if(i)return-1;e=A.length-1}else if(e<0){if(!i)return-1;e=0}if("string"==typeof t&&(t=E.from(t,r)),E.isBuffer(t))return 0===t.length?-1:f(A,t,e,r,i);if("number"==typeof t)return t&=255,E.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(A,t,e):Uint8Array.prototype.lastIndexOf.call(A,t,e):f(A,[t],e,r,i);throw new TypeError("val must be string, number or Buffer")}function f(A,t,e,r,i){var n,o=1,s=A.length,E=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(A.length<2||t.length<2)return-1;o=2,s/=2,E/=2,e/=2}function a(A,t){return 1===o?A[t]:A.readUInt16BE(t*o)}if(i){var g=-1;for(n=e;n<s;n++)if(a(A,n)===a(t,-1===g?0:n-g)){if(-1===g&&(g=n),n-g+1===E)return g*o}else-1!==g&&(n-=n-g),g=-1}else for(e+E>s&&(e=s-E),n=e;n>=0;n--){for(var B=!0,I=0;I<E;I++)if(a(A,n+I)!==a(t,I)){B=!1;break}if(B)return n}return-1}function Q(A,t,e,r){e=Number(e)||0;var i=A.length-e;r?(r=Number(r))>i&&(r=i):r=i;var n=t.length;if(n%2!=0)throw new TypeError("Invalid hex string");r>n/2&&(r=n/2);for(var o=0;o<r;++o){var s=parseInt(t.substr(2*o,2),16);if(isNaN(s))return o;A[e+o]=s}return o}function C(A,t,e,r){return Y(J(t,A.length-e),A,e,r)}function d(A,t,e,r){return Y(function(A){for(var t=[],e=0;e<A.length;++e)t.push(255&A.charCodeAt(e));return t}(t),A,e,r)}function R(A,t,e,r){return d(A,t,e,r)}function p(A,t,e,r){return Y(P(t),A,e,r)}function T(A,t,e,r){return Y(function(A,t){for(var e,r,i,n=[],o=0;o<A.length&&!((t-=2)<0);++o)e=A.charCodeAt(o),r=e>>8,i=e%256,n.push(i),n.push(r);return n}(t,A.length-e),A,e,r)}function U(A,t,e){return 0===t&&e===A.length?r.fromByteArray(A):r.fromByteArray(A.slice(t,e))}function m(A,t,e){e=Math.min(A.length,e);for(var r=[],i=t;i<e;){var n,o,s,E,a=A[i],g=null,B=a>239?4:a>223?3:a>191?2:1;if(i+B<=e)switch(B){case 1:a<128&&(g=a);break;case 2:128==(192&(n=A[i+1]))&&(E=(31&a)<<6|63&n)>127&&(g=E);break;case 3:n=A[i+1],o=A[i+2],128==(192&n)&&128==(192&o)&&(E=(15&a)<<12|(63&n)<<6|63&o)>2047&&(E<55296||E>57343)&&(g=E);break;case 4:n=A[i+1],o=A[i+2],s=A[i+3],128==(192&n)&&128==(192&o)&&128==(192&s)&&(E=(15&a)<<18|(63&n)<<12|(63&o)<<6|63&s)>65535&&E<1114112&&(g=E)}null===g?(g=65533,B=1):g>65535&&(g-=65536,r.push(g>>>10&1023|55296),g=56320|1023&g),r.push(g),i+=B}return function(A){var t=A.length;if(t<=4096)return String.fromCharCode.apply(String,A);var e="",r=0;for(;r<t;)e+=String.fromCharCode.apply(String,A.slice(r,r+=4096));return e}(r)}t.Buffer=E,t.SlowBuffer=function(A){+A!=A&&(A=0);return E.alloc(+A)},t.INSPECT_MAX_BYTES=50,E.TYPED_ARRAY_SUPPORT=void 0!==A.TYPED_ARRAY_SUPPORT?A.TYPED_ARRAY_SUPPORT:function(){try{var A=new Uint8Array(1);return A.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===A.foo()&&"function"==typeof A.subarray&&0===A.subarray(1,1).byteLength}catch(A){return!1}}(),t.kMaxLength=o(),E.poolSize=8192,E._augment=function(A){return A.__proto__=E.prototype,A},E.from=function(A,t,e){return a(null,A,t,e)},E.TYPED_ARRAY_SUPPORT&&(E.prototype.__proto__=Uint8Array.prototype,E.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&E[Symbol.species]===E&&Object.defineProperty(E,Symbol.species,{value:null,configurable:!0})),E.alloc=function(A,t,e){return function(A,t,e,r){return g(t),t<=0?s(A,t):void 0!==e?"string"==typeof r?s(A,t).fill(e,r):s(A,t).fill(e):s(A,t)}(null,A,t,e)},E.allocUnsafe=function(A){return B(null,A)},E.allocUnsafeSlow=function(A){return B(null,A)},E.isBuffer=function(A){return!(null==A||!A._isBuffer)},E.compare=function(A,t){if(!E.isBuffer(A)||!E.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(A===t)return 0;for(var e=A.length,r=t.length,i=0,n=Math.min(e,r);i<n;++i)if(A[i]!==t[i]){e=A[i],r=t[i];break}return e<r?-1:r<e?1:0},E.isEncoding=function(A){switch(String(A).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},E.concat=function(A,t){if(!n(A))throw new TypeError('"list" argument must be an Array of Buffers');if(0===A.length)return E.alloc(0);var e;if(void 0===t)for(t=0,e=0;e<A.length;++e)t+=A[e].length;var r=E.allocUnsafe(t),i=0;for(e=0;e<A.length;++e){var o=A[e];if(!E.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,i),i+=o.length}return r},E.byteLength=u,E.prototype._isBuffer=!0,E.prototype.swap16=function(){var A=this.length;if(A%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<A;t+=2)l(this,t,t+1);return this},E.prototype.swap32=function(){var A=this.length;if(A%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<A;t+=4)l(this,t,t+3),l(this,t+1,t+2);return this},E.prototype.swap64=function(){var A=this.length;if(A%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<A;t+=8)l(this,t,t+7),l(this,t+1,t+6),l(this,t+2,t+5),l(this,t+3,t+4);return this},E.prototype.toString=function(){var A=0|this.length;return 0===A?"":0===arguments.length?m(this,0,A):h.apply(this,arguments)},E.prototype.equals=function(A){if(!E.isBuffer(A))throw new TypeError("Argument must be a Buffer");return this===A||0===E.compare(this,A)},E.prototype.inspect=function(){var A="",e=t.INSPECT_MAX_BYTES;return this.length>0&&(A=this.toString("hex",0,e).match(/.{2}/g).join(" "),this.length>e&&(A+=" ... ")),"<Buffer "+A+">"},E.prototype.compare=function(A,t,e,r,i){if(!E.isBuffer(A))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===e&&(e=A?A.length:0),void 0===r&&(r=0),void 0===i&&(i=this.length),t<0||e>A.length||r<0||i>this.length)throw new RangeError("out of range index");if(r>=i&&t>=e)return 0;if(r>=i)return-1;if(t>=e)return 1;if(this===A)return 0;for(var n=(i>>>=0)-(r>>>=0),o=(e>>>=0)-(t>>>=0),s=Math.min(n,o),a=this.slice(r,i),g=A.slice(t,e),B=0;B<s;++B)if(a[B]!==g[B]){n=a[B],o=g[B];break}return n<o?-1:o<n?1:0},E.prototype.includes=function(A,t,e){return-1!==this.indexOf(A,t,e)},E.prototype.indexOf=function(A,t,e){return w(this,A,t,e,!0)},E.prototype.lastIndexOf=function(A,t,e){return w(this,A,t,e,!1)},E.prototype.write=function(A,t,e,r){if(void 0===t)r="utf8",e=this.length,t=0;else if(void 0===e&&"string"==typeof t)r=t,e=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(e)?(e|=0,void 0===r&&(r="utf8")):(r=e,e=void 0)}var i=this.length-t;if((void 0===e||e>i)&&(e=i),A.length>0&&(e<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var n=!1;;)switch(r){case"hex":return Q(this,A,t,e);case"utf8":case"utf-8":return C(this,A,t,e);case"ascii":return d(this,A,t,e);case"latin1":case"binary":return R(this,A,t,e);case"base64":return p(this,A,t,e);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,A,t,e);default:if(n)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),n=!0}},E.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function M(A,t,e){var r="";e=Math.min(A.length,e);for(var i=t;i<e;++i)r+=String.fromCharCode(127&A[i]);return r}function F(A,t,e){var r="";e=Math.min(A.length,e);for(var i=t;i<e;++i)r+=String.fromCharCode(A[i]);return r}function S(A,t,e){var r=A.length;(!t||t<0)&&(t=0),(!e||e<0||e>r)&&(e=r);for(var i="",n=t;n<e;++n)i+=Z(A[n]);return i}function D(A,t,e){for(var r=A.slice(t,e),i="",n=0;n<r.length;n+=2)i+=String.fromCharCode(r[n]+256*r[n+1]);return i}function N(A,t,e){if(A%1!=0||A<0)throw new RangeError("offset is not uint");if(A+t>e)throw new RangeError("Trying to access beyond buffer length")}function G(A,t,e,r,i,n){if(!E.isBuffer(A))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<n)throw new RangeError('"value" argument is out of bounds');if(e+r>A.length)throw new RangeError("Index out of range")}function y(A,t,e,r){t<0&&(t=65535+t+1);for(var i=0,n=Math.min(A.length-e,2);i<n;++i)A[e+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function V(A,t,e,r){t<0&&(t=4294967295+t+1);for(var i=0,n=Math.min(A.length-e,4);i<n;++i)A[e+i]=t>>>8*(r?i:3-i)&255}function b(A,t,e,r,i,n){if(e+r>A.length)throw new RangeError("Index out of range");if(e<0)throw new RangeError("Index out of range")}function k(A,t,e,r,n){return n||b(A,0,e,4),i.write(A,t,e,r,23,4),e+4}function v(A,t,e,r,n){return n||b(A,0,e,8),i.write(A,t,e,r,52,8),e+8}E.prototype.slice=function(A,t){var e,r=this.length;if((A=~~A)<0?(A+=r)<0&&(A=0):A>r&&(A=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<A&&(t=A),E.TYPED_ARRAY_SUPPORT)(e=this.subarray(A,t)).__proto__=E.prototype;else{var i=t-A;e=new E(i,void 0);for(var n=0;n<i;++n)e[n]=this[n+A]}return e},E.prototype.readUIntLE=function(A,t,e){A|=0,t|=0,e||N(A,t,this.length);for(var r=this[A],i=1,n=0;++n<t&&(i*=256);)r+=this[A+n]*i;return r},E.prototype.readUIntBE=function(A,t,e){A|=0,t|=0,e||N(A,t,this.length);for(var r=this[A+--t],i=1;t>0&&(i*=256);)r+=this[A+--t]*i;return r},E.prototype.readUInt8=function(A,t){return t||N(A,1,this.length),this[A]},E.prototype.readUInt16LE=function(A,t){return t||N(A,2,this.length),this[A]|this[A+1]<<8},E.prototype.readUInt16BE=function(A,t){return t||N(A,2,this.length),this[A]<<8|this[A+1]},E.prototype.readUInt32LE=function(A,t){return t||N(A,4,this.length),(this[A]|this[A+1]<<8|this[A+2]<<16)+16777216*this[A+3]},E.prototype.readUInt32BE=function(A,t){return t||N(A,4,this.length),16777216*this[A]+(this[A+1]<<16|this[A+2]<<8|this[A+3])},E.prototype.readIntLE=function(A,t,e){A|=0,t|=0,e||N(A,t,this.length);for(var r=this[A],i=1,n=0;++n<t&&(i*=256);)r+=this[A+n]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*t)),r},E.prototype.readIntBE=function(A,t,e){A|=0,t|=0,e||N(A,t,this.length);for(var r=t,i=1,n=this[A+--r];r>0&&(i*=256);)n+=this[A+--r]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*t)),n},E.prototype.readInt8=function(A,t){return t||N(A,1,this.length),128&this[A]?-1*(255-this[A]+1):this[A]},E.prototype.readInt16LE=function(A,t){t||N(A,2,this.length);var e=this[A]|this[A+1]<<8;return 32768&e?4294901760|e:e},E.prototype.readInt16BE=function(A,t){t||N(A,2,this.length);var e=this[A+1]|this[A]<<8;return 32768&e?4294901760|e:e},E.prototype.readInt32LE=function(A,t){return t||N(A,4,this.length),this[A]|this[A+1]<<8|this[A+2]<<16|this[A+3]<<24},E.prototype.readInt32BE=function(A,t){return t||N(A,4,this.length),this[A]<<24|this[A+1]<<16|this[A+2]<<8|this[A+3]},E.prototype.readFloatLE=function(A,t){return t||N(A,4,this.length),i.read(this,A,!0,23,4)},E.prototype.readFloatBE=function(A,t){return t||N(A,4,this.length),i.read(this,A,!1,23,4)},E.prototype.readDoubleLE=function(A,t){return t||N(A,8,this.length),i.read(this,A,!0,52,8)},E.prototype.readDoubleBE=function(A,t){return t||N(A,8,this.length),i.read(this,A,!1,52,8)},E.prototype.writeUIntLE=function(A,t,e,r){(A=+A,t|=0,e|=0,r)||G(this,A,t,e,Math.pow(2,8*e)-1,0);var i=1,n=0;for(this[t]=255&A;++n<e&&(i*=256);)this[t+n]=A/i&255;return t+e},E.prototype.writeUIntBE=function(A,t,e,r){(A=+A,t|=0,e|=0,r)||G(this,A,t,e,Math.pow(2,8*e)-1,0);var i=e-1,n=1;for(this[t+i]=255&A;--i>=0&&(n*=256);)this[t+i]=A/n&255;return t+e},E.prototype.writeUInt8=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,1,255,0),E.TYPED_ARRAY_SUPPORT||(A=Math.floor(A)),this[t]=255&A,t+1},E.prototype.writeUInt16LE=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,2,65535,0),E.TYPED_ARRAY_SUPPORT?(this[t]=255&A,this[t+1]=A>>>8):y(this,A,t,!0),t+2},E.prototype.writeUInt16BE=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,2,65535,0),E.TYPED_ARRAY_SUPPORT?(this[t]=A>>>8,this[t+1]=255&A):y(this,A,t,!1),t+2},E.prototype.writeUInt32LE=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,4,4294967295,0),E.TYPED_ARRAY_SUPPORT?(this[t+3]=A>>>24,this[t+2]=A>>>16,this[t+1]=A>>>8,this[t]=255&A):V(this,A,t,!0),t+4},E.prototype.writeUInt32BE=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,4,4294967295,0),E.TYPED_ARRAY_SUPPORT?(this[t]=A>>>24,this[t+1]=A>>>16,this[t+2]=A>>>8,this[t+3]=255&A):V(this,A,t,!1),t+4},E.prototype.writeIntLE=function(A,t,e,r){if(A=+A,t|=0,!r){var i=Math.pow(2,8*e-1);G(this,A,t,e,i-1,-i)}var n=0,o=1,s=0;for(this[t]=255&A;++n<e&&(o*=256);)A<0&&0===s&&0!==this[t+n-1]&&(s=1),this[t+n]=(A/o>>0)-s&255;return t+e},E.prototype.writeIntBE=function(A,t,e,r){if(A=+A,t|=0,!r){var i=Math.pow(2,8*e-1);G(this,A,t,e,i-1,-i)}var n=e-1,o=1,s=0;for(this[t+n]=255&A;--n>=0&&(o*=256);)A<0&&0===s&&0!==this[t+n+1]&&(s=1),this[t+n]=(A/o>>0)-s&255;return t+e},E.prototype.writeInt8=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,1,127,-128),E.TYPED_ARRAY_SUPPORT||(A=Math.floor(A)),A<0&&(A=255+A+1),this[t]=255&A,t+1},E.prototype.writeInt16LE=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,2,32767,-32768),E.TYPED_ARRAY_SUPPORT?(this[t]=255&A,this[t+1]=A>>>8):y(this,A,t,!0),t+2},E.prototype.writeInt16BE=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,2,32767,-32768),E.TYPED_ARRAY_SUPPORT?(this[t]=A>>>8,this[t+1]=255&A):y(this,A,t,!1),t+2},E.prototype.writeInt32LE=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,4,2147483647,-2147483648),E.TYPED_ARRAY_SUPPORT?(this[t]=255&A,this[t+1]=A>>>8,this[t+2]=A>>>16,this[t+3]=A>>>24):V(this,A,t,!0),t+4},E.prototype.writeInt32BE=function(A,t,e){return A=+A,t|=0,e||G(this,A,t,4,2147483647,-2147483648),A<0&&(A=4294967295+A+1),E.TYPED_ARRAY_SUPPORT?(this[t]=A>>>24,this[t+1]=A>>>16,this[t+2]=A>>>8,this[t+3]=255&A):V(this,A,t,!1),t+4},E.prototype.writeFloatLE=function(A,t,e){return k(this,A,t,!0,e)},E.prototype.writeFloatBE=function(A,t,e){return k(this,A,t,!1,e)},E.prototype.writeDoubleLE=function(A,t,e){return v(this,A,t,!0,e)},E.prototype.writeDoubleBE=function(A,t,e){return v(this,A,t,!1,e)},E.prototype.copy=function(A,t,e,r){if(e||(e=0),r||0===r||(r=this.length),t>=A.length&&(t=A.length),t||(t=0),r>0&&r<e&&(r=e),r===e)return 0;if(0===A.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),A.length-t<r-e&&(r=A.length-t+e);var i,n=r-e;if(this===A&&e<t&&t<r)for(i=n-1;i>=0;--i)A[i+t]=this[i+e];else if(n<1e3||!E.TYPED_ARRAY_SUPPORT)for(i=0;i<n;++i)A[i+t]=this[i+e];else Uint8Array.prototype.set.call(A,this.subarray(e,e+n),t);return n},E.prototype.fill=function(A,t,e,r){if("string"==typeof A){if("string"==typeof t?(r=t,t=0,e=this.length):"string"==typeof e&&(r=e,e=this.length),1===A.length){var i=A.charCodeAt(0);i<256&&(A=i)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!E.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof A&&(A&=255);if(t<0||this.length<t||this.length<e)throw new RangeError("Out of range index");if(e<=t)return this;var n;if(t>>>=0,e=void 0===e?this.length:e>>>0,A||(A=0),"number"==typeof A)for(n=t;n<e;++n)this[n]=A;else{var o=E.isBuffer(A)?A:J(new E(A,r).toString()),s=o.length;for(n=0;n<e-t;++n)this[n+t]=o[n%s]}return this};var O=/[^+\/0-9A-Za-z-_]/g;function Z(A){return A<16?"0"+A.toString(16):A.toString(16)}function J(A,t){var e;t=t||1/0;for(var r=A.length,i=null,n=[],o=0;o<r;++o){if((e=A.charCodeAt(o))>55295&&e<57344){if(!i){if(e>56319){(t-=3)>-1&&n.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&n.push(239,191,189);continue}i=e;continue}if(e<56320){(t-=3)>-1&&n.push(239,191,189),i=e;continue}e=65536+(i-55296<<10|e-56320)}else i&&(t-=3)>-1&&n.push(239,191,189);if(i=null,e<128){if((t-=1)<0)break;n.push(e)}else if(e<2048){if((t-=2)<0)break;n.push(e>>6|192,63&e|128)}else if(e<65536){if((t-=3)<0)break;n.push(e>>12|224,e>>6&63|128,63&e|128)}else{if(!(e<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;n.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}}return n}function P(A){return r.toByteArray(function(A){if((A=function(A){return A.trim?A.trim():A.replace(/^\s+|\s+$/g,"")}(A).replace(O,"")).length<2)return"";for(;A.length%4!=0;)A+="=";return A}(A))}function Y(A,t,e,r){for(var i=0;i<r&&!(i+e>=t.length||i>=A.length);++i)t[i+e]=A[i];return i}}).call(this,e(12))},function(A,t){function e(A,t){if(!A)throw new Error(t||"Assertion failed")}A.exports=e,e.equal=function(A,t,e){if(A!=t)throw new Error(e||"Assertion failed: "+A+" != "+t)}},function(A,t,e){"use strict";var r=e(10),i=e(16);function n(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}t.BlockHash=n,n.prototype.update=function(A,t){if(A=r.toArray(A,t),this.pending?this.pending=this.pending.concat(A):this.pending=A,this.pendingTotal+=A.length,this.pending.length>=this._delta8){var e=(A=this.pending).length%this._delta8;this.pending=A.slice(A.length-e,A.length),0===this.pending.length&&(this.pending=null),A=r.join32(A,0,A.length-e,this.endian);for(var i=0;i<A.length;i+=this._delta32)this._update(A,i,i+this._delta32)}return this},n.prototype.digest=function(A){return this.update(this._pad()),i(null===this.pending),this._digest(A)},n.prototype._pad=function(){var A=this.pendingTotal,t=this._delta8,e=t-(A+this.padLength)%t,r=new Array(e+this.padLength);r[0]=128;for(var i=1;i<e;i++)r[i]=0;if(A<<=3,"big"===this.endian){for(var n=8;n<this.padLength;n++)r[i++]=0;r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=A>>>24&255,r[i++]=A>>>16&255,r[i++]=A>>>8&255,r[i++]=255&A}else for(r[i++]=255&A,r[i++]=A>>>8&255,r[i++]=A>>>16&255,r[i++]=A>>>24&255,r[i++]=0,r[i++]=0,r[i++]=0,r[i++]=0,n=8;n<this.padLength;n++)r[i++]=0;return r}},function(A,t,e){A.exports=e(61)},function(A,t,e){"use strict";e.d(t,"a",(function(){return n}));var r=function(){return(r=Object.assign||function(A){for(var t,e=1,r=arguments.length;e<r;e++)for(var i in t=arguments[e])Object.prototype.hasOwnProperty.call(t,i)&&(A[i]=t[i]);return A}).apply(this,arguments)},i={nftExplorerBaseURL:null,pluginBaseURL:"https://cdn.live.ledger.com",extraPlugins:null};function n(A){return r(r({},i),A)}},function(A,t,e){"use strict";A.exports=e(59)},function(A,t,e){"use strict";e.d(t,"a",(function(){return E}));var r={};e.r(r),e.d(r,"encode",(function(){return x})),e.d(r,"decode",(function(){return j}));var i={};e.r(i),e.d(i,"AddressZero",(function(){return ii})),e.d(i,"NegativeOne",(function(){return SA})),e.d(i,"Zero",(function(){return DA})),e.d(i,"One",(function(){return NA})),e.d(i,"Two",(function(){return GA})),e.d(i,"WeiPerEther",(function(){return yA})),e.d(i,"MaxUint256",(function(){return VA})),e.d(i,"MinInt256",(function(){return bA})),e.d(i,"MaxInt256",(function(){return kA})),e.d(i,"HashZero",(function(){return ni})),e.d(i,"EtherSymbol",(function(){return oi}));var n={};e.r(n),e.d(n,"Provider",(function(){return Ut})),e.d(n,"BaseProvider",(function(){return hn})),e.d(n,"Resolver",(function(){return In})),e.d(n,"UrlJsonRpcProvider",(function(){return kn})),e.d(n,"FallbackProvider",(function(){return co})),e.d(n,"AlchemyProvider",(function(){return Jn})),e.d(n,"AlchemyWebSocketProvider",(function(){return Zn})),e.d(n,"CloudflareProvider",(function(){return Ln})),e.d(n,"EtherscanProvider",(function(){return Xn})),e.d(n,"InfuraProvider",(function(){return fo})),e.d(n,"InfuraWebSocketProvider",(function(){return wo})),e.d(n,"JsonRpcProvider",(function(){return Mn})),e.d(n,"JsonRpcBatchProvider",(function(){return Qo})),e.d(n,"NodesmithProvider",(function(){return Ro})),e.d(n,"PocketProvider",(function(){return Uo})),e.d(n,"StaticJsonRpcProvider",(function(){return bn})),e.d(n,"Web3Provider",(function(){return So})),e.d(n,"WebSocketProvider",(function(){return Gn})),e.d(n,"IpcProvider",(function(){return uo})),e.d(n,"JsonRpcSigner",(function(){return Tn})),e.d(n,"getDefaultProvider",(function(){return No})),e.d(n,"getNetwork",(function(){return ui})),e.d(n,"isCommunityResource",(function(){return ji})),e.d(n,"isCommunityResourcable",(function(){return Wi})),e.d(n,"showThrottleMessage",(function(){return qi})),e.d(n,"Formatter",(function(){return Hi}));var o={};e.r(o),e.d(o,"decode",(function(){return Ni})),e.d(o,"encode",(function(){return Gi}));var s={};e.r(s),e.d(s,"AbiCoder",(function(){return It})),e.d(s,"defaultAbiCoder",(function(){return ct})),e.d(s,"Fragment",(function(){return zA})),e.d(s,"ConstructorFragment",(function(){return tt})),e.d(s,"ErrorFragment",(function(){return it})),e.d(s,"EventFragment",(function(){return XA})),e.d(s,"FunctionFragment",(function(){return et})),e.d(s,"ParamType",(function(){return KA})),e.d(s,"FormatTypes",(function(){return WA})),e.d(s,"checkResultErrors",(function(){return V})),e.d(s,"Logger",(function(){return I.b})),e.d(s,"RLP",(function(){return r})),e.d(s,"_fetchData",(function(){return Zi})),e.d(s,"fetchJson",(function(){return Ji})),e.d(s,"poll",(function(){return Pi})),e.d(s,"checkProperties",(function(){return M})),e.d(s,"deepCopy",(function(){return N})),e.d(s,"defineReadOnly",(function(){return T})),e.d(s,"getStatic",(function(){return U})),e.d(s,"resolveProperties",(function(){return m})),e.d(s,"shallowCopy",(function(){return F})),e.d(s,"arrayify",(function(){return a.a})),e.d(s,"concat",(function(){return a.b})),e.d(s,"stripZeros",(function(){return a.o})),e.d(s,"zeroPad",(function(){return a.p})),e.d(s,"isBytes",(function(){return a.j})),e.d(s,"isBytesLike",(function(){return a.k})),e.d(s,"defaultPath",(function(){return Cr})),e.d(s,"HDNode",(function(){return dr})),e.d(s,"SigningKey",(function(){return kt})),e.d(s,"Interface",(function(){return dt})),e.d(s,"LogDescription",(function(){return ht})),e.d(s,"TransactionDescription",(function(){return lt})),e.d(s,"base58",(function(){return ze})),e.d(s,"base64",(function(){return o})),e.d(s,"hexlify",(function(){return a.i})),e.d(s,"isHexString",(function(){return a.l})),e.d(s,"hexConcat",(function(){return a.c})),e.d(s,"hexStripZeros",(function(){return a.f})),e.d(s,"hexValue",(function(){return a.g})),e.d(s,"hexZeroPad",(function(){return a.h})),e.d(s,"hexDataLength",(function(){return a.d})),e.d(s,"hexDataSlice",(function(){return a.e})),e.d(s,"nameprep",(function(){return Ui})),e.d(s,"_toEscapedUtf8String",(function(){return cA})),e.d(s,"toUtf8Bytes",(function(){return BA})),e.d(s,"toUtf8CodePoints",(function(){return lA})),e.d(s,"toUtf8String",(function(){return hA})),e.d(s,"Utf8ErrorFuncs",(function(){return aA})),e.d(s,"formatBytes32String",(function(){return Zo})),e.d(s,"parseBytes32String",(function(){return Jo})),e.d(s,"hashMessage",(function(){return Ge})),e.d(s,"namehash",(function(){return Di})),e.d(s,"isValidName",(function(){return Si})),e.d(s,"id",(function(){return wA})),e.d(s,"_TypedDataEncoder",(function(){return Ke})),e.d(s,"getAddress",(function(){return AA})),e.d(s,"getIcapAddress",(function(){return eA})),e.d(s,"getContractAddress",(function(){return rA})),e.d(s,"getCreate2Address",(function(){return iA})),e.d(s,"isAddress",(function(){return tA})),e.d(s,"formatEther",(function(){return Wo})),e.d(s,"parseEther",(function(){return jo})),e.d(s,"formatUnits",(function(){return xo})),e.d(s,"parseUnits",(function(){return Ho})),e.d(s,"commify",(function(){return Lo})),e.d(s,"computeHmac",(function(){return ir})),e.d(s,"keccak256",(function(){return J})),e.d(s,"ripemd160",(function(){return tr})),e.d(s,"sha256",(function(){return er})),e.d(s,"sha512",(function(){return rr})),e.d(s,"randomBytes",(function(){return Mr.a})),e.d(s,"shuffled",(function(){return _n})),e.d(s,"solidityPack",(function(){return ko})),e.d(s,"solidityKeccak256",(function(){return vo})),e.d(s,"soliditySha256",(function(){return Oo})),e.d(s,"splitSignature",(function(){return a.n})),e.d(s,"joinSignature",(function(){return a.m})),e.d(s,"accessListify",(function(){return qt})),e.d(s,"parseTransaction",(function(){return te})),e.d(s,"serializeTransaction",(function(){return $t})),e.d(s,"TransactionTypes",(function(){return Jt})),e.d(s,"getJsonWalletAddress",(function(){return zr})),e.d(s,"computeAddress",(function(){return Ht})),e.d(s,"recoverAddress",(function(){return Wt})),e.d(s,"computePublicKey",(function(){return Ot})),e.d(s,"recoverPublicKey",(function(){return vt})),e.d(s,"verifyMessage",(function(){return ei})),e.d(s,"verifyTypedData",(function(){return ri})),e.d(s,"getAccountPath",(function(){return mr})),e.d(s,"mnemonicToEntropy",(function(){return pr})),e.d(s,"entropyToMnemonic",(function(){return Tr})),e.d(s,"isValidMnemonic",(function(){return Ur})),e.d(s,"mnemonicToSeed",(function(){return Rr})),e.d(s,"SupportedAlgorithm",(function(){return Xe})),e.d(s,"UnicodeNormalizationForm",(function(){return oA})),e.d(s,"Utf8ErrorReason",(function(){return sA})),e.d(s,"Indexed",(function(){return ft}));var E={};e.r(E),e.d(E,"Signer",(function(){return Dt})),e.d(E,"Wallet",(function(){return ti})),e.d(E,"VoidSigner",(function(){return Nt})),e.d(E,"getDefaultProvider",(function(){return No})),e.d(E,"providers",(function(){return n})),e.d(E,"BaseContract",(function(){return le})),e.d(E,"Contract",(function(){return we})),e.d(E,"ContractFactory",(function(){return fe})),e.d(E,"BigNumber",(function(){return w})),e.d(E,"FixedNumber",(function(){return Se})),e.d(E,"constants",(function(){return i})),e.d(E,"errors",(function(){return I.a})),e.d(E,"logger",(function(){return qo})),e.d(E,"utils",(function(){return s})),e.d(E,"wordlists",(function(){return Br})),e.d(E,"version",(function(){return Ko})),e.d(E,"Wordlist",(function(){return sr}));var a=e(0),g=e(2),B=e.n(g),I=e(1);var c=B.a.BN;const u=new I.b("bignumber/5.5.0"),h={};let l=!1;class w{constructor(A,t){u.checkNew(new.target,w),A!==h&&u.throwError("cannot call constructor directly; use BigNumber.from",I.b.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=t,this._isBigNumber=!0,Object.freeze(this)}fromTwos(A){return Q(C(this).fromTwos(A))}toTwos(A){return Q(C(this).toTwos(A))}abs(){return"-"===this._hex[0]?w.from(this._hex.substring(1)):this}add(A){return Q(C(this).add(C(A)))}sub(A){return Q(C(this).sub(C(A)))}div(A){return w.from(A).isZero()&&d("division by zero","div"),Q(C(this).div(C(A)))}mul(A){return Q(C(this).mul(C(A)))}mod(A){const t=C(A);return t.isNeg()&&d("cannot modulo negative values","mod"),Q(C(this).umod(t))}pow(A){const t=C(A);return t.isNeg()&&d("cannot raise to negative values","pow"),Q(C(this).pow(t))}and(A){const t=C(A);return(this.isNegative()||t.isNeg())&&d("cannot 'and' negative values","and"),Q(C(this).and(t))}or(A){const t=C(A);return(this.isNegative()||t.isNeg())&&d("cannot 'or' negative values","or"),Q(C(this).or(t))}xor(A){const t=C(A);return(this.isNegative()||t.isNeg())&&d("cannot 'xor' negative values","xor"),Q(C(this).xor(t))}mask(A){return(this.isNegative()||A<0)&&d("cannot mask negative values","mask"),Q(C(this).maskn(A))}shl(A){return(this.isNegative()||A<0)&&d("cannot shift negative values","shl"),Q(C(this).shln(A))}shr(A){return(this.isNegative()||A<0)&&d("cannot shift negative values","shr"),Q(C(this).shrn(A))}eq(A){return C(this).eq(C(A))}lt(A){return C(this).lt(C(A))}lte(A){return C(this).lte(C(A))}gt(A){return C(this).gt(C(A))}gte(A){return C(this).gte(C(A))}isNegative(){return"-"===this._hex[0]}isZero(){return C(this).isZero()}toNumber(){try{return C(this).toNumber()}catch(A){d("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(A){}return u.throwError("this platform does not support BigInt",I.b.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(10===arguments[0]?l||(l=!0,u.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):16===arguments[0]?u.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",I.b.errors.UNEXPECTED_ARGUMENT,{}):u.throwError("BigNumber.toString does not accept parameters",I.b.errors.UNEXPECTED_ARGUMENT,{})),C(this).toString(10)}toHexString(){return this._hex}toJSON(A){return{type:"BigNumber",hex:this.toHexString()}}static from(A){if(A instanceof w)return A;if("string"==typeof A)return A.match(/^-?0x[0-9a-f]+$/i)?new w(h,f(A)):A.match(/^-?[0-9]+$/)?new w(h,f(new c(A))):u.throwArgumentError("invalid BigNumber string","value",A);if("number"==typeof A)return A%1&&d("underflow","BigNumber.from",A),(A>=9007199254740991||A<=-9007199254740991)&&d("overflow","BigNumber.from",A),w.from(String(A));const t=A;if("bigint"==typeof t)return w.from(t.toString());if(Object(a.j)(t))return w.from(Object(a.i)(t));if(t)if(t.toHexString){const A=t.toHexString();if("string"==typeof A)return w.from(A)}else{let A=t._hex;if(null==A&&"BigNumber"===t.type&&(A=t.hex),"string"==typeof A&&(Object(a.l)(A)||"-"===A[0]&&Object(a.l)(A.substring(1))))return w.from(A)}return u.throwArgumentError("invalid BigNumber value","value",A)}static isBigNumber(A){return!(!A||!A._isBigNumber)}}function f(A){if("string"!=typeof A)return f(A.toString(16));if("-"===A[0])return"-"===(A=A.substring(1))[0]&&u.throwArgumentError("invalid hex","value",A),"0x00"===(A=f(A))?A:"-"+A;if("0x"!==A.substring(0,2)&&(A="0x"+A),"0x"===A)return"0x00";for(A.length%2&&(A="0x0"+A.substring(2));A.length>4&&"0x00"===A.substring(0,4);)A="0x"+A.substring(4);return A}function Q(A){return w.from(f(A))}function C(A){const t=w.from(A).toHexString();return"-"===t[0]?new c("-"+t.substring(3),16):new c(t.substring(2),16)}function d(A,t,e){const r={fault:A,operation:t};return null!=e&&(r.value=e),u.throwError(A,I.b.errors.NUMERIC_FAULT,r)}var R=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const p=new I.b("properties/5.5.0");function T(A,t,e){Object.defineProperty(A,t,{enumerable:!0,value:e,writable:!1})}function U(A,t){for(let e=0;e<32;e++){if(A[t])return A[t];if(!A.prototype||"object"!=typeof A.prototype)break;A=Object.getPrototypeOf(A.prototype).constructor}return null}function m(A){return R(this,void 0,void 0,(function*(){const t=Object.keys(A).map(t=>{const e=A[t];return Promise.resolve(e).then(A=>({key:t,value:A}))});return(yield Promise.all(t)).reduce((A,t)=>(A[t.key]=t.value,A),{})}))}function M(A,t){A&&"object"==typeof A||p.throwArgumentError("invalid object","object",A),Object.keys(A).forEach(e=>{t[e]||p.throwArgumentError("invalid object key - "+e,"transaction:"+e,A)})}function F(A){const t={};for(const e in A)t[e]=A[e];return t}const S={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function D(A){if(function A(t){if(null==t||S[typeof t])return!0;if(Array.isArray(t)||"object"==typeof t){if(!Object.isFrozen(t))return!1;const e=Object.keys(t);for(let r=0;r<e.length;r++){let i=null;try{i=t[e[r]]}catch(A){continue}if(!A(i))return!1}return!0}return p.throwArgumentError("Cannot deepCopy "+typeof t,"object",t)}(A))return A;if(Array.isArray(A))return Object.freeze(A.map(A=>N(A)));if("object"==typeof A){const t={};for(const e in A){const r=A[e];void 0!==r&&T(t,e,N(r))}return t}return p.throwArgumentError("Cannot deepCopy "+typeof A,"object",A)}function N(A){return D(A)}class G{constructor(A){for(const t in A)this[t]=N(A[t])}}const y=new I.b("abi/5.5.0");function V(A){const t=[],e=function(A,r){if(Array.isArray(r))for(let i in r){const n=A.slice();n.push(i);try{e(n,r[i])}catch(A){t.push({path:n,error:A})}}};return e([],A),t}class b{constructor(A,t,e,r){this.name=A,this.type=t,this.localName=e,this.dynamic=r}_throwError(A,t){y.throwArgumentError(A,this.localName,t)}}class k{constructor(A){T(this,"wordSize",A||32),this._data=[],this._dataLength=0,this._padding=new Uint8Array(A)}get data(){return Object(a.c)(this._data)}get length(){return this._dataLength}_writeData(A){return this._data.push(A),this._dataLength+=A.length,A.length}appendWriter(A){return this._writeData(Object(a.b)(A._data))}writeBytes(A){let t=Object(a.a)(A);const e=t.length%this.wordSize;return e&&(t=Object(a.b)([t,this._padding.slice(e)])),this._writeData(t)}_getValue(A){let t=Object(a.a)(w.from(A));return t.length>this.wordSize&&y.throwError("value out-of-bounds",I.b.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:t.length}),t.length%this.wordSize&&(t=Object(a.b)([this._padding.slice(t.length%this.wordSize),t])),t}writeValue(A){return this._writeData(this._getValue(A))}writeUpdatableValue(){const A=this._data.length;return this._data.push(this._padding),this._dataLength+=this.wordSize,t=>{this._data[A]=this._getValue(t)}}}class v{constructor(A,t,e,r){T(this,"_data",Object(a.a)(A)),T(this,"wordSize",t||32),T(this,"_coerceFunc",e),T(this,"allowLoose",r),this._offset=0}get data(){return Object(a.i)(this._data)}get consumed(){return this._offset}static coerce(A,t){let e=A.match("^u?int([0-9]+)$");return e&&parseInt(e[1])<=48&&(t=t.toNumber()),t}coerce(A,t){return this._coerceFunc?this._coerceFunc(A,t):v.coerce(A,t)}_peekBytes(A,t,e){let r=Math.ceil(t/this.wordSize)*this.wordSize;return this._offset+r>this._data.length&&(this.allowLoose&&e&&this._offset+t<=this._data.length?r=t:y.throwError("data out-of-bounds",I.b.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+r})),this._data.slice(this._offset,this._offset+r)}subReader(A){return new v(this._data.slice(this._offset+A),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(A,t){let e=this._peekBytes(0,A,!!t);return this._offset+=e.length,e.slice(0,A)}readValue(){return w.from(this.readBytes(this.wordSize))}}var O=e(51),Z=e.n(O);function J(A){return"0x"+Z.a.keccak_256(Object(a.a)(A))}const P=new I.b("rlp/5.5.0");function Y(A){const t=[];for(;A;)t.unshift(255&A),A>>=8;return t}function L(A,t,e){let r=0;for(let i=0;i<e;i++)r=256*r+A[t+i];return r}function x(A){return Object(a.i)(function A(t){if(Array.isArray(t)){let e=[];if(t.forEach((function(t){e=e.concat(A(t))})),e.length<=55)return e.unshift(192+e.length),e;const r=Y(e.length);return r.unshift(247+r.length),r.concat(e)}Object(a.k)(t)||P.throwArgumentError("RLP object must be BytesLike","object",t);const e=Array.prototype.slice.call(Object(a.a)(t));if(1===e.length&&e[0]<=127)return e;if(e.length<=55)return e.unshift(128+e.length),e;const r=Y(e.length);return r.unshift(183+r.length),r.concat(e)}(A))}function H(A,t,e,r){const i=[];for(;e<t+1+r;){const n=W(A,e);i.push(n.result),(e+=n.consumed)>t+1+r&&P.throwError("child data too short",I.b.errors.BUFFER_OVERRUN,{})}return{consumed:1+r,result:i}}function W(A,t){if(0===A.length&&P.throwError("data too short",I.b.errors.BUFFER_OVERRUN,{}),A[t]>=248){const e=A[t]-247;t+1+e>A.length&&P.throwError("data short segment too short",I.b.errors.BUFFER_OVERRUN,{});const r=L(A,t+1,e);return t+1+e+r>A.length&&P.throwError("data long segment too short",I.b.errors.BUFFER_OVERRUN,{}),H(A,t,t+1+e,e+r)}if(A[t]>=192){const e=A[t]-192;return t+1+e>A.length&&P.throwError("data array too short",I.b.errors.BUFFER_OVERRUN,{}),H(A,t,t+1,e)}if(A[t]>=184){const e=A[t]-183;t+1+e>A.length&&P.throwError("data array too short",I.b.errors.BUFFER_OVERRUN,{});const r=L(A,t+1,e);t+1+e+r>A.length&&P.throwError("data array too short",I.b.errors.BUFFER_OVERRUN,{});return{consumed:1+e+r,result:Object(a.i)(A.slice(t+1+e,t+1+e+r))}}if(A[t]>=128){const e=A[t]-128;t+1+e>A.length&&P.throwError("data too short",I.b.errors.BUFFER_OVERRUN,{});return{consumed:1+e,result:Object(a.i)(A.slice(t+1,t+1+e))}}return{consumed:1,result:Object(a.i)(A[t])}}function j(A){const t=Object(a.a)(A),e=W(t,0);return e.consumed!==t.length&&P.throwArgumentError("invalid rlp data","data",A),e.result}const K=new I.b("address/5.5.0");function q(A){Object(a.l)(A,20)||K.throwArgumentError("invalid address","address",A);const t=(A=A.toLowerCase()).substring(2).split(""),e=new Uint8Array(40);for(let A=0;A<40;A++)e[A]=t[A].charCodeAt(0);const r=Object(a.a)(J(e));for(let A=0;A<40;A+=2)r[A>>1]>>4>=8&&(t[A]=t[A].toUpperCase()),(15&r[A>>1])>=8&&(t[A+1]=t[A+1].toUpperCase());return"0x"+t.join("")}const z={};for(let A=0;A<10;A++)z[String(A)]=String(A);for(let A=0;A<26;A++)z[String.fromCharCode(65+A)]=String(10+A);const X=Math.floor((_=9007199254740991,Math.log10?Math.log10(_):Math.log(_)/Math.LN10));var _;function $(A){let t=(A=(A=A.toUpperCase()).substring(4)+A.substring(0,2)+"00").split("").map(A=>z[A]).join("");for(;t.length>=X;){let A=t.substring(0,X);t=parseInt(A,10)%97+t.substring(A.length)}let e=String(98-parseInt(t,10)%97);for(;e.length<2;)e="0"+e;return e}function AA(A){let t=null;if("string"!=typeof A&&K.throwArgumentError("invalid address","address",A),A.match(/^(0x)?[0-9a-fA-F]{40}$/))"0x"!==A.substring(0,2)&&(A="0x"+A),t=q(A),A.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&t!==A&&K.throwArgumentError("bad address checksum","address",A);else if(A.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(A.substring(2,4)!==$(A)&&K.throwArgumentError("bad icap checksum","address",A),e=A.substring(4),t=new c(e,36).toString(16);t.length<40;)t="0"+t;t=q("0x"+t)}else K.throwArgumentError("invalid address","address",A);var e;return t}function tA(A){try{return AA(A),!0}catch(A){}return!1}function eA(A){let t=(e=AA(A).substring(2),new c(e,16).toString(36)).toUpperCase();for(var e;t.length<30;)t="0"+t;return"XE"+$("XE00"+t)+t}function rA(A){let t=null;try{t=AA(A.from)}catch(t){K.throwArgumentError("missing from address","transaction",A)}const e=Object(a.o)(Object(a.a)(w.from(A.nonce).toHexString()));return AA(Object(a.e)(J(x([t,e])),12))}function iA(A,t,e){return 32!==Object(a.d)(t)&&K.throwArgumentError("salt must be 32 bytes","salt",t),32!==Object(a.d)(e)&&K.throwArgumentError("initCodeHash must be 32 bytes","initCodeHash",e),AA(Object(a.e)(J(Object(a.b)(["0xff",AA(A),t,e])),12))}const nA=new I.b("strings/5.5.0");var oA,sA;function EA(A,t,e,r,i){if(A===sA.BAD_PREFIX||A===sA.UNEXPECTED_CONTINUE){let A=0;for(let r=t+1;r<e.length&&e[r]>>6==2;r++)A++;return A}return A===sA.OVERRUN?e.length-t-1:0}!function(A){A.current="",A.NFC="NFC",A.NFD="NFD",A.NFKC="NFKC",A.NFKD="NFKD"}(oA||(oA={})),function(A){A.UNEXPECTED_CONTINUE="unexpected continuation byte",A.BAD_PREFIX="bad codepoint prefix",A.OVERRUN="string overrun",A.MISSING_CONTINUE="missing continuation byte",A.OUT_OF_RANGE="out of UTF-8 range",A.UTF16_SURROGATE="UTF-16 surrogate",A.OVERLONG="overlong representation"}(sA||(sA={}));const aA=Object.freeze({error:function(A,t,e,r,i){return nA.throwArgumentError(`invalid codepoint at offset ${t}; ${A}`,"bytes",e)},ignore:EA,replace:function(A,t,e,r,i){return A===sA.OVERLONG?(r.push(i),0):(r.push(65533),EA(A,t,e))}});function gA(A,t){null==t&&(t=aA.error),A=Object(a.a)(A);const e=[];let r=0;for(;r<A.length;){const i=A[r++];if(i>>7==0){e.push(i);continue}let n=null,o=null;if(192==(224&i))n=1,o=127;else if(224==(240&i))n=2,o=2047;else{if(240!=(248&i)){r+=t(128==(192&i)?sA.UNEXPECTED_CONTINUE:sA.BAD_PREFIX,r-1,A,e);continue}n=3,o=65535}if(r-1+n>=A.length){r+=t(sA.OVERRUN,r-1,A,e);continue}let s=i&(1<<8-n-1)-1;for(let i=0;i<n;i++){let i=A[r];if(128!=(192&i)){r+=t(sA.MISSING_CONTINUE,r,A,e),s=null;break}s=s<<6|63&i,r++}null!==s&&(s>1114111?r+=t(sA.OUT_OF_RANGE,r-1-n,A,e,s):s>=55296&&s<=57343?r+=t(sA.UTF16_SURROGATE,r-1-n,A,e,s):s<=o?r+=t(sA.OVERLONG,r-1-n,A,e,s):e.push(s))}return e}function BA(A,t=oA.current){t!=oA.current&&(nA.checkNormalize(),A=A.normalize(t));let e=[];for(let t=0;t<A.length;t++){const r=A.charCodeAt(t);if(r<128)e.push(r);else if(r<2048)e.push(r>>6|192),e.push(63&r|128);else if(55296==(64512&r)){t++;const i=A.charCodeAt(t);if(t>=A.length||56320!=(64512&i))throw new Error("invalid utf-8 string");const n=65536+((1023&r)<<10)+(1023&i);e.push(n>>18|240),e.push(n>>12&63|128),e.push(n>>6&63|128),e.push(63&n|128)}else e.push(r>>12|224),e.push(r>>6&63|128),e.push(63&r|128)}return Object(a.a)(e)}function IA(A){const t="0000"+A.toString(16);return"\\u"+t.substring(t.length-4)}function cA(A,t){return'"'+gA(A,t).map(A=>{if(A<256){switch(A){case 8:return"\\b";case 9:return"\\t";case 10:return"\\n";case 13:return"\\r";case 34:return'\\"';case 92:return"\\\\"}if(A>=32&&A<127)return String.fromCharCode(A)}return A<=65535?IA(A):IA(55296+((A-=65536)>>10&1023))+IA(56320+(1023&A))}).join("")+'"'}function uA(A){return A.map(A=>A<=65535?String.fromCharCode(A):(A-=65536,String.fromCharCode(55296+(A>>10&1023),56320+(1023&A)))).join("")}function hA(A,t){return uA(gA(A,t))}function lA(A,t=oA.current){return gA(BA(A,t))}function wA(A){return J(BA(A))}class fA extends b{constructor(A){super("address","address",A,!1)}defaultValue(){return"0x0000000000000000000000000000000000000000"}encode(A,t){try{t=AA(t)}catch(A){this._throwError(A.message,t)}return A.writeValue(t)}decode(A){return AA(Object(a.h)(A.readValue().toHexString(),20))}}class QA extends b{constructor(A){super(A.name,A.type,void 0,A.dynamic),this.coder=A}defaultValue(){return this.coder.defaultValue()}encode(A,t){return this.coder.encode(A,t)}decode(A){return this.coder.decode(A)}}const CA=new I.b("abi/5.5.0");function dA(A,t,e){let r=null;if(Array.isArray(e))r=e;else if(e&&"object"==typeof e){let A={};r=t.map(t=>{const r=t.localName;return r||CA.throwError("cannot encode object for signature with missing names",I.b.errors.INVALID_ARGUMENT,{argument:"values",coder:t,value:e}),A[r]&&CA.throwError("cannot encode object for signature with duplicate names",I.b.errors.INVALID_ARGUMENT,{argument:"values",coder:t,value:e}),A[r]=!0,e[r]})}else CA.throwArgumentError("invalid tuple value","tuple",e);t.length!==r.length&&CA.throwArgumentError("types/value length mismatch","tuple",e);let i=new k(A.wordSize),n=new k(A.wordSize),o=[];t.forEach((A,t)=>{let e=r[t];if(A.dynamic){let t=n.length;A.encode(n,e);let r=i.writeUpdatableValue();o.push(A=>{r(A+t)})}else A.encode(i,e)}),o.forEach(A=>{A(i.length)});let s=A.appendWriter(i);return s+=A.appendWriter(n),s}function RA(A,t){let e=[],r=A.subReader(0);t.forEach(t=>{let i=null;if(t.dynamic){let e=A.readValue(),n=r.subReader(e.toNumber());try{i=t.decode(n)}catch(A){if(A.code===I.b.errors.BUFFER_OVERRUN)throw A;i=A,i.baseType=t.name,i.name=t.localName,i.type=t.type}}else try{i=t.decode(A)}catch(A){if(A.code===I.b.errors.BUFFER_OVERRUN)throw A;i=A,i.baseType=t.name,i.name=t.localName,i.type=t.type}null!=i&&e.push(i)});const i=t.reduce((A,t)=>{const e=t.localName;return e&&(A[e]||(A[e]=0),A[e]++),A},{});t.forEach((A,t)=>{let r=A.localName;if(!r||1!==i[r])return;if("length"===r&&(r="_length"),null!=e[r])return;const n=e[t];n instanceof Error?Object.defineProperty(e,r,{enumerable:!0,get:()=>{throw n}}):e[r]=n});for(let A=0;A<e.length;A++){const t=e[A];t instanceof Error&&Object.defineProperty(e,A,{enumerable:!0,get:()=>{throw t}})}return Object.freeze(e)}class pA extends b{constructor(A,t,e){super("array",A.type+"["+(t>=0?t:"")+"]",e,-1===t||A.dynamic),this.coder=A,this.length=t}defaultValue(){const A=this.coder.defaultValue(),t=[];for(let e=0;e<this.length;e++)t.push(A);return t}encode(A,t){Array.isArray(t)||this._throwError("expected array value",t);let e=this.length;-1===e&&(e=t.length,A.writeValue(t.length)),CA.checkArgumentCount(t.length,e,"coder array"+(this.localName?" "+this.localName:""));let r=[];for(let A=0;A<t.length;A++)r.push(this.coder);return dA(A,r,t)}decode(A){let t=this.length;-1===t&&(t=A.readValue().toNumber(),32*t>A._data.length&&CA.throwError("insufficient data length",I.b.errors.BUFFER_OVERRUN,{length:A._data.length,count:t}));let e=[];for(let A=0;A<t;A++)e.push(new QA(this.coder));return A.coerce(this.name,RA(A,e))}}class TA extends b{constructor(A){super("bool","bool",A,!1)}defaultValue(){return!1}encode(A,t){return A.writeValue(t?1:0)}decode(A){return A.coerce(this.type,!A.readValue().isZero())}}class UA extends b{constructor(A,t){super(A,A,t,!0)}defaultValue(){return"0x"}encode(A,t){t=Object(a.a)(t);let e=A.writeValue(t.length);return e+=A.writeBytes(t),e}decode(A){return A.readBytes(A.readValue().toNumber(),!0)}}class mA extends UA{constructor(A){super("bytes",A)}decode(A){return A.coerce(this.name,Object(a.i)(super.decode(A)))}}class MA extends b{constructor(A,t){let e="bytes"+String(A);super(e,e,t,!1),this.size=A}defaultValue(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+2*this.size)}encode(A,t){let e=Object(a.a)(t);return e.length!==this.size&&this._throwError("incorrect data length",t),A.writeBytes(e)}decode(A){return A.coerce(this.name,Object(a.i)(A.readBytes(this.size)))}}class FA extends b{constructor(A){super("null","",A,!1)}defaultValue(){return null}encode(A,t){return null!=t&&this._throwError("not null",t),A.writeBytes([])}decode(A){return A.readBytes(0),A.coerce(this.name,null)}}const SA=w.from(-1),DA=w.from(0),NA=w.from(1),GA=w.from(2),yA=w.from("1000000000000000000"),VA=w.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),bA=w.from("-0x8000000000000000000000000000000000000000000000000000000000000000"),kA=w.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");class vA extends b{constructor(A,t,e){const r=(t?"int":"uint")+8*A;super(r,r,e,!1),this.size=A,this.signed=t}defaultValue(){return 0}encode(A,t){let e=w.from(t),r=VA.mask(8*A.wordSize);if(this.signed){let A=r.mask(8*this.size-1);(e.gt(A)||e.lt(A.add(NA).mul(SA)))&&this._throwError("value out-of-bounds",t)}else(e.lt(DA)||e.gt(r.mask(8*this.size)))&&this._throwError("value out-of-bounds",t);return e=e.toTwos(8*this.size).mask(8*this.size),this.signed&&(e=e.fromTwos(8*this.size).toTwos(8*A.wordSize)),A.writeValue(e)}decode(A){let t=A.readValue().mask(8*this.size);return this.signed&&(t=t.fromTwos(8*this.size)),A.coerce(this.name,t)}}class OA extends UA{constructor(A){super("string",A)}defaultValue(){return""}encode(A,t){return super.encode(A,BA(t))}decode(A){return hA(super.decode(A))}}class ZA extends b{constructor(A,t){let e=!1;const r=[];A.forEach(A=>{A.dynamic&&(e=!0),r.push(A.type)});super("tuple","tuple("+r.join(",")+")",t,e),this.coders=A}defaultValue(){const A=[];this.coders.forEach(t=>{A.push(t.defaultValue())});const t=this.coders.reduce((A,t)=>{const e=t.localName;return e&&(A[e]||(A[e]=0),A[e]++),A},{});return this.coders.forEach((e,r)=>{let i=e.localName;i&&1===t[i]&&("length"===i&&(i="_length"),null==A[i]&&(A[i]=A[r]))}),Object.freeze(A)}encode(A,t){return dA(A,this.coders,t)}decode(A){return A.coerce(this.name,RA(A,this.coders))}}const JA=new I.b("abi/5.5.0"),PA={};let YA={calldata:!0,memory:!0,storage:!0},LA={calldata:!0,memory:!0};function xA(A,t){if("bytes"===A||"string"===A){if(YA[t])return!0}else if("address"===A){if("payable"===t)return!0}else if((A.indexOf("[")>=0||"tuple"===A)&&LA[t])return!0;return(YA[t]||"payable"===t)&&JA.throwArgumentError("invalid modifier","name",t),!1}function HA(A,t){for(let e in t)T(A,e,t[e])}const WA=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"}),jA=new RegExp(/^(.*)\[([0-9]*)\]$/);class KA{constructor(A,t){A!==PA&&JA.throwError("use fromString",I.b.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"}),HA(this,t);let e=this.type.match(jA);HA(this,e?{arrayLength:parseInt(e[2]||"-1"),arrayChildren:KA.fromObject({type:e[1],components:this.components}),baseType:"array"}:{arrayLength:null,arrayChildren:null,baseType:null!=this.components?"tuple":this.type}),this._isParamType=!0,Object.freeze(this)}format(A){if(A||(A=WA.sighash),WA[A]||JA.throwArgumentError("invalid format type","format",A),A===WA.json){let t={type:"tuple"===this.baseType?"tuple":this.type,name:this.name||void 0};return"boolean"==typeof this.indexed&&(t.indexed=this.indexed),this.components&&(t.components=this.components.map(t=>JSON.parse(t.format(A)))),JSON.stringify(t)}let t="";return"array"===this.baseType?(t+=this.arrayChildren.format(A),t+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"):"tuple"===this.baseType?(A!==WA.sighash&&(t+=this.type),t+="("+this.components.map(t=>t.format(A)).join(A===WA.full?", ":",")+")"):t+=this.type,A!==WA.sighash&&(!0===this.indexed&&(t+=" indexed"),A===WA.full&&this.name&&(t+=" "+this.name)),t}static from(A,t){return"string"==typeof A?KA.fromString(A,t):KA.fromObject(A)}static fromObject(A){return KA.isParamType(A)?A:new KA(PA,{name:A.name||null,type:nt(A.type),indexed:null==A.indexed?null:!!A.indexed,components:A.components?A.components.map(KA.fromObject):null})}static fromString(A,t){return function(A){return KA.fromObject({name:A.name,type:A.type,indexed:A.indexed,components:A.components})}(function(A,t){let e=A;function r(t){JA.throwArgumentError("unexpected character at position "+t,"param",A)}function i(A){let e={type:"",name:"",parent:A,state:{allowType:!0}};return t&&(e.indexed=!1),e}A=A.replace(/\s/g," ");let n={type:"",name:"",state:{allowType:!0}},o=n;for(let e=0;e<A.length;e++){let n=A[e];switch(n){case"(":o.state.allowType&&""===o.type?o.type="tuple":o.state.allowParams||r(e),o.state.allowType=!1,o.type=nt(o.type),o.components=[i(o)],o=o.components[0];break;case")":delete o.state,"indexed"===o.name&&(t||r(e),o.indexed=!0,o.name=""),xA(o.type,o.name)&&(o.name=""),o.type=nt(o.type);let A=o;o=o.parent,o||r(e),delete A.parent,o.state.allowParams=!1,o.state.allowName=!0,o.state.allowArray=!0;break;case",":delete o.state,"indexed"===o.name&&(t||r(e),o.indexed=!0,o.name=""),xA(o.type,o.name)&&(o.name=""),o.type=nt(o.type);let s=i(o.parent);o.parent.components.push(s),delete o.parent,o=s;break;case" ":o.state.allowType&&""!==o.type&&(o.type=nt(o.type),delete o.state.allowType,o.state.allowName=!0,o.state.allowParams=!0),o.state.allowName&&""!==o.name&&("indexed"===o.name?(t||r(e),o.indexed&&r(e),o.indexed=!0,o.name=""):xA(o.type,o.name)?o.name="":o.state.allowName=!1);break;case"[":o.state.allowArray||r(e),o.type+=n,o.state.allowArray=!1,o.state.allowName=!1,o.state.readArray=!0;break;case"]":o.state.readArray||r(e),o.type+=n,o.state.readArray=!1,o.state.allowArray=!0,o.state.allowName=!0;break;default:o.state.allowType?(o.type+=n,o.state.allowParams=!0,o.state.allowArray=!0):o.state.allowName?(o.name+=n,delete o.state.allowArray):o.state.readArray?o.type+=n:r(e)}}return o.parent&&JA.throwArgumentError("unexpected eof","param",A),delete n.state,"indexed"===o.name?(t||r(e.length-7),o.indexed&&r(e.length-7),o.indexed=!0,o.name=""):xA(o.type,o.name)&&(o.name=""),n.type=nt(n.type),n}(A,!!t))}static isParamType(A){return!(null==A||!A._isParamType)}}function qA(A,t){return function(A){A=A.trim();let t=[],e="",r=0;for(let i=0;i<A.length;i++){let n=A[i];","===n&&0===r?(t.push(e),e=""):(e+=n,"("===n?r++:")"===n&&(r--,-1===r&&JA.throwArgumentError("unbalanced parenthesis","value",A)))}e&&t.push(e);return t}(A).map(A=>KA.fromString(A,t))}class zA{constructor(A,t){A!==PA&&JA.throwError("use a static from method",I.b.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"}),HA(this,t),this._isFragment=!0,Object.freeze(this)}static from(A){return zA.isFragment(A)?A:"string"==typeof A?zA.fromString(A):zA.fromObject(A)}static fromObject(A){if(zA.isFragment(A))return A;switch(A.type){case"function":return et.fromObject(A);case"event":return XA.fromObject(A);case"constructor":return tt.fromObject(A);case"error":return it.fromObject(A);case"fallback":case"receive":return null}return JA.throwArgumentError("invalid fragment object","value",A)}static fromString(A){return"event"===(A=(A=(A=A.replace(/\s/g," ")).replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," ")).trim()).split(" ")[0]?XA.fromString(A.substring(5).trim()):"function"===A.split(" ")[0]?et.fromString(A.substring(8).trim()):"constructor"===A.split("(")[0].trim()?tt.fromString(A.trim()):"error"===A.split(" ")[0]?it.fromString(A.substring(5).trim()):JA.throwArgumentError("unsupported fragment","value",A)}static isFragment(A){return!(!A||!A._isFragment)}}class XA extends zA{format(A){if(A||(A=WA.sighash),WA[A]||JA.throwArgumentError("invalid format type","format",A),A===WA.json)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map(t=>JSON.parse(t.format(A)))});let t="";return A!==WA.sighash&&(t+="event "),t+=this.name+"("+this.inputs.map(t=>t.format(A)).join(A===WA.full?", ":",")+") ",A!==WA.sighash&&this.anonymous&&(t+="anonymous "),t.trim()}static from(A){return"string"==typeof A?XA.fromString(A):XA.fromObject(A)}static fromObject(A){if(XA.isEventFragment(A))return A;"event"!==A.type&&JA.throwArgumentError("invalid event object","value",A);const t={name:st(A.name),anonymous:A.anonymous,inputs:A.inputs?A.inputs.map(KA.fromObject):[],type:"event"};return new XA(PA,t)}static fromString(A){let t=A.match(Et);t||JA.throwArgumentError("invalid event string","value",A);let e=!1;return t[3].split(" ").forEach(A=>{switch(A.trim()){case"anonymous":e=!0;break;case"":break;default:JA.warn("unknown modifier: "+A)}}),XA.fromObject({name:t[1].trim(),anonymous:e,inputs:qA(t[2],!0),type:"event"})}static isEventFragment(A){return A&&A._isFragment&&"event"===A.type}}function _A(A,t){t.gas=null;let e=A.split("@");return 1!==e.length?(e.length>2&&JA.throwArgumentError("invalid human-readable ABI signature","value",A),e[1].match(/^[0-9]+$/)||JA.throwArgumentError("invalid human-readable ABI signature gas","value",A),t.gas=w.from(e[1]),e[0]):A}function $A(A,t){t.constant=!1,t.payable=!1,t.stateMutability="nonpayable",A.split(" ").forEach(A=>{switch(A.trim()){case"constant":t.constant=!0;break;case"payable":t.payable=!0,t.stateMutability="payable";break;case"nonpayable":t.payable=!1,t.stateMutability="nonpayable";break;case"pure":t.constant=!0,t.stateMutability="pure";break;case"view":t.constant=!0,t.stateMutability="view";break;case"external":case"public":case"":break;default:console.log("unknown modifier: "+A)}})}function At(A){let t={constant:!1,payable:!0,stateMutability:"payable"};return null!=A.stateMutability?(t.stateMutability=A.stateMutability,t.constant="view"===t.stateMutability||"pure"===t.stateMutability,null!=A.constant&&!!A.constant!==t.constant&&JA.throwArgumentError("cannot have constant function with mutability "+t.stateMutability,"value",A),t.payable="payable"===t.stateMutability,null!=A.payable&&!!A.payable!==t.payable&&JA.throwArgumentError("cannot have payable function with mutability "+t.stateMutability,"value",A)):null!=A.payable?(t.payable=!!A.payable,null!=A.constant||t.payable||"constructor"===A.type||JA.throwArgumentError("unable to determine stateMutability","value",A),t.constant=!!A.constant,t.constant?t.stateMutability="view":t.stateMutability=t.payable?"payable":"nonpayable",t.payable&&t.constant&&JA.throwArgumentError("cannot have constant payable function","value",A)):null!=A.constant?(t.constant=!!A.constant,t.payable=!t.constant,t.stateMutability=t.constant?"view":"payable"):"constructor"!==A.type&&JA.throwArgumentError("unable to determine stateMutability","value",A),t}class tt extends zA{format(A){if(A||(A=WA.sighash),WA[A]||JA.throwArgumentError("invalid format type","format",A),A===WA.json)return JSON.stringify({type:"constructor",stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map(t=>JSON.parse(t.format(A)))});A===WA.sighash&&JA.throwError("cannot format a constructor for sighash",I.b.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"});let t="constructor("+this.inputs.map(t=>t.format(A)).join(A===WA.full?", ":",")+") ";return this.stateMutability&&"nonpayable"!==this.stateMutability&&(t+=this.stateMutability+" "),t.trim()}static from(A){return"string"==typeof A?tt.fromString(A):tt.fromObject(A)}static fromObject(A){if(tt.isConstructorFragment(A))return A;"constructor"!==A.type&&JA.throwArgumentError("invalid constructor object","value",A);let t=At(A);t.constant&&JA.throwArgumentError("constructor cannot be constant","value",A);const e={name:null,type:A.type,inputs:A.inputs?A.inputs.map(KA.fromObject):[],payable:t.payable,stateMutability:t.stateMutability,gas:A.gas?w.from(A.gas):null};return new tt(PA,e)}static fromString(A){let t={type:"constructor"},e=(A=_A(A,t)).match(Et);return e&&"constructor"===e[1].trim()||JA.throwArgumentError("invalid constructor string","value",A),t.inputs=qA(e[2].trim(),!1),$A(e[3].trim(),t),tt.fromObject(t)}static isConstructorFragment(A){return A&&A._isFragment&&"constructor"===A.type}}class et extends tt{format(A){if(A||(A=WA.sighash),WA[A]||JA.throwArgumentError("invalid format type","format",A),A===WA.json)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map(t=>JSON.parse(t.format(A))),outputs:this.outputs.map(t=>JSON.parse(t.format(A)))});let t="";return A!==WA.sighash&&(t+="function "),t+=this.name+"("+this.inputs.map(t=>t.format(A)).join(A===WA.full?", ":",")+") ",A!==WA.sighash&&(this.stateMutability?"nonpayable"!==this.stateMutability&&(t+=this.stateMutability+" "):this.constant&&(t+="view "),this.outputs&&this.outputs.length&&(t+="returns ("+this.outputs.map(t=>t.format(A)).join(", ")+") "),null!=this.gas&&(t+="@"+this.gas.toString()+" ")),t.trim()}static from(A){return"string"==typeof A?et.fromString(A):et.fromObject(A)}static fromObject(A){if(et.isFunctionFragment(A))return A;"function"!==A.type&&JA.throwArgumentError("invalid function object","value",A);let t=At(A);const e={type:A.type,name:st(A.name),constant:t.constant,inputs:A.inputs?A.inputs.map(KA.fromObject):[],outputs:A.outputs?A.outputs.map(KA.fromObject):[],payable:t.payable,stateMutability:t.stateMutability,gas:A.gas?w.from(A.gas):null};return new et(PA,e)}static fromString(A){let t={type:"function"},e=(A=_A(A,t)).split(" returns ");e.length>2&&JA.throwArgumentError("invalid function string","value",A);let r=e[0].match(Et);if(r||JA.throwArgumentError("invalid function signature","value",A),t.name=r[1].trim(),t.name&&st(t.name),t.inputs=qA(r[2],!1),$A(r[3].trim(),t),e.length>1){let r=e[1].match(Et);""==r[1].trim()&&""==r[3].trim()||JA.throwArgumentError("unexpected tokens","value",A),t.outputs=qA(r[2],!1)}else t.outputs=[];return et.fromObject(t)}static isFunctionFragment(A){return A&&A._isFragment&&"function"===A.type}}function rt(A){const t=A.format();return"Error(string)"!==t&&"Panic(uint256)"!==t||JA.throwArgumentError(`cannot specify user defined ${t} error`,"fragment",A),A}class it extends zA{format(A){if(A||(A=WA.sighash),WA[A]||JA.throwArgumentError("invalid format type","format",A),A===WA.json)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map(t=>JSON.parse(t.format(A)))});let t="";return A!==WA.sighash&&(t+="error "),t+=this.name+"("+this.inputs.map(t=>t.format(A)).join(A===WA.full?", ":",")+") ",t.trim()}static from(A){return"string"==typeof A?it.fromString(A):it.fromObject(A)}static fromObject(A){if(it.isErrorFragment(A))return A;"error"!==A.type&&JA.throwArgumentError("invalid error object","value",A);const t={type:A.type,name:st(A.name),inputs:A.inputs?A.inputs.map(KA.fromObject):[]};return rt(new it(PA,t))}static fromString(A){let t={type:"error"},e=A.match(Et);return e||JA.throwArgumentError("invalid error signature","value",A),t.name=e[1].trim(),t.name&&st(t.name),t.inputs=qA(e[2],!1),rt(it.fromObject(t))}static isErrorFragment(A){return A&&A._isFragment&&"error"===A.type}}function nt(A){return A.match(/^uint($|[^1-9])/)?A="uint256"+A.substring(4):A.match(/^int($|[^1-9])/)&&(A="int256"+A.substring(3)),A}const ot=new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");function st(A){return A&&A.match(ot)||JA.throwArgumentError(`invalid identifier "${A}"`,"value",A),A}const Et=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");const at=new I.b("abi/5.5.0"),gt=new RegExp(/^bytes([0-9]*)$/),Bt=new RegExp(/^(u?int)([0-9]*)$/);class It{constructor(A){at.checkNew(new.target,It),T(this,"coerceFunc",A||null)}_getCoder(A){switch(A.baseType){case"address":return new fA(A.name);case"bool":return new TA(A.name);case"string":return new OA(A.name);case"bytes":return new mA(A.name);case"array":return new pA(this._getCoder(A.arrayChildren),A.arrayLength,A.name);case"tuple":return new ZA((A.components||[]).map(A=>this._getCoder(A)),A.name);case"":return new FA(A.name)}let t=A.type.match(Bt);if(t){let e=parseInt(t[2]||"256");return(0===e||e>256||e%8!=0)&&at.throwArgumentError("invalid "+t[1]+" bit length","param",A),new vA(e/8,"int"===t[1],A.name)}if(t=A.type.match(gt),t){let e=parseInt(t[1]);return(0===e||e>32)&&at.throwArgumentError("invalid bytes length","param",A),new MA(e,A.name)}return at.throwArgumentError("invalid type","type",A.type)}_getWordSize(){return 32}_getReader(A,t){return new v(A,this._getWordSize(),this.coerceFunc,t)}_getWriter(){return new k(this._getWordSize())}getDefaultValue(A){const t=A.map(A=>this._getCoder(KA.from(A)));return new ZA(t,"_").defaultValue()}encode(A,t){A.length!==t.length&&at.throwError("types/values length mismatch",I.b.errors.INVALID_ARGUMENT,{count:{types:A.length,values:t.length},value:{types:A,values:t}});const e=A.map(A=>this._getCoder(KA.from(A))),r=new ZA(e,"_"),i=this._getWriter();return r.encode(i,t),i.data}decode(A,t,e){const r=A.map(A=>this._getCoder(KA.from(A)));return new ZA(r,"_").decode(this._getReader(Object(a.a)(t),e))}}const ct=new It,ut=new I.b("abi/5.5.0");class ht extends G{}class lt extends G{}class wt extends G{}class ft extends G{static isIndexed(A){return!(!A||!A._isIndexed)}}const Qt={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:!0},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"]}};function Ct(A,t){const e=new Error("deferred error during ABI decoding triggered accessing "+A);return e.error=t,e}class dt{constructor(A){ut.checkNew(new.target,dt);let t=[];t="string"==typeof A?JSON.parse(A):A,T(this,"fragments",t.map(A=>zA.from(A)).filter(A=>null!=A)),T(this,"_abiCoder",U(new.target,"getAbiCoder")()),T(this,"functions",{}),T(this,"errors",{}),T(this,"events",{}),T(this,"structs",{}),this.fragments.forEach(A=>{let t=null;switch(A.type){case"constructor":return this.deploy?void ut.warn("duplicate definition - constructor"):void T(this,"deploy",A);case"function":t=this.functions;break;case"event":t=this.events;break;case"error":t=this.errors;break;default:return}let e=A.format();t[e]?ut.warn("duplicate definition - "+e):t[e]=A}),this.deploy||T(this,"deploy",tt.from({payable:!1,type:"constructor"})),T(this,"_isInterface",!0)}format(A){A||(A=WA.full),A===WA.sighash&&ut.throwArgumentError("interface does not support formatting sighash","format",A);const t=this.fragments.map(t=>t.format(A));return A===WA.json?JSON.stringify(t.map(A=>JSON.parse(A))):t}static getAbiCoder(){return ct}static getAddress(A){return AA(A)}static getSighash(A){return Object(a.e)(wA(A.format()),0,4)}static getEventTopic(A){return wA(A.format())}getFunction(A){if(Object(a.l)(A)){for(const t in this.functions)if(A===this.getSighash(t))return this.functions[t];ut.throwArgumentError("no matching function","sighash",A)}if(-1===A.indexOf("(")){const t=A.trim(),e=Object.keys(this.functions).filter(A=>A.split("(")[0]===t);return 0===e.length?ut.throwArgumentError("no matching function","name",t):e.length>1&&ut.throwArgumentError("multiple matching functions","name",t),this.functions[e[0]]}const t=this.functions[et.fromString(A).format()];return t||ut.throwArgumentError("no matching function","signature",A),t}getEvent(A){if(Object(a.l)(A)){const t=A.toLowerCase();for(const A in this.events)if(t===this.getEventTopic(A))return this.events[A];ut.throwArgumentError("no matching event","topichash",t)}if(-1===A.indexOf("(")){const t=A.trim(),e=Object.keys(this.events).filter(A=>A.split("(")[0]===t);return 0===e.length?ut.throwArgumentError("no matching event","name",t):e.length>1&&ut.throwArgumentError("multiple matching events","name",t),this.events[e[0]]}const t=this.events[XA.fromString(A).format()];return t||ut.throwArgumentError("no matching event","signature",A),t}getError(A){if(Object(a.l)(A)){const t=U(this.constructor,"getSighash");for(const e in this.errors){if(A===t(this.errors[e]))return this.errors[e]}ut.throwArgumentError("no matching error","sighash",A)}if(-1===A.indexOf("(")){const t=A.trim(),e=Object.keys(this.errors).filter(A=>A.split("(")[0]===t);return 0===e.length?ut.throwArgumentError("no matching error","name",t):e.length>1&&ut.throwArgumentError("multiple matching errors","name",t),this.errors[e[0]]}const t=this.errors[et.fromString(A).format()];return t||ut.throwArgumentError("no matching error","signature",A),t}getSighash(A){if("string"==typeof A)try{A=this.getFunction(A)}catch(t){try{A=this.getError(A)}catch(A){throw t}}return U(this.constructor,"getSighash")(A)}getEventTopic(A){return"string"==typeof A&&(A=this.getEvent(A)),U(this.constructor,"getEventTopic")(A)}_decodeParams(A,t){return this._abiCoder.decode(A,t)}_encodeParams(A,t){return this._abiCoder.encode(A,t)}encodeDeploy(A){return this._encodeParams(this.deploy.inputs,A||[])}decodeErrorResult(A,t){"string"==typeof A&&(A=this.getError(A));const e=Object(a.a)(t);return Object(a.i)(e.slice(0,4))!==this.getSighash(A)&&ut.throwArgumentError(`data signature does not match error ${A.name}.`,"data",Object(a.i)(e)),this._decodeParams(A.inputs,e.slice(4))}encodeErrorResult(A,t){return"string"==typeof A&&(A=this.getError(A)),Object(a.i)(Object(a.b)([this.getSighash(A),this._encodeParams(A.inputs,t||[])]))}decodeFunctionData(A,t){"string"==typeof A&&(A=this.getFunction(A));const e=Object(a.a)(t);return Object(a.i)(e.slice(0,4))!==this.getSighash(A)&&ut.throwArgumentError(`data signature does not match function ${A.name}.`,"data",Object(a.i)(e)),this._decodeParams(A.inputs,e.slice(4))}encodeFunctionData(A,t){return"string"==typeof A&&(A=this.getFunction(A)),Object(a.i)(Object(a.b)([this.getSighash(A),this._encodeParams(A.inputs,t||[])]))}decodeFunctionResult(A,t){"string"==typeof A&&(A=this.getFunction(A));let e=Object(a.a)(t),r=null,i=null,n=null,o=null;switch(e.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(A.outputs,e)}catch(A){}break;case 4:{const A=Object(a.i)(e.slice(0,4)),t=Qt[A];if(t)i=this._abiCoder.decode(t.inputs,e.slice(4)),n=t.name,o=t.signature,t.reason&&(r=i[0]);else try{const t=this.getError(A);i=this._abiCoder.decode(t.inputs,e.slice(4)),n=t.name,o=t.format()}catch(A){console.log(A)}break}}return ut.throwError("call revert exception",I.b.errors.CALL_EXCEPTION,{method:A.format(),errorArgs:i,errorName:n,errorSignature:o,reason:r})}encodeFunctionResult(A,t){return"string"==typeof A&&(A=this.getFunction(A)),Object(a.i)(this._abiCoder.encode(A.outputs,t||[]))}encodeFilterTopics(A,t){"string"==typeof A&&(A=this.getEvent(A)),t.length>A.inputs.length&&ut.throwError("too many arguments for "+A.format(),I.b.errors.UNEXPECTED_ARGUMENT,{argument:"values",value:t});let e=[];A.anonymous||e.push(this.getEventTopic(A));const r=(A,t)=>"string"===A.type?wA(t):"bytes"===A.type?J(Object(a.i)(t)):("address"===A.type&&this._abiCoder.encode(["address"],[t]),Object(a.h)(Object(a.i)(t),32));for(t.forEach((t,i)=>{let n=A.inputs[i];n.indexed?null==t?e.push(null):"array"===n.baseType||"tuple"===n.baseType?ut.throwArgumentError("filtering with tuples or arrays not supported","contract."+n.name,t):Array.isArray(t)?e.push(t.map(A=>r(n,A))):e.push(r(n,t)):null!=t&&ut.throwArgumentError("cannot filter non-indexed parameters; must be null","contract."+n.name,t)});e.length&&null===e[e.length-1];)e.pop();return e}encodeEventLog(A,t){"string"==typeof A&&(A=this.getEvent(A));const e=[],r=[],i=[];return A.anonymous||e.push(this.getEventTopic(A)),t.length!==A.inputs.length&&ut.throwArgumentError("event arguments/values mismatch","values",t),A.inputs.forEach((A,n)=>{const o=t[n];if(A.indexed)if("string"===A.type)e.push(wA(o));else if("bytes"===A.type)e.push(J(o));else{if("tuple"===A.baseType||"array"===A.baseType)throw new Error("not implemented");e.push(this._abiCoder.encode([A.type],[o]))}else r.push(A),i.push(o)}),{data:this._abiCoder.encode(r,i),topics:e}}decodeEventLog(A,t,e){if("string"==typeof A&&(A=this.getEvent(A)),null!=e&&!A.anonymous){let t=this.getEventTopic(A);Object(a.l)(e[0],32)&&e[0].toLowerCase()===t||ut.throwError("fragment/topic mismatch",I.b.errors.INVALID_ARGUMENT,{argument:"topics[0]",expected:t,value:e[0]}),e=e.slice(1)}let r=[],i=[],n=[];A.inputs.forEach((A,t)=>{A.indexed?"string"===A.type||"bytes"===A.type||"tuple"===A.baseType||"array"===A.baseType?(r.push(KA.fromObject({type:"bytes32",name:A.name})),n.push(!0)):(r.push(A),n.push(!1)):(i.push(A),n.push(!1))});let o=null!=e?this._abiCoder.decode(r,Object(a.b)(e)):null,s=this._abiCoder.decode(i,t,!0),E=[],g=0,B=0;A.inputs.forEach((A,t)=>{if(A.indexed)if(null==o)E[t]=new ft({_isIndexed:!0,hash:null});else if(n[t])E[t]=new ft({_isIndexed:!0,hash:o[B++]});else try{E[t]=o[B++]}catch(A){E[t]=A}else try{E[t]=s[g++]}catch(A){E[t]=A}if(A.name&&null==E[A.name]){const e=E[t];e instanceof Error?Object.defineProperty(E,A.name,{enumerable:!0,get:()=>{throw Ct("property "+JSON.stringify(A.name),e)}}):E[A.name]=e}});for(let A=0;A<E.length;A++){const t=E[A];t instanceof Error&&Object.defineProperty(E,A,{enumerable:!0,get:()=>{throw Ct("index "+A,t)}})}return Object.freeze(E)}parseTransaction(A){let t=this.getFunction(A.data.substring(0,10).toLowerCase());return t?new lt({args:this._abiCoder.decode(t.inputs,"0x"+A.data.substring(10)),functionFragment:t,name:t.name,signature:t.format(),sighash:this.getSighash(t),value:w.from(A.value||"0")}):null}parseLog(A){let t=this.getEvent(A.topics[0]);return!t||t.anonymous?null:new ht({eventFragment:t,name:t.name,signature:t.format(),topic:this.getEventTopic(t),args:this.decodeEventLog(t,A.data,A.topics)})}parseError(A){const t=Object(a.i)(A);let e=this.getError(t.substring(0,10).toLowerCase());return e?new wt({args:this._abiCoder.decode(e.inputs,"0x"+t.substring(10)),errorFragment:e,name:e.name,signature:e.format(),sighash:this.getSighash(e)}):null}static isInterface(A){return!(!A||!A._isInterface)}}var Rt=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const pt=new I.b("abstract-provider/5.5.1");class Tt extends G{static isForkEvent(A){return!(!A||!A._isForkEvent)}}class Ut{constructor(){pt.checkAbstract(new.target,Ut),T(this,"_isProvider",!0)}getFeeData(){return Rt(this,void 0,void 0,(function*(){const{block:A,gasPrice:t}=yield m({block:this.getBlock("latest"),gasPrice:this.getGasPrice().catch(A=>null)});let e=null,r=null;return A&&A.baseFeePerGas&&(r=w.from("2500000000"),e=A.baseFeePerGas.mul(2).add(r)),{maxFeePerGas:e,maxPriorityFeePerGas:r,gasPrice:t}}))}addListener(A,t){return this.on(A,t)}removeListener(A,t){return this.off(A,t)}static isProvider(A){return!(!A||!A._isProvider)}}var mt=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Mt=new I.b("abstract-signer/5.5.0"),Ft=["accessList","chainId","customData","data","from","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value"],St=[I.b.errors.INSUFFICIENT_FUNDS,I.b.errors.NONCE_EXPIRED,I.b.errors.REPLACEMENT_UNDERPRICED];class Dt{constructor(){Mt.checkAbstract(new.target,Dt),T(this,"_isSigner",!0)}getBalance(A){return mt(this,void 0,void 0,(function*(){return this._checkProvider("getBalance"),yield this.provider.getBalance(this.getAddress(),A)}))}getTransactionCount(A){return mt(this,void 0,void 0,(function*(){return this._checkProvider("getTransactionCount"),yield this.provider.getTransactionCount(this.getAddress(),A)}))}estimateGas(A){return mt(this,void 0,void 0,(function*(){this._checkProvider("estimateGas");const t=yield m(this.checkTransaction(A));return yield this.provider.estimateGas(t)}))}call(A,t){return mt(this,void 0,void 0,(function*(){this._checkProvider("call");const e=yield m(this.checkTransaction(A));return yield this.provider.call(e,t)}))}sendTransaction(A){return mt(this,void 0,void 0,(function*(){this._checkProvider("sendTransaction");const t=yield this.populateTransaction(A),e=yield this.signTransaction(t);return yield this.provider.sendTransaction(e)}))}getChainId(){return mt(this,void 0,void 0,(function*(){this._checkProvider("getChainId");return(yield this.provider.getNetwork()).chainId}))}getGasPrice(){return mt(this,void 0,void 0,(function*(){return this._checkProvider("getGasPrice"),yield this.provider.getGasPrice()}))}getFeeData(){return mt(this,void 0,void 0,(function*(){return this._checkProvider("getFeeData"),yield this.provider.getFeeData()}))}resolveName(A){return mt(this,void 0,void 0,(function*(){return this._checkProvider("resolveName"),yield this.provider.resolveName(A)}))}checkTransaction(A){for(const t in A)-1===Ft.indexOf(t)&&Mt.throwArgumentError("invalid transaction key: "+t,"transaction",A);const t=F(A);return null==t.from?t.from=this.getAddress():t.from=Promise.all([Promise.resolve(t.from),this.getAddress()]).then(t=>(t[0].toLowerCase()!==t[1].toLowerCase()&&Mt.throwArgumentError("from address mismatch","transaction",A),t[0])),t}populateTransaction(A){return mt(this,void 0,void 0,(function*(){const t=yield m(this.checkTransaction(A));null!=t.to&&(t.to=Promise.resolve(t.to).then(A=>mt(this,void 0,void 0,(function*(){if(null==A)return null;const t=yield this.resolveName(A);return null==t&&Mt.throwArgumentError("provided ENS name resolves to null","tx.to",A),t}))),t.to.catch(A=>{}));const e=null!=t.maxFeePerGas||null!=t.maxPriorityFeePerGas;if(null==t.gasPrice||2!==t.type&&!e?0!==t.type&&1!==t.type||!e||Mt.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","transaction",A):Mt.throwArgumentError("eip-1559 transaction do not support gasPrice","transaction",A),2!==t.type&&null!=t.type||null==t.maxFeePerGas||null==t.maxPriorityFeePerGas)if(0===t.type||1===t.type)null==t.gasPrice&&(t.gasPrice=this.getGasPrice());else{const A=yield this.getFeeData();if(null==t.type)if(null!=A.maxFeePerGas&&null!=A.maxPriorityFeePerGas)if(t.type=2,null!=t.gasPrice){const A=t.gasPrice;delete t.gasPrice,t.maxFeePerGas=A,t.maxPriorityFeePerGas=A}else null==t.maxFeePerGas&&(t.maxFeePerGas=A.maxFeePerGas),null==t.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=A.maxPriorityFeePerGas);else null!=A.gasPrice?(e&&Mt.throwError("network does not support EIP-1559",I.b.errors.UNSUPPORTED_OPERATION,{operation:"populateTransaction"}),null==t.gasPrice&&(t.gasPrice=A.gasPrice),t.type=0):Mt.throwError("failed to get consistent fee data",I.b.errors.UNSUPPORTED_OPERATION,{operation:"signer.getFeeData"});else 2===t.type&&(null==t.maxFeePerGas&&(t.maxFeePerGas=A.maxFeePerGas),null==t.maxPriorityFeePerGas&&(t.maxPriorityFeePerGas=A.maxPriorityFeePerGas))}else t.type=2;return null==t.nonce&&(t.nonce=this.getTransactionCount("pending")),null==t.gasLimit&&(t.gasLimit=this.estimateGas(t).catch(A=>{if(St.indexOf(A.code)>=0)throw A;return Mt.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",I.b.errors.UNPREDICTABLE_GAS_LIMIT,{error:A,tx:t})})),null==t.chainId?t.chainId=this.getChainId():t.chainId=Promise.all([Promise.resolve(t.chainId),this.getChainId()]).then(t=>(0!==t[1]&&t[0]!==t[1]&&Mt.throwArgumentError("chainId address mismatch","transaction",A),t[0])),yield m(t)}))}_checkProvider(A){this.provider||Mt.throwError("missing provider",I.b.errors.UNSUPPORTED_OPERATION,{operation:A||"_checkProvider"})}static isSigner(A){return!(!A||!A._isSigner)}}class Nt extends Dt{constructor(A,t){Mt.checkNew(new.target,Nt),super(),T(this,"address",A),T(this,"provider",t||null)}getAddress(){return Promise.resolve(this.address)}_fail(A,t){return Promise.resolve().then(()=>{Mt.throwError(A,I.b.errors.UNSUPPORTED_OPERATION,{operation:t})})}signMessage(A){return this._fail("VoidSigner cannot sign messages","signMessage")}signTransaction(A){return this._fail("VoidSigner cannot sign transactions","signTransaction")}_signTypedData(A,t,e){return this._fail("VoidSigner cannot sign typed data","signTypedData")}connect(A){return new Nt(this.address,A)}}var Gt=e(50);const yt=new I.b("signing-key/5.5.0");let Vt=null;function bt(){return Vt||(Vt=new Gt.a("secp256k1")),Vt}class kt{constructor(A){T(this,"curve","secp256k1"),T(this,"privateKey",Object(a.i)(A));const t=bt().keyFromPrivate(Object(a.a)(this.privateKey));T(this,"publicKey","0x"+t.getPublic(!1,"hex")),T(this,"compressedPublicKey","0x"+t.getPublic(!0,"hex")),T(this,"_isSigningKey",!0)}_addPoint(A){const t=bt().keyFromPublic(Object(a.a)(this.publicKey)),e=bt().keyFromPublic(Object(a.a)(A));return"0x"+t.pub.add(e.pub).encodeCompressed("hex")}signDigest(A){const t=bt().keyFromPrivate(Object(a.a)(this.privateKey)),e=Object(a.a)(A);32!==e.length&&yt.throwArgumentError("bad digest length","digest",A);const r=t.sign(e,{canonical:!0});return Object(a.n)({recoveryParam:r.recoveryParam,r:Object(a.h)("0x"+r.r.toString(16),32),s:Object(a.h)("0x"+r.s.toString(16),32)})}computeSharedSecret(A){const t=bt().keyFromPrivate(Object(a.a)(this.privateKey)),e=bt().keyFromPublic(Object(a.a)(Ot(A)));return Object(a.h)("0x"+t.derive(e.getPublic()).toString(16),32)}static isSigningKey(A){return!(!A||!A._isSigningKey)}}function vt(A,t){const e=Object(a.n)(t),r={r:Object(a.a)(e.r),s:Object(a.a)(e.s)};return"0x"+bt().recoverPubKey(Object(a.a)(A),r,e.recoveryParam).encode("hex",!1)}function Ot(A,t){const e=Object(a.a)(A);if(32===e.length){const A=new kt(e);return t?"0x"+bt().keyFromPrivate(e).getPublic(!0,"hex"):A.publicKey}return 33===e.length?t?Object(a.i)(e):"0x"+bt().keyFromPublic(e).getPublic(!1,"hex"):65===e.length?t?"0x"+bt().keyFromPublic(e).getPublic(!0,"hex"):Object(a.i)(e):yt.throwArgumentError("invalid public or private key","key","[REDACTED]")}const Zt=new I.b("transactions/5.5.0");var Jt;function Pt(A){return"0x"===A?null:AA(A)}function Yt(A){return"0x"===A?DA:w.from(A)}!function(A){A[A.legacy=0]="legacy",A[A.eip2930=1]="eip2930",A[A.eip1559=2]="eip1559"}(Jt||(Jt={}));const Lt=[{name:"nonce",maxLength:32,numeric:!0},{name:"gasPrice",maxLength:32,numeric:!0},{name:"gasLimit",maxLength:32,numeric:!0},{name:"to",length:20},{name:"value",maxLength:32,numeric:!0},{name:"data"}],xt={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,type:!0,value:!0};function Ht(A){const t=Ot(A);return AA(Object(a.e)(J(Object(a.e)(t,1)),12))}function Wt(A,t){return Ht(vt(Object(a.a)(A),t))}function jt(A,t){const e=Object(a.o)(w.from(A).toHexString());return e.length>32&&Zt.throwArgumentError("invalid length for "+t,"transaction:"+t,A),e}function Kt(A,t){return{address:AA(A),storageKeys:(t||[]).map((t,e)=>(32!==Object(a.d)(t)&&Zt.throwArgumentError("invalid access list storageKey",`accessList[${A}:${e}]`,t),t.toLowerCase()))}}function qt(A){if(Array.isArray(A))return A.map((A,t)=>Array.isArray(A)?(A.length>2&&Zt.throwArgumentError("access list expected to be [ address, storageKeys[] ]",`value[${t}]`,A),Kt(A[0],A[1])):Kt(A.address,A.storageKeys));const t=Object.keys(A).map(t=>{const e=A[t].reduce((A,t)=>(A[t]=!0,A),{});return Kt(t,Object.keys(e).sort())});return t.sort((A,t)=>A.address.localeCompare(t.address)),t}function zt(A){return qt(A).map(A=>[A.address,A.storageKeys])}function Xt(A,t){if(null!=A.gasPrice){const t=w.from(A.gasPrice),e=w.from(A.maxFeePerGas||0);t.eq(e)||Zt.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas","tx",{gasPrice:t,maxFeePerGas:e})}const e=[jt(A.chainId||0,"chainId"),jt(A.nonce||0,"nonce"),jt(A.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),jt(A.maxFeePerGas||0,"maxFeePerGas"),jt(A.gasLimit||0,"gasLimit"),null!=A.to?AA(A.to):"0x",jt(A.value||0,"value"),A.data||"0x",zt(A.accessList||[])];if(t){const A=Object(a.n)(t);e.push(jt(A.recoveryParam,"recoveryParam")),e.push(Object(a.o)(A.r)),e.push(Object(a.o)(A.s))}return Object(a.c)(["0x02",x(e)])}function _t(A,t){const e=[jt(A.chainId||0,"chainId"),jt(A.nonce||0,"nonce"),jt(A.gasPrice||0,"gasPrice"),jt(A.gasLimit||0,"gasLimit"),null!=A.to?AA(A.to):"0x",jt(A.value||0,"value"),A.data||"0x",zt(A.accessList||[])];if(t){const A=Object(a.n)(t);e.push(jt(A.recoveryParam,"recoveryParam")),e.push(Object(a.o)(A.r)),e.push(Object(a.o)(A.s))}return Object(a.c)(["0x01",x(e)])}function $t(A,t){if(null==A.type||0===A.type)return null!=A.accessList&&Zt.throwArgumentError("untyped transactions do not support accessList; include type: 1","transaction",A),function(A,t){M(A,xt);const e=[];Lt.forEach((function(t){let r=A[t.name]||[];const i={};t.numeric&&(i.hexPad="left"),r=Object(a.a)(Object(a.i)(r,i)),t.length&&r.length!==t.length&&r.length>0&&Zt.throwArgumentError("invalid length for "+t.name,"transaction:"+t.name,r),t.maxLength&&(r=Object(a.o)(r),r.length>t.maxLength&&Zt.throwArgumentError("invalid length for "+t.name,"transaction:"+t.name,r)),e.push(Object(a.i)(r))}));let r=0;if(null!=A.chainId?(r=A.chainId,"number"!=typeof r&&Zt.throwArgumentError("invalid transaction.chainId","transaction",A)):t&&!Object(a.k)(t)&&t.v>28&&(r=Math.floor((t.v-35)/2)),0!==r&&(e.push(Object(a.i)(r)),e.push("0x"),e.push("0x")),!t)return x(e);const i=Object(a.n)(t);let n=27+i.recoveryParam;return 0!==r?(e.pop(),e.pop(),e.pop(),n+=2*r+8,i.v>28&&i.v!==n&&Zt.throwArgumentError("transaction.chainId/signature.v mismatch","signature",t)):i.v!==n&&Zt.throwArgumentError("transaction.chainId/signature.v mismatch","signature",t),e.push(Object(a.i)(n)),e.push(Object(a.o)(Object(a.a)(i.r))),e.push(Object(a.o)(Object(a.a)(i.s))),x(e)}(A,t);switch(A.type){case 1:return _t(A,t);case 2:return Xt(A,t)}return Zt.throwError("unsupported transaction type: "+A.type,I.b.errors.UNSUPPORTED_OPERATION,{operation:"serializeTransaction",transactionType:A.type})}function Ae(A,t,e){try{const e=Yt(t[0]).toNumber();if(0!==e&&1!==e)throw new Error("bad recid");A.v=e}catch(A){Zt.throwArgumentError("invalid v for transaction type: 1","v",t[0])}A.r=Object(a.h)(t[1],32),A.s=Object(a.h)(t[2],32);try{const t=J(e(A));A.from=Wt(t,{r:A.r,s:A.s,recoveryParam:A.v})}catch(A){console.log(A)}}function te(A){const t=Object(a.a)(A);if(t[0]>127)return function(A){const t=j(A);9!==t.length&&6!==t.length&&Zt.throwArgumentError("invalid raw transaction","rawTransaction",A);const e={nonce:Yt(t[0]).toNumber(),gasPrice:Yt(t[1]),gasLimit:Yt(t[2]),to:Pt(t[3]),value:Yt(t[4]),data:t[5],chainId:0};if(6===t.length)return e;try{e.v=w.from(t[6]).toNumber()}catch(A){return console.log(A),e}if(e.r=Object(a.h)(t[7],32),e.s=Object(a.h)(t[8],32),w.from(e.r).isZero()&&w.from(e.s).isZero())e.chainId=e.v,e.v=0;else{e.chainId=Math.floor((e.v-35)/2),e.chainId<0&&(e.chainId=0);let r=e.v-27;const i=t.slice(0,6);0!==e.chainId&&(i.push(Object(a.i)(e.chainId)),i.push("0x"),i.push("0x"),r-=2*e.chainId+8);const n=J(x(i));try{e.from=Wt(n,{r:Object(a.i)(e.r),s:Object(a.i)(e.s),recoveryParam:r})}catch(A){console.log(A)}e.hash=J(A)}return e.type=null,e}(t);switch(t[0]){case 1:return function(A){const t=j(A.slice(1));8!==t.length&&11!==t.length&&Zt.throwArgumentError("invalid component count for transaction type: 1","payload",Object(a.i)(A));const e={type:1,chainId:Yt(t[0]).toNumber(),nonce:Yt(t[1]).toNumber(),gasPrice:Yt(t[2]),gasLimit:Yt(t[3]),to:Pt(t[4]),value:Yt(t[5]),data:t[6],accessList:qt(t[7])};return 8===t.length||(e.hash=J(A),Ae(e,t.slice(8),_t)),e}(t);case 2:return function(A){const t=j(A.slice(1));9!==t.length&&12!==t.length&&Zt.throwArgumentError("invalid component count for transaction type: 2","payload",Object(a.i)(A));const e=Yt(t[2]),r=Yt(t[3]),i={type:2,chainId:Yt(t[0]).toNumber(),nonce:Yt(t[1]).toNumber(),maxPriorityFeePerGas:e,maxFeePerGas:r,gasPrice:null,gasLimit:Yt(t[4]),to:Pt(t[5]),value:Yt(t[6]),data:t[7],accessList:qt(t[8])};return 9===t.length||(i.hash=J(A),Ae(i,t.slice(9),Xt)),i}(t)}return Zt.throwError("unsupported transaction type: "+t[0],I.b.errors.UNSUPPORTED_OPERATION,{operation:"parseTransaction",transactionType:t[0]})}var ee=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const re=new I.b("contracts/5.5.0"),ie={chainId:!0,data:!0,from:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0,customData:!0};function ne(A,t){return ee(this,void 0,void 0,(function*(){const e=yield t;"string"!=typeof e&&re.throwArgumentError("invalid address or ENS name","name",e);try{return AA(e)}catch(A){}A||re.throwError("a provider or signer is needed to resolve ENS names",I.b.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"});const r=yield A.resolveName(e);return null==r&&re.throwArgumentError("resolver or addr is not configured for ENS name","name",e),r}))}function oe(A,t,e){return ee(this,void 0,void 0,(function*(){return Array.isArray(e)?yield Promise.all(e.map((e,r)=>oe(A,Array.isArray(t)?t[r]:t[e.name],e))):"address"===e.type?yield ne(A,t):"tuple"===e.type?yield oe(A,t,e.components):"array"===e.baseType?Array.isArray(t)?yield Promise.all(t.map(t=>oe(A,t,e.arrayChildren))):Promise.reject(re.makeError("invalid value for array",I.b.errors.INVALID_ARGUMENT,{argument:"value",value:t})):t}))}function se(A,t,e){return ee(this,void 0,void 0,(function*(){let r={};e.length===t.inputs.length+1&&"object"==typeof e[e.length-1]&&(r=F(e.pop())),re.checkArgumentCount(e.length,t.inputs.length,"passed to contract"),A.signer?r.from?r.from=m({override:ne(A.signer,r.from),signer:A.signer.getAddress()}).then(A=>ee(this,void 0,void 0,(function*(){return AA(A.signer)!==A.override&&re.throwError("Contract with a Signer cannot override from",I.b.errors.UNSUPPORTED_OPERATION,{operation:"overrides.from"}),A.override}))):r.from=A.signer.getAddress():r.from&&(r.from=ne(A.provider,r.from));const i=yield m({args:oe(A.signer||A.provider,e,t.inputs),address:A.resolvedAddress,overrides:m(r)||{}}),n=A.interface.encodeFunctionData(t,i.args),o={data:n,to:i.address},s=i.overrides;if(null!=s.nonce&&(o.nonce=w.from(s.nonce).toNumber()),null!=s.gasLimit&&(o.gasLimit=w.from(s.gasLimit)),null!=s.gasPrice&&(o.gasPrice=w.from(s.gasPrice)),null!=s.maxFeePerGas&&(o.maxFeePerGas=w.from(s.maxFeePerGas)),null!=s.maxPriorityFeePerGas&&(o.maxPriorityFeePerGas=w.from(s.maxPriorityFeePerGas)),null!=s.from&&(o.from=s.from),null!=s.type&&(o.type=s.type),null!=s.accessList&&(o.accessList=qt(s.accessList)),null==o.gasLimit&&null!=t.gas){let A=21e3;const e=Object(a.a)(n);for(let t=0;t<e.length;t++)A+=4,e[t]&&(A+=64);o.gasLimit=w.from(t.gas).add(A)}if(s.value){const A=w.from(s.value);A.isZero()||t.payable||re.throwError("non-payable method cannot override value",I.b.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:r.value}),o.value=A}s.customData&&(o.customData=F(s.customData)),delete r.nonce,delete r.gasLimit,delete r.gasPrice,delete r.from,delete r.value,delete r.type,delete r.accessList,delete r.maxFeePerGas,delete r.maxPriorityFeePerGas,delete r.customData;const E=Object.keys(r).filter(A=>null!=r[A]);return E.length&&re.throwError("cannot override "+E.map(A=>JSON.stringify(A)).join(","),I.b.errors.UNSUPPORTED_OPERATION,{operation:"overrides",overrides:E}),o}))}function Ee(A,t){const e=t.wait.bind(t);t.wait=t=>e(t).then(t=>(t.events=t.logs.map(e=>{let r=N(e),i=null;try{i=A.interface.parseLog(e)}catch(A){}return i&&(r.args=i.args,r.decode=(t,e)=>A.interface.decodeEventLog(i.eventFragment,t,e),r.event=i.name,r.eventSignature=i.signature),r.removeListener=()=>A.provider,r.getBlock=()=>A.provider.getBlock(t.blockHash),r.getTransaction=()=>A.provider.getTransaction(t.transactionHash),r.getTransactionReceipt=()=>Promise.resolve(t),r}),t))}function ae(A,t,e){const r=A.signer||A.provider;return function(...i){return ee(this,void 0,void 0,(function*(){let n=void 0;if(i.length===t.inputs.length+1&&"object"==typeof i[i.length-1]){const A=F(i.pop());null!=A.blockTag&&(n=yield A.blockTag),delete A.blockTag,i.push(A)}null!=A.deployTransaction&&(yield A._deployed(n));const o=yield se(A,t,i),s=yield r.call(o,n);try{let r=A.interface.decodeFunctionResult(t,s);return e&&1===t.outputs.length&&(r=r[0]),r}catch(t){throw t.code===I.b.errors.CALL_EXCEPTION&&(t.address=A.address,t.args=i,t.transaction=o),t}}))}}function ge(A,t,e){return t.constant?ae(A,t,e):function(A,t){return function(...e){return ee(this,void 0,void 0,(function*(){A.signer||re.throwError("sending a transaction requires a signer",I.b.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction"}),null!=A.deployTransaction&&(yield A._deployed());const r=yield se(A,t,e),i=yield A.signer.sendTransaction(r);return Ee(A,i),i}))}}(A,t)}function Be(A){return!A.address||null!=A.topics&&0!==A.topics.length?(A.address||"*")+"@"+(A.topics?A.topics.map(A=>Array.isArray(A)?A.join("|"):A).join(":"):""):"*"}class Ie{constructor(A,t){T(this,"tag",A),T(this,"filter",t),this._listeners=[]}addListener(A,t){this._listeners.push({listener:A,once:t})}removeListener(A){let t=!1;this._listeners=this._listeners.filter(e=>!(!t&&e.listener===A)||(t=!0,!1))}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map(A=>A.listener)}listenerCount(){return this._listeners.length}run(A){const t=this.listenerCount();return this._listeners=this._listeners.filter(t=>{const e=A.slice();return setTimeout(()=>{t.listener.apply(this,e)},0),!t.once}),t}prepareEvent(A){}getEmit(A){return[A]}}class ce extends Ie{constructor(){super("error",null)}}class ue extends Ie{constructor(A,t,e,r){const i={address:A};let n=t.getEventTopic(e);r?(n!==r[0]&&re.throwArgumentError("topic mismatch","topics",r),i.topics=r.slice()):i.topics=[n],super(Be(i),i),T(this,"address",A),T(this,"interface",t),T(this,"fragment",e)}prepareEvent(A){super.prepareEvent(A),A.event=this.fragment.name,A.eventSignature=this.fragment.format(),A.decode=(A,t)=>this.interface.decodeEventLog(this.fragment,A,t);try{A.args=this.interface.decodeEventLog(this.fragment,A.data,A.topics)}catch(t){A.args=null,A.decodeError=t}}getEmit(A){const t=V(A.args);if(t.length)throw t[0].error;const e=(A.args||[]).slice();return e.push(A),e}}class he extends Ie{constructor(A,t){super("*",{address:A}),T(this,"address",A),T(this,"interface",t)}prepareEvent(A){super.prepareEvent(A);try{const t=this.interface.parseLog(A);A.event=t.name,A.eventSignature=t.signature,A.decode=(A,e)=>this.interface.decodeEventLog(t.eventFragment,A,e),A.args=t.args}catch(A){}}}class le{constructor(A,t,e){re.checkNew(new.target,we),T(this,"interface",U(new.target,"getInterface")(t)),null==e?(T(this,"provider",null),T(this,"signer",null)):Dt.isSigner(e)?(T(this,"provider",e.provider||null),T(this,"signer",e)):Ut.isProvider(e)?(T(this,"provider",e),T(this,"signer",null)):re.throwArgumentError("invalid signer or provider","signerOrProvider",e),T(this,"callStatic",{}),T(this,"estimateGas",{}),T(this,"functions",{}),T(this,"populateTransaction",{}),T(this,"filters",{});{const A={};Object.keys(this.interface.events).forEach(t=>{const e=this.interface.events[t];T(this.filters,t,(...A)=>({address:this.address,topics:this.interface.encodeFilterTopics(e,A)})),A[e.name]||(A[e.name]=[]),A[e.name].push(t)}),Object.keys(A).forEach(t=>{const e=A[t];1===e.length?T(this.filters,t,this.filters[e[0]]):re.warn(`Duplicate definition of ${t} (${e.join(", ")})`)})}if(T(this,"_runningEvents",{}),T(this,"_wrappedEmits",{}),null==A&&re.throwArgumentError("invalid contract address or ENS name","addressOrName",A),T(this,"address",A),this.provider)T(this,"resolvedAddress",ne(this.provider,A));else try{T(this,"resolvedAddress",Promise.resolve(AA(A)))}catch(A){re.throwError("provider is required to use ENS name as contract address",I.b.errors.UNSUPPORTED_OPERATION,{operation:"new Contract"})}const r={},i={};Object.keys(this.interface.functions).forEach(A=>{const t=this.interface.functions[A];if(i[A])re.warn("Duplicate ABI entry for "+JSON.stringify(A));else{i[A]=!0;{const e=t.name;r["%"+e]||(r["%"+e]=[]),r["%"+e].push(A)}null==this[A]&&T(this,A,ge(this,t,!0)),null==this.functions[A]&&T(this.functions,A,ge(this,t,!1)),null==this.callStatic[A]&&T(this.callStatic,A,ae(this,t,!0)),null==this.populateTransaction[A]&&T(this.populateTransaction,A,function(A,t){return function(...e){return se(A,t,e)}}(this,t)),null==this.estimateGas[A]&&T(this.estimateGas,A,function(A,t){const e=A.signer||A.provider;return function(...r){return ee(this,void 0,void 0,(function*(){e||re.throwError("estimate require a provider or signer",I.b.errors.UNSUPPORTED_OPERATION,{operation:"estimateGas"});const i=yield se(A,t,r);return yield e.estimateGas(i)}))}}(this,t))}}),Object.keys(r).forEach(A=>{const t=r[A];if(t.length>1)return;A=A.substring(1);const e=t[0];try{null==this[A]&&T(this,A,this[e])}catch(A){}null==this.functions[A]&&T(this.functions,A,this.functions[e]),null==this.callStatic[A]&&T(this.callStatic,A,this.callStatic[e]),null==this.populateTransaction[A]&&T(this.populateTransaction,A,this.populateTransaction[e]),null==this.estimateGas[A]&&T(this.estimateGas,A,this.estimateGas[e])})}static getContractAddress(A){return rA(A)}static getInterface(A){return dt.isInterface(A)?A:new dt(A)}deployed(){return this._deployed()}_deployed(A){return this._deployedPromise||(this.deployTransaction?this._deployedPromise=this.deployTransaction.wait().then(()=>this):this._deployedPromise=this.provider.getCode(this.address,A).then(A=>("0x"===A&&re.throwError("contract not deployed",I.b.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:"getDeployed"}),this))),this._deployedPromise}fallback(A){this.signer||re.throwError("sending a transactions require a signer",I.b.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction(fallback)"});const t=F(A||{});return["from","to"].forEach((function(A){null!=t[A]&&re.throwError("cannot override "+A,I.b.errors.UNSUPPORTED_OPERATION,{operation:A})})),t.to=this.resolvedAddress,this.deployed().then(()=>this.signer.sendTransaction(t))}connect(A){"string"==typeof A&&(A=new Nt(A,this.provider));const t=new this.constructor(this.address,this.interface,A);return this.deployTransaction&&T(t,"deployTransaction",this.deployTransaction),t}attach(A){return new this.constructor(A,this.interface,this.signer||this.provider)}static isIndexed(A){return ft.isIndexed(A)}_normalizeRunningEvent(A){return this._runningEvents[A.tag]?this._runningEvents[A.tag]:A}_getRunningEvent(A){if("string"==typeof A){if("error"===A)return this._normalizeRunningEvent(new ce);if("event"===A)return this._normalizeRunningEvent(new Ie("event",null));if("*"===A)return this._normalizeRunningEvent(new he(this.address,this.interface));const t=this.interface.getEvent(A);return this._normalizeRunningEvent(new ue(this.address,this.interface,t))}if(A.topics&&A.topics.length>0){try{const t=A.topics[0];if("string"!=typeof t)throw new Error("invalid topic");const e=this.interface.getEvent(t);return this._normalizeRunningEvent(new ue(this.address,this.interface,e,A.topics))}catch(A){}const t={address:this.address,topics:A.topics};return this._normalizeRunningEvent(new Ie(Be(t),t))}return this._normalizeRunningEvent(new he(this.address,this.interface))}_checkRunningEvents(A){if(0===A.listenerCount()){delete this._runningEvents[A.tag];const t=this._wrappedEmits[A.tag];t&&A.filter&&(this.provider.off(A.filter,t),delete this._wrappedEmits[A.tag])}}_wrapEvent(A,t,e){const r=N(t);return r.removeListener=()=>{e&&(A.removeListener(e),this._checkRunningEvents(A))},r.getBlock=()=>this.provider.getBlock(t.blockHash),r.getTransaction=()=>this.provider.getTransaction(t.transactionHash),r.getTransactionReceipt=()=>this.provider.getTransactionReceipt(t.transactionHash),A.prepareEvent(r),r}_addEventListener(A,t,e){if(this.provider||re.throwError("events require a provider or a signer with a provider",I.b.errors.UNSUPPORTED_OPERATION,{operation:"once"}),A.addListener(t,e),this._runningEvents[A.tag]=A,!this._wrappedEmits[A.tag]){const e=e=>{let r=this._wrapEvent(A,e,t);if(null==r.decodeError)try{const t=A.getEmit(r);this.emit(A.filter,...t)}catch(A){r.decodeError=A.error}null!=A.filter&&this.emit("event",r),null!=r.decodeError&&this.emit("error",r.decodeError,r)};this._wrappedEmits[A.tag]=e,null!=A.filter&&this.provider.on(A.filter,e)}}queryFilter(A,t,e){const r=this._getRunningEvent(A),i=F(r.filter);return"string"==typeof t&&Object(a.l)(t,32)?(null!=e&&re.throwArgumentError("cannot specify toBlock with blockhash","toBlock",e),i.blockHash=t):(i.fromBlock=null!=t?t:0,i.toBlock=null!=e?e:"latest"),this.provider.getLogs(i).then(A=>A.map(A=>this._wrapEvent(r,A,null)))}on(A,t){return this._addEventListener(this._getRunningEvent(A),t,!1),this}once(A,t){return this._addEventListener(this._getRunningEvent(A),t,!0),this}emit(A,...t){if(!this.provider)return!1;const e=this._getRunningEvent(A),r=e.run(t)>0;return this._checkRunningEvents(e),r}listenerCount(A){return this.provider?null==A?Object.keys(this._runningEvents).reduce((A,t)=>A+this._runningEvents[t].listenerCount(),0):this._getRunningEvent(A).listenerCount():0}listeners(A){if(!this.provider)return[];if(null==A){const A=[];for(let t in this._runningEvents)this._runningEvents[t].listeners().forEach(t=>{A.push(t)});return A}return this._getRunningEvent(A).listeners()}removeAllListeners(A){if(!this.provider)return this;if(null==A){for(const A in this._runningEvents){const t=this._runningEvents[A];t.removeAllListeners(),this._checkRunningEvents(t)}return this}const t=this._getRunningEvent(A);return t.removeAllListeners(),this._checkRunningEvents(t),this}off(A,t){if(!this.provider)return this;const e=this._getRunningEvent(A);return e.removeListener(t),this._checkRunningEvents(e),this}removeListener(A,t){return this.off(A,t)}}class we extends le{}class fe{constructor(A,t,e){let r=null;r="string"==typeof t?t:Object(a.j)(t)?Object(a.i)(t):t&&"string"==typeof t.object?t.object:"!","0x"!==r.substring(0,2)&&(r="0x"+r),(!Object(a.l)(r)||r.length%2)&&re.throwArgumentError("invalid bytecode","bytecode",t),e&&!Dt.isSigner(e)&&re.throwArgumentError("invalid signer","signer",e),T(this,"bytecode",r),T(this,"interface",U(new.target,"getInterface")(A)),T(this,"signer",e||null)}getDeployTransaction(...A){let t={};if(A.length===this.interface.deploy.inputs.length+1&&"object"==typeof A[A.length-1]){t=F(A.pop());for(const A in t)if(!ie[A])throw new Error("unknown transaction override "+A)}if(["data","from","to"].forEach(A=>{null!=t[A]&&re.throwError("cannot override "+A,I.b.errors.UNSUPPORTED_OPERATION,{operation:A})}),t.value){w.from(t.value).isZero()||this.interface.deploy.payable||re.throwError("non-payable constructor cannot override value",I.b.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:t.value})}return re.checkArgumentCount(A.length,this.interface.deploy.inputs.length," in Contract constructor"),t.data=Object(a.i)(Object(a.b)([this.bytecode,this.interface.encodeDeploy(A)])),t}deploy(...A){return ee(this,void 0,void 0,(function*(){let t={};A.length===this.interface.deploy.inputs.length+1&&(t=A.pop()),re.checkArgumentCount(A.length,this.interface.deploy.inputs.length," in Contract constructor");const e=yield oe(this.signer,A,this.interface.deploy.inputs);e.push(t);const r=this.getDeployTransaction(...e),i=yield this.signer.sendTransaction(r),n=U(this.constructor,"getContractAddress")(i),o=U(this.constructor,"getContract")(n,this.interface,this.signer);return Ee(o,i),T(o,"deployTransaction",i),o}))}attach(A){return this.constructor.getContract(A,this.interface,this.signer)}connect(A){return new this.constructor(this.interface,this.bytecode,A)}static fromSolidity(A,t){null==A&&re.throwError("missing compiler output",I.b.errors.MISSING_ARGUMENT,{argument:"compilerOutput"}),"string"==typeof A&&(A=JSON.parse(A));const e=A.abi;let r=null;return A.bytecode?r=A.bytecode:A.evm&&A.evm.bytecode&&(r=A.evm.bytecode),new this(e,r,t)}static getInterface(A){return we.getInterface(A)}static getContractAddress(A){return rA(A)}static getContract(A,t,e){return new we(A,t,e)}}const Qe=new I.b("bignumber/5.5.0"),Ce={},de=w.from(0),Re=w.from(-1);function pe(A,t,e,r){const i={fault:t,operation:e};return void 0!==r&&(i.value=r),Qe.throwError(A,I.b.errors.NUMERIC_FAULT,i)}let Te="0";for(;Te.length<256;)Te+=Te;function Ue(A){if("number"!=typeof A)try{A=w.from(A).toNumber()}catch(A){}return"number"==typeof A&&A>=0&&A<=256&&!(A%1)?"1"+Te.substring(0,A):Qe.throwArgumentError("invalid decimal size","decimals",A)}function me(A,t){null==t&&(t=0);const e=Ue(t),r=(A=w.from(A)).lt(de);r&&(A=A.mul(Re));let i=A.mod(e).toString();for(;i.length<e.length-1;)i="0"+i;i=i.match(/^([0-9]*[1-9]|0)(0*)/)[1];const n=A.div(e).toString();return A=1===e.length?n:n+"."+i,r&&(A="-"+A),A}function Me(A,t){null==t&&(t=0);const e=Ue(t);"string"==typeof A&&A.match(/^-?[0-9.]+$/)||Qe.throwArgumentError("invalid decimal value","value",A);const r="-"===A.substring(0,1);r&&(A=A.substring(1)),"."===A&&Qe.throwArgumentError("missing value","value",A);const i=A.split(".");i.length>2&&Qe.throwArgumentError("too many decimal points","value",A);let n=i[0],o=i[1];for(n||(n="0"),o||(o="0");"0"===o[o.length-1];)o=o.substring(0,o.length-1);for(o.length>e.length-1&&pe("fractional component exceeds decimals","underflow","parseFixed"),""===o&&(o="0");o.length<e.length-1;)o+="0";const s=w.from(n),E=w.from(o);let a=s.mul(e).add(E);return r&&(a=a.mul(Re)),a}class Fe{constructor(A,t,e,r){A!==Ce&&Qe.throwError("cannot use FixedFormat constructor; use FixedFormat.from",I.b.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=t,this.width=e,this.decimals=r,this.name=(t?"":"u")+"fixed"+String(e)+"x"+String(r),this._multiplier=Ue(r),Object.freeze(this)}static from(A){if(A instanceof Fe)return A;"number"==typeof A&&(A="fixed128x"+A);let t=!0,e=128,r=18;if("string"==typeof A)if("fixed"===A);else if("ufixed"===A)t=!1;else{const i=A.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);i||Qe.throwArgumentError("invalid fixed format","format",A),t="u"!==i[1],e=parseInt(i[2]),r=parseInt(i[3])}else if(A){const i=(t,e,r)=>null==A[t]?r:(typeof A[t]!==e&&Qe.throwArgumentError("invalid fixed format ("+t+" not "+e+")","format."+t,A[t]),A[t]);t=i("signed","boolean",t),e=i("width","number",e),r=i("decimals","number",r)}return e%8&&Qe.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",e),r>80&&Qe.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",r),new Fe(Ce,t,e,r)}}class Se{constructor(A,t,e,r){Qe.checkNew(new.target,Se),A!==Ce&&Qe.throwError("cannot use FixedNumber constructor; use FixedNumber.from",I.b.errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=r,this._hex=t,this._value=e,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(A){this.format.name!==A.format.name&&Qe.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",A)}addUnsafe(A){this._checkFormat(A);const t=Me(this._value,this.format.decimals),e=Me(A._value,A.format.decimals);return Se.fromValue(t.add(e),this.format.decimals,this.format)}subUnsafe(A){this._checkFormat(A);const t=Me(this._value,this.format.decimals),e=Me(A._value,A.format.decimals);return Se.fromValue(t.sub(e),this.format.decimals,this.format)}mulUnsafe(A){this._checkFormat(A);const t=Me(this._value,this.format.decimals),e=Me(A._value,A.format.decimals);return Se.fromValue(t.mul(e).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(A){this._checkFormat(A);const t=Me(this._value,this.format.decimals),e=Me(A._value,A.format.decimals);return Se.fromValue(t.mul(this.format._multiplier).div(e),this.format.decimals,this.format)}floor(){const A=this.toString().split(".");1===A.length&&A.push("0");let t=Se.from(A[0],this.format);const e=!A[1].match(/^(0*)$/);return this.isNegative()&&e&&(t=t.subUnsafe(De.toFormat(t.format))),t}ceiling(){const A=this.toString().split(".");1===A.length&&A.push("0");let t=Se.from(A[0],this.format);const e=!A[1].match(/^(0*)$/);return!this.isNegative()&&e&&(t=t.addUnsafe(De.toFormat(t.format))),t}round(A){null==A&&(A=0);const t=this.toString().split(".");if(1===t.length&&t.push("0"),(A<0||A>80||A%1)&&Qe.throwArgumentError("invalid decimal count","decimals",A),t[1].length<=A)return this;const e=Se.from("1"+Te.substring(0,A),this.format),r=Ne.toFormat(this.format);return this.mulUnsafe(e).addUnsafe(r).floor().divUnsafe(e)}isZero(){return"0.0"===this._value||"0"===this._value}isNegative(){return"-"===this._value[0]}toString(){return this._value}toHexString(A){if(null==A)return this._hex;A%8&&Qe.throwArgumentError("invalid byte width","width",A);const t=w.from(this._hex).fromTwos(this.format.width).toTwos(A).toHexString();return Object(a.h)(t,A/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(A){return Se.fromString(this._value,A)}static fromValue(A,t,e){return null!=e||null==t||function(A){return null!=A&&(w.isBigNumber(A)||"number"==typeof A&&A%1==0||"string"==typeof A&&!!A.match(/^-?[0-9]+$/)||Object(a.l)(A)||"bigint"==typeof A||Object(a.j)(A))}(t)||(e=t,t=null),null==t&&(t=0),null==e&&(e="fixed"),Se.fromString(me(A,t),Fe.from(e))}static fromString(A,t){null==t&&(t="fixed");const e=Fe.from(t),r=Me(A,e.decimals);!e.signed&&r.lt(de)&&pe("unsigned value cannot be negative","overflow","value",A);let i=null;e.signed?i=r.toTwos(e.width).toHexString():(i=r.toHexString(),i=Object(a.h)(i,e.width/8));const n=me(r,e.decimals);return new Se(Ce,i,n,e)}static fromBytes(A,t){null==t&&(t="fixed");const e=Fe.from(t);if(Object(a.a)(A).length>e.width/8)throw new Error("overflow");let r=w.from(A);e.signed&&(r=r.fromTwos(e.width));const i=r.toTwos((e.signed?0:1)+e.width).toHexString(),n=me(r,e.decimals);return new Se(Ce,i,n,e)}static from(A,t){if("string"==typeof A)return Se.fromString(A,t);if(Object(a.j)(A))return Se.fromBytes(A,t);try{return Se.fromValue(A,0,t)}catch(A){if(A.code!==I.b.errors.INVALID_ARGUMENT)throw A}return Qe.throwArgumentError("invalid FixedNumber value","value",A)}static isFixedNumber(A){return!(!A||!A._isFixedNumber)}}const De=Se.from(1),Ne=Se.from("0.5");function Ge(A){return"string"==typeof A&&(A=BA(A)),J(Object(a.b)([BA("Ethereum Signed Message:\n"),BA(String(A.length)),A]))}var ye=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Ve=new I.b("hash/5.5.0"),be=new Uint8Array(32);be.fill(0);const ke=w.from(-1),ve=w.from(0),Oe=w.from(1),Ze=w.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");const Je=Object(a.h)(Oe.toHexString(),32),Pe=Object(a.h)(ve.toHexString(),32),Ye={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},Le=["name","version","chainId","verifyingContract","salt"];function xe(A){return function(t){return"string"!=typeof t&&Ve.throwArgumentError("invalid domain value for "+JSON.stringify(A),"domain."+A,t),t}}const He={name:xe("name"),version:xe("version"),chainId:function(A){try{return w.from(A).toString()}catch(A){}return Ve.throwArgumentError('invalid domain value for "chainId"',"domain.chainId",A)},verifyingContract:function(A){try{return AA(A).toLowerCase()}catch(A){}return Ve.throwArgumentError('invalid domain value "verifyingContract"',"domain.verifyingContract",A)},salt:function(A){try{const t=Object(a.a)(A);if(32!==t.length)throw new Error("bad length");return Object(a.i)(t)}catch(A){}return Ve.throwArgumentError('invalid domain value "salt"',"domain.salt",A)}};function We(A){{const t=A.match(/^(u?)int(\d*)$/);if(t){const e=""===t[1],r=parseInt(t[2]||"256");(r%8!=0||r>256||t[2]&&t[2]!==String(r))&&Ve.throwArgumentError("invalid numeric width","type",A);const i=Ze.mask(e?r-1:r),n=e?i.add(Oe).mul(ke):ve;return function(t){const e=w.from(t);return(e.lt(n)||e.gt(i))&&Ve.throwArgumentError("value out-of-bounds for "+A,"value",t),Object(a.h)(e.toTwos(256).toHexString(),32)}}}{const t=A.match(/^bytes(\d+)$/);if(t){const e=parseInt(t[1]);return(0===e||e>32||t[1]!==String(e))&&Ve.throwArgumentError("invalid bytes width","type",A),function(t){return Object(a.a)(t).length!==e&&Ve.throwArgumentError("invalid length for "+A,"value",t),function(A){const t=Object(a.a)(A),e=t.length%32;return e?Object(a.c)([t,be.slice(e)]):Object(a.i)(t)}(t)}}}switch(A){case"address":return function(A){return Object(a.h)(AA(A),32)};case"bool":return function(A){return A?Je:Pe};case"bytes":return function(A){return J(A)};case"string":return function(A){return wA(A)}}return null}function je(A,t){return`${A}(${t.map(({name:A,type:t})=>t+" "+A).join(",")})`}class Ke{constructor(A){T(this,"types",Object.freeze(N(A))),T(this,"_encoderCache",{}),T(this,"_types",{});const t={},e={},r={};Object.keys(A).forEach(A=>{t[A]={},e[A]=[],r[A]={}});for(const r in A){const i={};A[r].forEach(n=>{i[n.name]&&Ve.throwArgumentError(`duplicate variable name ${JSON.stringify(n.name)} in ${JSON.stringify(r)}`,"types",A),i[n.name]=!0;const o=n.type.match(/^([^\x5b]*)(\x5b|$)/)[1];o===r&&Ve.throwArgumentError("circular type reference to "+JSON.stringify(o),"types",A);We(o)||(e[o]||Ve.throwArgumentError("unknown type "+JSON.stringify(o),"types",A),e[o].push(r),t[r][o]=!0)})}const i=Object.keys(e).filter(A=>0===e[A].length);0===i.length?Ve.throwArgumentError("missing primary type","types",A):i.length>1&&Ve.throwArgumentError("ambiguous primary types or unused types: "+i.map(A=>JSON.stringify(A)).join(", "),"types",A),T(this,"primaryType",i[0]),function i(n,o){o[n]&&Ve.throwArgumentError("circular type reference to "+JSON.stringify(n),"types",A),o[n]=!0,Object.keys(t[n]).forEach(A=>{e[A]&&(i(A,o),Object.keys(o).forEach(t=>{r[t][A]=!0}))}),delete o[n]}(this.primaryType,{});for(const t in r){const e=Object.keys(r[t]);e.sort(),this._types[t]=je(t,A[t])+e.map(t=>je(t,A[t])).join("")}}getEncoder(A){let t=this._encoderCache[A];return t||(t=this._encoderCache[A]=this._getEncoder(A)),t}_getEncoder(A){{const t=We(A);if(t)return t}const t=A.match(/^(.*)(\x5b(\d*)\x5d)$/);if(t){const A=t[1],e=this.getEncoder(A),r=parseInt(t[3]);return t=>{r>=0&&t.length!==r&&Ve.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",t);let i=t.map(e);return this._types[A]&&(i=i.map(J)),J(Object(a.c)(i))}}const e=this.types[A];if(e){const t=wA(this._types[A]);return A=>{const r=e.map(({name:t,type:e})=>{const r=this.getEncoder(e)(A[t]);return this._types[e]?J(r):r});return r.unshift(t),Object(a.c)(r)}}return Ve.throwArgumentError("unknown type: "+A,"type",A)}encodeType(A){const t=this._types[A];return t||Ve.throwArgumentError("unknown type: "+JSON.stringify(A),"name",A),t}encodeData(A,t){return this.getEncoder(A)(t)}hashStruct(A,t){return J(this.encodeData(A,t))}encode(A){return this.encodeData(this.primaryType,A)}hash(A){return this.hashStruct(this.primaryType,A)}_visit(A,t,e){if(We(A))return e(A,t);const r=A.match(/^(.*)(\x5b(\d*)\x5d)$/);if(r){const A=r[1],i=parseInt(r[3]);return i>=0&&t.length!==i&&Ve.throwArgumentError("array length mismatch; expected length ${ arrayLength }","value",t),t.map(t=>this._visit(A,t,e))}const i=this.types[A];return i?i.reduce((A,{name:r,type:i})=>(A[r]=this._visit(i,t[r],e),A),{}):Ve.throwArgumentError("unknown type: "+A,"type",A)}visit(A,t){return this._visit(this.primaryType,A,t)}static from(A){return new Ke(A)}static getPrimaryType(A){return Ke.from(A).primaryType}static hashStruct(A,t,e){return Ke.from(t).hashStruct(A,e)}static hashDomain(A){const t=[];for(const e in A){const r=Ye[e];r||Ve.throwArgumentError("invalid typed-data domain key: "+JSON.stringify(e),"domain",A),t.push({name:e,type:r})}return t.sort((A,t)=>Le.indexOf(A.name)-Le.indexOf(t.name)),Ke.hashStruct("EIP712Domain",{EIP712Domain:t},A)}static encode(A,t,e){return Object(a.c)(["0x1901",Ke.hashDomain(A),Ke.from(t).hash(e)])}static hash(A,t,e){return J(Ke.encode(A,t,e))}static resolveNames(A,t,e,r){return ye(this,void 0,void 0,(function*(){A=F(A);const i={};A.verifyingContract&&!Object(a.l)(A.verifyingContract,20)&&(i[A.verifyingContract]="0x");const n=Ke.from(t);n.visit(e,(A,t)=>("address"!==A||Object(a.l)(t,20)||(i[t]="0x"),t));for(const A in i)i[A]=yield r(A);return A.verifyingContract&&i[A.verifyingContract]&&(A.verifyingContract=i[A.verifyingContract]),e=n.visit(e,(A,t)=>"address"===A&&i[t]?i[t]:t),{domain:A,value:e}}))}static getPayload(A,t,e){Ke.hashDomain(A);const r={},i=[];Le.forEach(t=>{const e=A[t];null!=e&&(r[t]=He[t](e),i.push({name:t,type:Ye[t]}))});const n=Ke.from(t),o=F(t);return o.EIP712Domain?Ve.throwArgumentError("types must not contain EIP712Domain type","types.EIP712Domain",t):o.EIP712Domain=i,n.encode(e),{types:o,domain:r,primaryType:n.primaryType,message:n.visit(e,(A,t)=>{if(A.match(/^bytes(\d*)/))return Object(a.i)(Object(a.a)(t));if(A.match(/^u?int/))return w.from(t).toString();switch(A){case"address":return t.toLowerCase();case"bool":return!!t;case"string":return"string"!=typeof t&&Ve.throwArgumentError("invalid string","value",t),t}return Ve.throwArgumentError("unsupported type","type",A)})}}}class qe{constructor(A){T(this,"alphabet",A),T(this,"base",A.length),T(this,"_alphabetMap",{}),T(this,"_leader",A.charAt(0));for(let t=0;t<A.length;t++)this._alphabetMap[A.charAt(t)]=t}encode(A){let t=Object(a.a)(A);if(0===t.length)return"";let e=[0];for(let A=0;A<t.length;++A){let r=t[A];for(let A=0;A<e.length;++A)r+=e[A]<<8,e[A]=r%this.base,r=r/this.base|0;for(;r>0;)e.push(r%this.base),r=r/this.base|0}let r="";for(let A=0;0===t[A]&&A<t.length-1;++A)r+=this._leader;for(let A=e.length-1;A>=0;--A)r+=this.alphabet[e[A]];return r}decode(A){if("string"!=typeof A)throw new TypeError("Expected String");let t=[];if(0===A.length)return new Uint8Array(t);t.push(0);for(let e=0;e<A.length;e++){let r=this._alphabetMap[A[e]];if(void 0===r)throw new Error("Non-base"+this.base+" character");let i=r;for(let A=0;A<t.length;++A)i+=t[A]*this.base,t[A]=255&i,i>>=8;for(;i>0;)t.push(255&i),i>>=8}for(let e=0;A[e]===this._leader&&e<A.length-1;++e)t.push(0);return Object(a.a)(new Uint8Array(t.reverse()))}}new qe("abcdefghijklmnopqrstuvwxyz234567");const ze=new qe("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");var Xe,_e=e(4),$e=e.n(_e);!function(A){A.sha256="sha256",A.sha512="sha512"}(Xe||(Xe={}));const Ar=new I.b("sha2/5.5.0");function tr(A){return"0x"+$e.a.ripemd160().update(Object(a.a)(A)).digest("hex")}function er(A){return"0x"+$e.a.sha256().update(Object(a.a)(A)).digest("hex")}function rr(A){return"0x"+$e.a.sha512().update(Object(a.a)(A)).digest("hex")}function ir(A,t,e){return Xe[A]||Ar.throwError("unsupported algorithm "+A,I.b.errors.UNSUPPORTED_OPERATION,{operation:"hmac",algorithm:A}),"0x"+$e.a.hmac($e.a[A],Object(a.a)(t)).update(Object(a.a)(e)).digest("hex")}function nr(A,t,e,r,i){let n;A=Object(a.a)(A),t=Object(a.a)(t);let o=1;const s=new Uint8Array(r),E=new Uint8Array(t.length+4);let g,B;E.set(t);for(let I=1;I<=o;I++){E[t.length]=I>>24&255,E[t.length+1]=I>>16&255,E[t.length+2]=I>>8&255,E[t.length+3]=255&I;let c=Object(a.a)(ir(i,A,E));n||(n=c.length,B=new Uint8Array(n),o=Math.ceil(r/n),g=r-(o-1)*n),B.set(c);for(let t=1;t<e;t++){c=Object(a.a)(ir(i,A,c));for(let A=0;A<n;A++)B[A]^=c[A]}const u=(I-1)*n,h=I===o?g:n;s.set(Object(a.a)(B).slice(0,h),u)}return Object(a.i)(s)}const or=new I.b("wordlists/5.5.0");class sr{constructor(A){or.checkAbstract(new.target,sr),T(this,"locale",A)}split(A){return A.toLowerCase().split(/ +/g)}join(A){return A.join(" ")}static check(A){const t=[];for(let e=0;e<2048;e++){const r=A.getWord(e);if(e!==A.getWordIndex(r))return"0x";t.push(r)}return wA(t.join("\n")+"\n")}static register(A,t){t||(t=A.locale)}}let Er=null;function ar(A){if(null==Er&&(Er="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo".replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"!==sr.check(A)))throw Er=null,new Error("BIP39 Wordlist for en (English) FAILED")}const gr=new class extends sr{constructor(){super("en")}getWord(A){return ar(this),Er[A]}getWordIndex(A){return ar(this),Er.indexOf(A)}};sr.register(gr);const Br={en:gr},Ir=new I.b("hdnode/5.5.0"),cr=w.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),ur=BA("Bitcoin seed");function hr(A){return(1<<A)-1<<8-A}function lr(A){return Object(a.h)(Object(a.i)(A),32)}function wr(A){return ze.encode(Object(a.b)([A,Object(a.e)(er(er(A)),0,4)]))}function fr(A){if(null==A)return Br.en;if("string"==typeof A){const t=Br[A];return null==t&&Ir.throwArgumentError("unknown locale","wordlist",A),t}return A}const Qr={},Cr="m/44'/60'/0'/0/0";class dr{constructor(A,t,e,r,i,n,o,s){if(Ir.checkNew(new.target,dr),A!==Qr)throw new Error("HDNode constructor cannot be called directly");if(t){const A=new kt(t);T(this,"privateKey",A.privateKey),T(this,"publicKey",A.compressedPublicKey)}else T(this,"privateKey",null),T(this,"publicKey",Object(a.i)(e));T(this,"parentFingerprint",r),T(this,"fingerprint",Object(a.e)(tr(er(this.publicKey)),0,4)),T(this,"address",Ht(this.publicKey)),T(this,"chainCode",i),T(this,"index",n),T(this,"depth",o),null==s?(T(this,"mnemonic",null),T(this,"path",null)):"string"==typeof s?(T(this,"mnemonic",null),T(this,"path",s)):(T(this,"mnemonic",s),T(this,"path",s.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return wr(Object(a.b)([null!=this.privateKey?"0x0488ADE4":"0x0488B21E",Object(a.i)(this.depth),this.parentFingerprint,Object(a.h)(Object(a.i)(this.index),4),this.chainCode,null!=this.privateKey?Object(a.b)(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new dr(Qr,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(A){if(A>4294967295)throw new Error("invalid index - "+String(A));let t=this.path;t&&(t+="/"+(2147483647&A));const e=new Uint8Array(37);if(2147483648&A){if(!this.privateKey)throw new Error("cannot derive child of neutered node");e.set(Object(a.a)(this.privateKey),1),t&&(t+="'")}else e.set(Object(a.a)(this.publicKey));for(let t=24;t>=0;t-=8)e[33+(t>>3)]=A>>24-t&255;const r=Object(a.a)(ir(Xe.sha512,this.chainCode,e)),i=r.slice(0,32),n=r.slice(32);let o=null,s=null;if(this.privateKey)o=lr(w.from(i).add(this.privateKey).mod(cr));else{s=new kt(Object(a.i)(i))._addPoint(this.publicKey)}let E=t;const g=this.mnemonic;return g&&(E=Object.freeze({phrase:g.phrase,path:t,locale:g.locale||"en"})),new dr(Qr,o,s,this.fingerprint,lr(n),A,this.depth+1,E)}derivePath(A){const t=A.split("/");if(0===t.length||"m"===t[0]&&0!==this.depth)throw new Error("invalid path - "+A);"m"===t[0]&&t.shift();let e=this;for(let A=0;A<t.length;A++){const r=t[A];if(r.match(/^[0-9]+'$/)){const A=parseInt(r.substring(0,r.length-1));if(A>=2147483648)throw new Error("invalid path index - "+r);e=e._derive(2147483648+A)}else{if(!r.match(/^[0-9]+$/))throw new Error("invalid path component - "+r);{const A=parseInt(r);if(A>=2147483648)throw new Error("invalid path index - "+r);e=e._derive(A)}}}return e}static _fromSeed(A,t){const e=Object(a.a)(A);if(e.length<16||e.length>64)throw new Error("invalid seed");const r=Object(a.a)(ir(Xe.sha512,ur,e));return new dr(Qr,lr(r.slice(0,32)),null,"0x00000000",lr(r.slice(32)),0,0,t)}static fromMnemonic(A,t,e){return A=Tr(pr(A,e=fr(e)),e),dr._fromSeed(Rr(A,t),{phrase:A,path:"m",locale:e.locale})}static fromSeed(A){return dr._fromSeed(A,null)}static fromExtendedKey(A){const t=ze.decode(A);82===t.length&&wr(t.slice(0,78))===A||Ir.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const e=t[4],r=Object(a.i)(t.slice(5,9)),i=parseInt(Object(a.i)(t.slice(9,13)).substring(2),16),n=Object(a.i)(t.slice(13,45)),o=t.slice(45,78);switch(Object(a.i)(t.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new dr(Qr,null,Object(a.i)(o),r,n,i,e,null);case"0x0488ade4":case"0x04358394 ":if(0!==o[0])break;return new dr(Qr,Object(a.i)(o.slice(1)),null,r,n,i,e,null)}return Ir.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function Rr(A,t){t||(t="");const e=BA("mnemonic"+t,oA.NFKD);return nr(BA(A,oA.NFKD),e,2048,64,"sha512")}function pr(A,t){t=fr(t),Ir.checkNormalize();const e=t.split(A);if(e.length%3!=0)throw new Error("invalid mnemonic");const r=Object(a.a)(new Uint8Array(Math.ceil(11*e.length/8)));let i=0;for(let A=0;A<e.length;A++){let n=t.getWordIndex(e[A].normalize("NFKD"));if(-1===n)throw new Error("invalid mnemonic");for(let A=0;A<11;A++)n&1<<10-A&&(r[i>>3]|=1<<7-i%8),i++}const n=32*e.length/3,o=hr(e.length/3);if((Object(a.a)(er(r.slice(0,n/8)))[0]&o)!==(r[r.length-1]&o))throw new Error("invalid checksum");return Object(a.i)(r.slice(0,n/8))}function Tr(A,t){if(t=fr(t),(A=Object(a.a)(A)).length%4!=0||A.length<16||A.length>32)throw new Error("invalid entropy");const e=[0];let r=11;for(let t=0;t<A.length;t++)r>8?(e[e.length-1]<<=8,e[e.length-1]|=A[t],r-=8):(e[e.length-1]<<=r,e[e.length-1]|=A[t]>>8-r,e.push(A[t]&(1<<8-r)-1),r+=3);const i=A.length/4,n=Object(a.a)(er(A))[0]&hr(i);return e[e.length-1]<<=i,e[e.length-1]|=n>>8-i,t.join(e.map(A=>t.getWord(A)))}function Ur(A,t){try{return pr(A,t),!0}catch(A){}return!1}function mr(A){return("number"!=typeof A||A<0||A>=2147483648||A%1)&&Ir.throwArgumentError("invalid account index","index",A),`m/44'/60'/${A}'/0/0`}var Mr=e(91),Fr=e(9),Sr=e.n(Fr),Dr=e(24),Nr=e.n(Dr);function Gr(A){return"string"==typeof A&&"0x"!==A.substring(0,2)&&(A="0x"+A),Object(a.a)(A)}function yr(A,t){for(A=String(A);A.length<t;)A="0"+A;return A}function Vr(A){return"string"==typeof A?BA(A,oA.NFKC):Object(a.a)(A)}function br(A,t){let e=A;const r=t.toLowerCase().split("/");for(let A=0;A<r.length;A++){let t=null;for(const i in e)if(i.toLowerCase()===r[A]){t=e[i];break}if(null===t)return null;e=t}return e}function kr(A){const t=Object(a.a)(A);t[6]=15&t[6]|64,t[8]=63&t[8]|128;const e=Object(a.i)(t);return[e.substring(2,10),e.substring(10,14),e.substring(14,18),e.substring(18,22),e.substring(22,34)].join("-")}var vr=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Or=new I.b("json-wallets/5.5.0");function Zr(A){return null!=A&&A.mnemonic&&A.mnemonic.phrase}class Jr extends G{isKeystoreAccount(A){return!(!A||!A._isKeystoreAccount)}}function Pr(A,t){const e=Gr(br(A,"crypto/ciphertext"));if(Object(a.i)(J(Object(a.b)([t.slice(16,32),e]))).substring(2)!==br(A,"crypto/mac").toLowerCase())throw new Error("invalid password");const r=function(A,t,e){if("aes-128-ctr"===br(A,"crypto/cipher")){const r=Gr(br(A,"crypto/cipherparams/iv")),i=new Sr.a.Counter(r),n=new Sr.a.ModeOfOperation.ctr(t,i);return Object(a.a)(n.decrypt(e))}return null}(A,t.slice(0,16),e);r||Or.throwError("unsupported cipher",I.b.errors.UNSUPPORTED_OPERATION,{operation:"decrypt"});const i=t.slice(32,64),n=Ht(r);if(A.address){let t=A.address.toLowerCase();if("0x"!==t.substring(0,2)&&(t="0x"+t),AA(t)!==n)throw new Error("address mismatch")}const o={_isKeystoreAccount:!0,address:n,privateKey:Object(a.i)(r)};if("0.1"===br(A,"x-ethers/version")){const t=Gr(br(A,"x-ethers/mnemonicCiphertext")),e=Gr(br(A,"x-ethers/mnemonicCounter")),r=new Sr.a.Counter(e),n=new Sr.a.ModeOfOperation.ctr(i,r),s=br(A,"x-ethers/path")||Cr,E=br(A,"x-ethers/locale")||"en",g=Object(a.a)(n.decrypt(t));try{const A=Tr(g,E),t=dr.fromMnemonic(A,null,E).derivePath(s);if(t.privateKey!=o.privateKey)throw new Error("mnemonic mismatch");o.mnemonic=t.mnemonic}catch(A){if(A.code!==I.b.errors.INVALID_ARGUMENT||"wordlist"!==A.argument)throw A}}return new Jr(o)}function Yr(A,t,e,r,i){return Object(a.a)(nr(A,t,e,r,i))}function Lr(A,t,e,r,i){return Promise.resolve(Yr(A,t,e,r,i))}function xr(A,t,e,r,i){const n=Vr(t),o=br(A,"crypto/kdf");if(o&&"string"==typeof o){const t=function(A,t){return Or.throwArgumentError("invalid key-derivation function parameters",A,t)};if("scrypt"===o.toLowerCase()){const e=Gr(br(A,"crypto/kdfparams/salt")),s=parseInt(br(A,"crypto/kdfparams/n")),E=parseInt(br(A,"crypto/kdfparams/r")),a=parseInt(br(A,"crypto/kdfparams/p"));s&&E&&a||t("kdf",o),0!=(s&s-1)&&t("N",s);const g=parseInt(br(A,"crypto/kdfparams/dklen"));return 32!==g&&t("dklen",g),r(n,e,s,E,a,64,i)}if("pbkdf2"===o.toLowerCase()){const r=Gr(br(A,"crypto/kdfparams/salt"));let i=null;const o=br(A,"crypto/kdfparams/prf");"hmac-sha256"===o?i="sha256":"hmac-sha512"===o?i="sha512":t("prf",o);const s=parseInt(br(A,"crypto/kdfparams/c")),E=parseInt(br(A,"crypto/kdfparams/dklen"));return 32!==E&&t("dklen",E),e(n,r,s,E,i)}}return Or.throwArgumentError("unsupported key-derivation function","kdf",o)}const Hr=new I.b("json-wallets/5.5.0");class Wr extends G{isCrowdsaleAccount(A){return!(!A||!A._isCrowdsaleAccount)}}function jr(A,t){const e=JSON.parse(A);t=Vr(t);const r=AA(br(e,"ethaddr")),i=Gr(br(e,"encseed"));i&&i.length%16==0||Hr.throwArgumentError("invalid encseed","json",A);const n=Object(a.a)(nr(t,t,2e3,32,"sha256")).slice(0,16),o=i.slice(0,16),s=i.slice(16),E=new Sr.a.ModeOfOperation.cbc(n,o),g=Sr.a.padding.pkcs7.strip(Object(a.a)(E.decrypt(s)));let B="";for(let A=0;A<g.length;A++)B+=String.fromCharCode(g[A]);const I=J(BA(B));return new Wr({_isCrowdsaleAccount:!0,address:r,privateKey:I})}function Kr(A){let t=null;try{t=JSON.parse(A)}catch(A){return!1}return t.encseed&&t.ethaddr}function qr(A){let t=null;try{t=JSON.parse(A)}catch(A){return!1}return!(!t.version||parseInt(t.version)!==t.version||3!==parseInt(t.version))}function zr(A){if(Kr(A))try{return AA(JSON.parse(A).ethaddr)}catch(A){return null}if(qr(A))try{return AA(JSON.parse(A).address)}catch(A){return null}return null}function Xr(A,t,e){if(Kr(A)){e&&e(0);const r=jr(A,t);return e&&e(1),Promise.resolve(r)}return qr(A)?function(A,t,e){return vr(this,void 0,void 0,(function*(){const r=JSON.parse(A);return Pr(r,yield xr(r,t,Lr,Nr.a.scrypt,e))}))}(A,t,e):Promise.reject(new Error("invalid JSON wallet"))}function _r(A,t){if(Kr(A))return jr(A,t);if(qr(A))return function(A,t){const e=JSON.parse(A);return Pr(e,xr(e,t,Yr,Nr.a.syncScrypt))}(A,t);throw new Error("invalid JSON wallet")}var $r=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Ai=new I.b("wallet/5.5.0");class ti extends Dt{constructor(A,t){if(Ai.checkNew(new.target,ti),super(),null!=(e=A)&&Object(a.l)(e.privateKey,32)&&null!=e.address){const t=new kt(A.privateKey);if(T(this,"_signingKey",()=>t),T(this,"address",Ht(this.publicKey)),this.address!==AA(A.address)&&Ai.throwArgumentError("privateKey/address mismatch","privateKey","[REDACTED]"),function(A){const t=A.mnemonic;return t&&t.phrase}(A)){const t=A.mnemonic;T(this,"_mnemonic",()=>({phrase:t.phrase,path:t.path||Cr,locale:t.locale||"en"}));const e=this.mnemonic;Ht(dr.fromMnemonic(e.phrase,null,e.locale).derivePath(e.path).privateKey)!==this.address&&Ai.throwArgumentError("mnemonic/address mismatch","privateKey","[REDACTED]")}else T(this,"_mnemonic",()=>null)}else{if(kt.isSigningKey(A))"secp256k1"!==A.curve&&Ai.throwArgumentError("unsupported curve; must be secp256k1","privateKey","[REDACTED]"),T(this,"_signingKey",()=>A);else{"string"==typeof A&&A.match(/^[0-9a-f]*$/i)&&64===A.length&&(A="0x"+A);const t=new kt(A);T(this,"_signingKey",()=>t)}T(this,"_mnemonic",()=>null),T(this,"address",Ht(this.publicKey))}var e;t&&!Ut.isProvider(t)&&Ai.throwArgumentError("invalid provider","provider",t),T(this,"provider",t||null)}get mnemonic(){return this._mnemonic()}get privateKey(){return this._signingKey().privateKey}get publicKey(){return this._signingKey().publicKey}getAddress(){return Promise.resolve(this.address)}connect(A){return new ti(this,A)}signTransaction(A){return m(A).then(t=>{null!=t.from&&(AA(t.from)!==this.address&&Ai.throwArgumentError("transaction from address mismatch","transaction.from",A.from),delete t.from);const e=this._signingKey().signDigest(J($t(t)));return $t(t,e)})}signMessage(A){return $r(this,void 0,void 0,(function*(){return Object(a.m)(this._signingKey().signDigest(Ge(A)))}))}_signTypedData(A,t,e){return $r(this,void 0,void 0,(function*(){const r=yield Ke.resolveNames(A,t,e,A=>(null==this.provider&&Ai.throwError("cannot resolve ENS names without a provider",I.b.errors.UNSUPPORTED_OPERATION,{operation:"resolveName",value:A}),this.provider.resolveName(A)));return Object(a.m)(this._signingKey().signDigest(Ke.hash(r.domain,t,r.value)))}))}encrypt(A,t,e){if("function"!=typeof t||e||(e=t,t={}),e&&"function"!=typeof e)throw new Error("invalid callback");return t||(t={}),function(A,t,e,r){try{if(AA(A.address)!==Ht(A.privateKey))throw new Error("address/privateKey mismatch");if(Zr(A)){const t=A.mnemonic;if(dr.fromMnemonic(t.phrase,null,t.locale).derivePath(t.path||Cr).privateKey!=A.privateKey)throw new Error("mnemonic mismatch")}}catch(A){return Promise.reject(A)}"function"!=typeof e||r||(r=e,e={}),e||(e={});const i=Object(a.a)(A.privateKey),n=Vr(t);let o=null,s=null,E=null;if(Zr(A)){const t=A.mnemonic;o=Object(a.a)(pr(t.phrase,t.locale||"en")),s=t.path||Cr,E=t.locale||"en"}let g=e.client;g||(g="ethers.js");let B=null;B=e.salt?Object(a.a)(e.salt):Object(Mr.a)(32);let I=null;if(e.iv){if(I=Object(a.a)(e.iv),16!==I.length)throw new Error("invalid iv")}else I=Object(Mr.a)(16);let c=null;if(e.uuid){if(c=Object(a.a)(e.uuid),16!==c.length)throw new Error("invalid uuid")}else c=Object(Mr.a)(16);let u=1<<17,h=8,l=1;return e.scrypt&&(e.scrypt.N&&(u=e.scrypt.N),e.scrypt.r&&(h=e.scrypt.r),e.scrypt.p&&(l=e.scrypt.p)),Nr.a.scrypt(n,B,u,h,l,64,r).then(t=>{const e=(t=Object(a.a)(t)).slice(0,16),r=t.slice(16,32),n=t.slice(32,64),w=new Sr.a.Counter(I),f=new Sr.a.ModeOfOperation.ctr(e,w),Q=Object(a.a)(f.encrypt(i)),C=J(Object(a.b)([r,Q])),d={address:A.address.substring(2).toLowerCase(),id:kr(c),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:Object(a.i)(I).substring(2)},ciphertext:Object(a.i)(Q).substring(2),kdf:"scrypt",kdfparams:{salt:Object(a.i)(B).substring(2),n:u,dklen:32,p:l,r:h},mac:C.substring(2)}};if(o){const A=Object(Mr.a)(16),t=new Sr.a.Counter(A),e=new Sr.a.ModeOfOperation.ctr(n,t),r=Object(a.a)(e.encrypt(o)),i=new Date,B=i.getUTCFullYear()+"-"+yr(i.getUTCMonth()+1,2)+"-"+yr(i.getUTCDate(),2)+"T"+yr(i.getUTCHours(),2)+"-"+yr(i.getUTCMinutes(),2)+"-"+yr(i.getUTCSeconds(),2)+".0Z";d["x-ethers"]={client:g,gethFilename:"UTC--"+B+"--"+d.address,mnemonicCounter:Object(a.i)(A).substring(2),mnemonicCiphertext:Object(a.i)(r).substring(2),path:s,locale:E,version:"0.1"}}return JSON.stringify(d)})}(this,A,t,e)}static createRandom(A){let t=Object(Mr.a)(16);A||(A={}),A.extraEntropy&&(t=Object(a.a)(Object(a.e)(J(Object(a.b)([t,A.extraEntropy])),0,16)));const e=Tr(t,A.locale);return ti.fromMnemonic(e,A.path,A.locale)}static fromEncryptedJson(A,t,e){return Xr(A,t,e).then(A=>new ti(A))}static fromEncryptedJsonSync(A,t){return new ti(_r(A,t))}static fromMnemonic(A,t,e){return t||(t=Cr),new ti(dr.fromMnemonic(A,null,e).derivePath(t))}}function ei(A,t){return Wt(Ge(A),t)}function ri(A,t,e,r){return Wt(Ke.hash(A,t,e),r)}const ii="0x0000000000000000000000000000000000000000",ni="0x0000000000000000000000000000000000000000000000000000000000000000",oi="Ξ",si=new I.b("networks/5.5.0");function Ei(A){const t=function(t,e){null==e&&(e={});const r=[];if(t.InfuraProvider)try{r.push(new t.InfuraProvider(A,e.infura))}catch(A){}if(t.EtherscanProvider)try{r.push(new t.EtherscanProvider(A,e.etherscan))}catch(A){}if(t.AlchemyProvider)try{r.push(new t.AlchemyProvider(A,e.alchemy))}catch(A){}if(t.PocketProvider){const e=["goerli","ropsten","rinkeby"];try{const i=new t.PocketProvider(A);i.network&&-1===e.indexOf(i.network.name)&&r.push(i)}catch(A){}}if(t.CloudflareProvider)try{r.push(new t.CloudflareProvider(A))}catch(A){}if(0===r.length)return null;if(t.FallbackProvider){let i=1;return null!=e.quorum?i=e.quorum:"homestead"===A&&(i=2),new t.FallbackProvider(r,i)}return r[0]};return t.renetwork=function(A){return Ei(A)},t}function ai(A,t){const e=function(e,r){return e.JsonRpcProvider?new e.JsonRpcProvider(A,t):null};return e.renetwork=function(t){return ai(A,t)},e}const gi={chainId:1,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"homestead",_defaultProvider:Ei("homestead")},Bi={chainId:3,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"ropsten",_defaultProvider:Ei("ropsten")},Ii={chainId:63,name:"classicMordor",_defaultProvider:ai("https://www.ethercluster.com/mordor","classicMordor")},ci={unspecified:{chainId:0,name:"unspecified"},homestead:gi,mainnet:gi,morden:{chainId:2,name:"morden"},ropsten:Bi,testnet:Bi,rinkeby:{chainId:4,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"rinkeby",_defaultProvider:Ei("rinkeby")},kovan:{chainId:42,name:"kovan",_defaultProvider:Ei("kovan")},goerli:{chainId:5,ensAddress:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",name:"goerli",_defaultProvider:Ei("goerli")},classic:{chainId:61,name:"classic",_defaultProvider:ai("https://www.ethercluster.com/etc","classic")},classicMorden:{chainId:62,name:"classicMorden"},classicMordor:Ii,classicTestnet:Ii,classicKotti:{chainId:6,name:"classicKotti",_defaultProvider:ai("https://www.ethercluster.com/kotti","classicKotti")},xdai:{chainId:100,name:"xdai"},matic:{chainId:137,name:"matic"},maticmum:{chainId:80001,name:"maticmum"},bnb:{chainId:56,name:"bnb"},bnbt:{chainId:97,name:"bnbt"}};function ui(A){if(null==A)return null;if("number"==typeof A){for(const t in ci){const e=ci[t];if(e.chainId===A)return{name:e.name,chainId:e.chainId,ensAddress:e.ensAddress||null,_defaultProvider:e._defaultProvider||null}}return{chainId:A,name:"unknown"}}if("string"==typeof A){const t=ci[A];return null==t?null:{name:t.name,chainId:t.chainId,ensAddress:t.ensAddress,_defaultProvider:t._defaultProvider||null}}const t=ci[A.name];if(!t)return"number"!=typeof A.chainId&&si.throwArgumentError("invalid network chainId","network",A),A;0!==A.chainId&&A.chainId!==t.chainId&&si.throwArgumentError("network chainId mismatch","network",A);let e=A._defaultProvider||null;var r;return null==e&&t._defaultProvider&&(e=(r=t._defaultProvider)&&"function"==typeof r.renetwork?t._defaultProvider.renetwork(A):t._defaultProvider),{name:A.name,chainId:t.chainId,ensAddress:A.ensAddress||t.ensAddress||null,_defaultProvider:e}}function hi(A,t){t||(t=function(A){return[parseInt(A,16)]});let e=0,r={};return A.split(",").forEach(A=>{let i=A.split(":");e+=parseInt(i[0],16),r[e]=t(i[1])}),r}function li(A){let t=0;return A.split(",").map(A=>{let e=A.split("-");1===e.length?e[1]="0":""===e[1]&&(e[1]="1");let r=t+parseInt(e[0],16);return t=parseInt(e[1],16),{l:r,h:t}})}function wi(A,t){let e=0;for(let r=0;r<t.length;r++){let i=t[r];if(e+=i.l,A>=e&&A<=e+i.h&&(A-e)%(i.d||1)==0){if(i.e&&-1!==i.e.indexOf(A-e))continue;return i}}return null}const fi=li("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"),Qi="ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(A=>parseInt(A,16)),Ci=[{h:25,s:32,l:65},{h:30,s:32,e:[23],l:127},{h:54,s:1,e:[48],l:64,d:2},{h:14,s:1,l:57,d:2},{h:44,s:1,l:17,d:2},{h:10,s:1,e:[2,6,8],l:61,d:2},{h:16,s:1,l:68,d:2},{h:84,s:1,e:[18,24,66],l:19,d:2},{h:26,s:32,e:[17],l:435},{h:22,s:1,l:71,d:2},{h:15,s:80,l:40},{h:31,s:32,l:16},{h:32,s:1,l:80,d:2},{h:52,s:1,l:42,d:2},{h:12,s:1,l:55,d:2},{h:40,s:1,e:[38],l:15,d:2},{h:14,s:1,l:48,d:2},{h:37,s:48,l:49},{h:148,s:1,l:6351,d:2},{h:88,s:1,l:160,d:2},{h:15,s:16,l:704},{h:25,s:26,l:854},{h:25,s:32,l:55915},{h:37,s:40,l:1247},{h:25,s:-119711,l:53248},{h:25,s:-119763,l:52},{h:25,s:-119815,l:52},{h:25,s:-119867,e:[1,4,5,7,8,11,12,17],l:52},{h:25,s:-119919,l:52},{h:24,s:-119971,e:[2,7,8,17],l:52},{h:24,s:-120023,e:[2,7,13,15,16,17],l:52},{h:25,s:-120075,l:52},{h:25,s:-120127,l:52},{h:25,s:-120179,l:52},{h:25,s:-120231,l:52},{h:25,s:-120283,l:52},{h:25,s:-120335,l:52},{h:24,s:-119543,e:[17],l:56},{h:24,s:-119601,e:[17],l:58},{h:24,s:-119659,e:[17],l:58},{h:24,s:-119717,e:[17],l:58},{h:24,s:-119775,e:[17],l:58}],di=hi("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"),Ri=hi("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"),pi=hi("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D",(function(A){if(A.length%4!=0)throw new Error("bad data");let t=[];for(let e=0;e<A.length;e+=4)t.push(parseInt(A.substring(e,e+4),16));return t})),Ti=li("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");function Ui(A){if(A.match(/^[a-z0-9-]*$/i)&&A.length<=59)return A.toLowerCase();let t=lA(A);var e;e=t.map(A=>{if(Qi.indexOf(A)>=0)return[];if(A>=65024&&A<=65039)return[];let t=function(A){let t=wi(A,Ci);if(t)return[A+t.s];let e=di[A];if(e)return e;let r=Ri[A];if(r)return[A+r[0]];let i=pi[A];return i||null}(A);return t||[A]}),t=e.reduce((A,t)=>(t.forEach(t=>{A.push(t)}),A),[]),t=lA(uA(t),oA.NFKC),t.forEach(A=>{if(wi(A,Ti))throw new Error("STRINGPREP_CONTAINS_PROHIBITED")}),t.forEach(A=>{if(wi(A,fi))throw new Error("STRINGPREP_CONTAINS_UNASSIGNED")});let r=uA(t);if("-"===r.substring(0,1)||"--"===r.substring(2,4)||"-"===r.substring(r.length-1))throw new Error("invalid hyphen");if(r.length>63)throw new Error("too long");return r}const mi=new I.b("hash/5.5.0"),Mi=new Uint8Array(32);Mi.fill(0);const Fi=new RegExp("^((.*)\\.)?([^.]+)$");function Si(A){try{const t=A.split(".");for(let A=0;A<t.length;A++)if(0===Ui(t[A]).length)throw new Error("empty");return!0}catch(A){}return!1}function Di(A){"string"!=typeof A&&mi.throwArgumentError("invalid ENS name; not a string","name",A);let t=A,e=Mi;for(;t.length;){const r=t.match(Fi);null!=r&&""!==r[2]||mi.throwArgumentError("invalid ENS address; missing component","name",A);const i=BA(Ui(r[3]));e=J(Object(a.b)([e,J(i)])),t=r[2]||""}return Object(a.i)(e)}function Ni(A){A=atob(A);const t=[];for(let e=0;e<A.length;e++)t.push(A.charCodeAt(e));return Object(a.a)(t)}function Gi(A){A=Object(a.a)(A);let t="";for(let e=0;e<A.length;e++)t+=String.fromCharCode(A[e]);return btoa(t)}var yi=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};function Vi(A,t){return yi(this,void 0,void 0,(function*(){null==t&&(t={});const e={method:t.method||"GET",headers:t.headers||{},body:t.body||void 0};!0!==t.skipFetchSetup&&(e.mode="cors",e.cache="no-cache",e.credentials="same-origin",e.redirect="follow",e.referrer="client");const r=yield fetch(A,e),i=yield r.arrayBuffer(),n={};return r.headers.forEach?r.headers.forEach((A,t)=>{n[t.toLowerCase()]=A}):r.headers.keys().forEach(A=>{n[A.toLowerCase()]=r.headers.get(A)}),{headers:n,statusCode:r.status,statusMessage:r.statusText,body:Object(a.a)(new Uint8Array(i))}}))}var bi=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const ki=new I.b("web/5.5.0");function vi(A){return new Promise(t=>{setTimeout(t,A)})}function Oi(A,t){if(null==A)return null;if("string"==typeof A)return A;if(Object(a.k)(A)){if(t&&("text"===t.split("/")[0]||"application/json"===t.split(";")[0].trim()))try{return hA(A)}catch(A){}return Object(a.i)(A)}return A}function Zi(A,t,e){const r="object"==typeof A&&null!=A.throttleLimit?A.throttleLimit:12;ki.assertArgument(r>0&&r%1==0,"invalid connection throttle limit","connection.throttleLimit",r);const i="object"==typeof A?A.throttleCallback:null,n="object"==typeof A&&"number"==typeof A.throttleSlotInterval?A.throttleSlotInterval:100;ki.assertArgument(n>0&&n%1==0,"invalid connection throttle slot interval","connection.throttleSlotInterval",n);const o={};let s=null;const E={method:"GET"};let a=!1,g=12e4;if("string"==typeof A)s=A;else if("object"==typeof A){if(null!=A&&null!=A.url||ki.throwArgumentError("missing URL","connection.url",A),s=A.url,"number"==typeof A.timeout&&A.timeout>0&&(g=A.timeout),A.headers)for(const t in A.headers)o[t.toLowerCase()]={key:t,value:String(A.headers[t])},["if-none-match","if-modified-since"].indexOf(t.toLowerCase())>=0&&(a=!0);if(E.allowGzip=!!A.allowGzip,null!=A.user&&null!=A.password){"https:"!==s.substring(0,6)&&!0!==A.allowInsecureAuthentication&&ki.throwError("basic authentication requires a secure https url",I.b.errors.INVALID_ARGUMENT,{argument:"url",url:s,user:A.user,password:"[REDACTED]"});const t=A.user+":"+A.password;o.authorization={key:"Authorization",value:"Basic "+Gi(BA(t))}}}t&&(E.method="POST",E.body=t,null==o["content-type"]&&(o["content-type"]={key:"Content-Type",value:"application/octet-stream"}),null==o["content-length"]&&(o["content-length"]={key:"Content-Length",value:String(t.length)}));const B={};Object.keys(o).forEach(A=>{const t=o[A];B[t.key]=t.value}),E.headers=B;const c=function(){let A=null;return{promise:new Promise((function(t,e){g&&(A=setTimeout(()=>{null!=A&&(A=null,e(ki.makeError("timeout",I.b.errors.TIMEOUT,{requestBody:Oi(E.body,B["content-type"]),requestMethod:E.method,timeout:g,url:s})))},g))})),cancel:function(){null!=A&&(clearTimeout(A),A=null)}}}(),u=function(){return bi(this,void 0,void 0,(function*(){for(let A=0;A<r;A++){let t=null;try{if(t=yield Vi(s,E),429===t.statusCode&&A<r){let e=!0;if(i&&(e=yield i(A,s)),e){let e=0;const r=t.headers["retry-after"];e="string"==typeof r&&r.match(/^[1-9][0-9]*$/)?1e3*parseInt(r):n*parseInt(String(Math.random()*Math.pow(2,A))),yield vi(e);continue}}}catch(A){t=A.response,null==t&&(c.cancel(),ki.throwError("missing response",I.b.errors.SERVER_ERROR,{requestBody:Oi(E.body,B["content-type"]),requestMethod:E.method,serverError:A,url:s}))}let o=t.body;if(a&&304===t.statusCode?o=null:(t.statusCode<200||t.statusCode>=300)&&(c.cancel(),ki.throwError("bad response",I.b.errors.SERVER_ERROR,{status:t.statusCode,headers:t.headers,body:Oi(o,t.headers?t.headers["content-type"]:null),requestBody:Oi(E.body,B["content-type"]),requestMethod:E.method,url:s})),e)try{const A=yield e(o,t);return c.cancel(),A}catch(e){if(e.throttleRetry&&A<r){let t=!0;if(i&&(t=yield i(A,s)),t){const t=n*parseInt(String(Math.random()*Math.pow(2,A)));yield vi(t);continue}}c.cancel(),ki.throwError("processing response error",I.b.errors.SERVER_ERROR,{body:Oi(o,t.headers?t.headers["content-type"]:null),error:e,requestBody:Oi(E.body,B["content-type"]),requestMethod:E.method,url:s})}return c.cancel(),o}return ki.throwError("failed response",I.b.errors.SERVER_ERROR,{requestBody:Oi(E.body,B["content-type"]),requestMethod:E.method,url:s})}))}();return Promise.race([c.promise,u])}function Ji(A,t,e){let r=null;if(null!=t){r=BA(t);const e="string"==typeof A?{url:A}:F(A);if(e.headers){0!==Object.keys(e.headers).filter(A=>"content-type"===A.toLowerCase()).length||(e.headers=F(e.headers),e.headers["content-type"]="application/json")}else e.headers={"content-type":"application/json"};A=e}return Zi(A,r,(A,t)=>{let r=null;if(null!=A)try{r=JSON.parse(hA(A))}catch(t){ki.throwError("invalid JSON",I.b.errors.SERVER_ERROR,{body:A,error:t})}return e&&(r=e(r,t)),r})}function Pi(A,t){return t||(t={}),null==(t=F(t)).floor&&(t.floor=0),null==t.ceiling&&(t.ceiling=1e4),null==t.interval&&(t.interval=250),new Promise((function(e,r){let i=null,n=!1;const o=()=>!n&&(n=!0,i&&clearTimeout(i),!0);t.timeout&&(i=setTimeout(()=>{o()&&r(new Error("timeout"))},t.timeout));const s=t.retryLimit;let E=0;!function i(){return A().then((function(A){if(void 0!==A)o()&&e(A);else if(t.oncePoll)t.oncePoll.once("poll",i);else if(t.onceBlock)t.onceBlock.once("block",i);else if(!n){if(E++,E>s)return void(o()&&r(new Error("retry limit reached")));let A=t.interval*parseInt(String(Math.random()*Math.pow(2,E)));A<t.floor&&(A=t.floor),A>t.ceiling&&(A=t.ceiling),setTimeout(i,A)}return null}),(function(A){o()&&r(A)}))}()}))}var Yi=e(30),Li=e.n(Yi);const xi=new I.b("providers/5.5.0");class Hi{constructor(){xi.checkNew(new.target,Hi),this.formats=this.getDefaultFormats()}getDefaultFormats(){const A={},t=this.address.bind(this),e=this.bigNumber.bind(this),r=this.blockTag.bind(this),i=this.data.bind(this),n=this.hash.bind(this),o=this.hex.bind(this),s=this.number.bind(this),E=this.type.bind(this);return A.transaction={hash:n,type:E,accessList:Hi.allowNull(this.accessList.bind(this),null),blockHash:Hi.allowNull(n,null),blockNumber:Hi.allowNull(s,null),transactionIndex:Hi.allowNull(s,null),confirmations:Hi.allowNull(s,null),from:t,gasPrice:Hi.allowNull(e),maxPriorityFeePerGas:Hi.allowNull(e),maxFeePerGas:Hi.allowNull(e),gasLimit:e,to:Hi.allowNull(t,null),value:e,nonce:s,data:i,r:Hi.allowNull(this.uint256),s:Hi.allowNull(this.uint256),v:Hi.allowNull(s),creates:Hi.allowNull(t,null),raw:Hi.allowNull(i)},A.transactionRequest={from:Hi.allowNull(t),nonce:Hi.allowNull(s),gasLimit:Hi.allowNull(e),gasPrice:Hi.allowNull(e),maxPriorityFeePerGas:Hi.allowNull(e),maxFeePerGas:Hi.allowNull(e),to:Hi.allowNull(t),value:Hi.allowNull(e),data:Hi.allowNull(A=>this.data(A,!0)),type:Hi.allowNull(s),accessList:Hi.allowNull(this.accessList.bind(this),null)},A.receiptLog={transactionIndex:s,blockNumber:s,transactionHash:n,address:t,topics:Hi.arrayOf(n),data:i,logIndex:s,blockHash:n},A.receipt={to:Hi.allowNull(this.address,null),from:Hi.allowNull(this.address,null),contractAddress:Hi.allowNull(t,null),transactionIndex:s,root:Hi.allowNull(o),gasUsed:e,logsBloom:Hi.allowNull(i),blockHash:n,transactionHash:n,logs:Hi.arrayOf(this.receiptLog.bind(this)),blockNumber:s,confirmations:Hi.allowNull(s,null),cumulativeGasUsed:e,effectiveGasPrice:Hi.allowNull(e),status:Hi.allowNull(s),type:E},A.block={hash:n,parentHash:n,number:s,timestamp:s,nonce:Hi.allowNull(o),difficulty:this.difficulty.bind(this),gasLimit:e,gasUsed:e,miner:t,extraData:i,transactions:Hi.allowNull(Hi.arrayOf(n)),baseFeePerGas:Hi.allowNull(e)},A.blockWithTransactions=F(A.block),A.blockWithTransactions.transactions=Hi.allowNull(Hi.arrayOf(this.transactionResponse.bind(this))),A.filter={fromBlock:Hi.allowNull(r,void 0),toBlock:Hi.allowNull(r,void 0),blockHash:Hi.allowNull(n,void 0),address:Hi.allowNull(t,void 0),topics:Hi.allowNull(this.topics.bind(this),void 0)},A.filterLog={blockNumber:Hi.allowNull(s),blockHash:Hi.allowNull(n),transactionIndex:s,removed:Hi.allowNull(this.boolean.bind(this)),address:t,data:Hi.allowFalsish(i,"0x"),topics:Hi.arrayOf(n),transactionHash:n,logIndex:s},A}accessList(A){return qt(A||[])}number(A){return"0x"===A?0:w.from(A).toNumber()}type(A){return"0x"===A||null==A?0:w.from(A).toNumber()}bigNumber(A){return w.from(A)}boolean(A){if("boolean"==typeof A)return A;if("string"==typeof A){if("true"===(A=A.toLowerCase()))return!0;if("false"===A)return!1}throw new Error("invalid boolean - "+A)}hex(A,t){return"string"==typeof A&&(t||"0x"===A.substring(0,2)||(A="0x"+A),Object(a.l)(A))?A.toLowerCase():xi.throwArgumentError("invalid hash","value",A)}data(A,t){const e=this.hex(A,t);if(e.length%2!=0)throw new Error("invalid data; odd-length - "+A);return e}address(A){return AA(A)}callAddress(A){if(!Object(a.l)(A,32))return null;const t=AA(Object(a.e)(A,12));return t===ii?null:t}contractAddress(A){return rA(A)}blockTag(A){if(null==A)return"latest";if("earliest"===A)return"0x0";if("latest"===A||"pending"===A)return A;if("number"==typeof A||Object(a.l)(A))return Object(a.g)(A);throw new Error("invalid blockTag")}hash(A,t){const e=this.hex(A,t);return 32!==Object(a.d)(e)?xi.throwArgumentError("invalid hash","value",A):e}difficulty(A){if(null==A)return null;const t=w.from(A);try{return t.toNumber()}catch(A){}return null}uint256(A){if(!Object(a.l)(A))throw new Error("invalid uint256");return Object(a.h)(A,32)}_block(A,t){null!=A.author&&null==A.miner&&(A.miner=A.author);const e=null!=A._difficulty?A._difficulty:A.difficulty,r=Hi.check(t,A);return r._difficulty=null==e?null:w.from(e),r}block(A){return this._block(A,this.formats.block)}blockWithTransactions(A){return this._block(A,this.formats.blockWithTransactions)}transactionRequest(A){return Hi.check(this.formats.transactionRequest,A)}transactionResponse(A){null!=A.gas&&null==A.gasLimit&&(A.gasLimit=A.gas),A.to&&w.from(A.to).isZero()&&(A.to="0x0000000000000000000000000000000000000000"),null!=A.input&&null==A.data&&(A.data=A.input),null==A.to&&null==A.creates&&(A.creates=this.contractAddress(A)),1!==A.type&&2!==A.type||null!=A.accessList||(A.accessList=[]);const t=Hi.check(this.formats.transaction,A);if(null!=A.chainId){let e=A.chainId;Object(a.l)(e)&&(e=w.from(e).toNumber()),t.chainId=e}else{let e=A.networkId;null==e&&null==t.v&&(e=A.chainId),Object(a.l)(e)&&(e=w.from(e).toNumber()),"number"!=typeof e&&null!=t.v&&(e=(t.v-35)/2,e<0&&(e=0),e=parseInt(e)),"number"!=typeof e&&(e=0),t.chainId=e}return t.blockHash&&"x"===t.blockHash.replace(/0/g,"")&&(t.blockHash=null),t}transaction(A){return te(A)}receiptLog(A){return Hi.check(this.formats.receiptLog,A)}receipt(A){const t=Hi.check(this.formats.receipt,A);if(null!=t.root)if(t.root.length<=4){const A=w.from(t.root).toNumber();0===A||1===A?(null!=t.status&&t.status!==A&&xi.throwArgumentError("alt-root-status/status mismatch","value",{root:t.root,status:t.status}),t.status=A,delete t.root):xi.throwArgumentError("invalid alt-root-status","value.root",t.root)}else 66!==t.root.length&&xi.throwArgumentError("invalid root hash","value.root",t.root);return null!=t.status&&(t.byzantium=!0),t}topics(A){return Array.isArray(A)?A.map(A=>this.topics(A)):null!=A?this.hash(A,!0):null}filter(A){return Hi.check(this.formats.filter,A)}filterLog(A){return Hi.check(this.formats.filterLog,A)}static check(A,t){const e={};for(const r in A)try{const i=A[r](t[r]);void 0!==i&&(e[r]=i)}catch(A){throw A.checkKey=r,A.checkValue=t[r],A}return e}static allowNull(A,t){return function(e){return null==e?t:A(e)}}static allowFalsish(A,t){return function(e){return e?A(e):t}}static arrayOf(A){return function(t){if(!Array.isArray(t))throw new Error("not an array");const e=[];return t.forEach((function(t){e.push(A(t))})),e}}}function Wi(A){return A&&"function"==typeof A.isCommunityResource}function ji(A){return Wi(A)&&A.isCommunityResource()}let Ki=!1;function qi(){Ki||(Ki=!0,console.log("========= NOTICE ========="),console.log("Request-Rate Exceeded  (this message will not be repeated)"),console.log(""),console.log("The default API keys for each service are provided as a highly-throttled,"),console.log("community resource for low-traffic projects and early prototyping."),console.log(""),console.log("While your application will continue to function, we highly recommended"),console.log("signing up for your own API keys to improve performance, increase your"),console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."),console.log(""),console.log("For more details: https://docs.ethers.io/api-keys/"),console.log("=========================="))}var zi=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Xi=new I.b("providers/5.5.0");function _i(A){return null==A?"null":(32!==Object(a.d)(A)&&Xi.throwArgumentError("invalid topic","topic",A),A.toLowerCase())}function $i(A){for(A=A.slice();A.length>0&&null==A[A.length-1];)A.pop();return A.map(A=>{if(Array.isArray(A)){const t={};A.forEach(A=>{t[_i(A)]=!0});const e=Object.keys(t);return e.sort(),e.join("|")}return _i(A)}).join("&")}function An(A){if("string"==typeof A){if(A=A.toLowerCase(),32===Object(a.d)(A))return"tx:"+A;if(-1===A.indexOf(":"))return A}else{if(Array.isArray(A))return"filter:*:"+$i(A);if(Tt.isForkEvent(A))throw Xi.warn("not implemented"),new Error("not implemented");if(A&&"object"==typeof A)return"filter:"+(A.address||"*")+":"+$i(A.topics||[])}throw new Error("invalid event - "+A)}function tn(){return(new Date).getTime()}function en(A){return new Promise(t=>{setTimeout(t,A)})}const rn=["block","network","pending","poll"];class nn{constructor(A,t,e){T(this,"tag",A),T(this,"listener",t),T(this,"once",e)}get event(){switch(this.type){case"tx":return this.hash;case"filter":return this.filter}return this.tag}get type(){return this.tag.split(":")[0]}get hash(){const A=this.tag.split(":");return"tx"!==A[0]?null:A[1]}get filter(){const A=this.tag.split(":");if("filter"!==A[0])return null;const t=A[1],e=""===(r=A[2])?[]:r.split(/&/g).map(A=>{if(""===A)return[];const t=A.split("|").map(A=>"null"===A?null:A);return 1===t.length?t[0]:t});var r;const i={};return e.length>0&&(i.topics=e),t&&"*"!==t&&(i.address=t),i}pollable(){return this.tag.indexOf(":")>=0||rn.indexOf(this.tag)>=0}}const on={0:{symbol:"btc",p2pkh:0,p2sh:5,prefix:"bc"},2:{symbol:"ltc",p2pkh:48,p2sh:50,prefix:"ltc"},3:{symbol:"doge",p2pkh:30,p2sh:22},60:{symbol:"eth",ilk:"eth"},61:{symbol:"etc",ilk:"eth"},700:{symbol:"xdai",ilk:"eth"}};function sn(A){return Object(a.h)(w.from(A).toHexString(),32)}function En(A){return ze.encode(Object(a.b)([A,Object(a.e)(er(er(A)),0,4)]))}const an=[new RegExp("^(https)://(.*)$","i"),new RegExp("^(data):(.*)$","i"),new RegExp("^(ipfs)://(.*)$","i"),new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$","i")];function gn(A){try{return hA(Bn(A))}catch(A){}return null}function Bn(A){if("0x"===A)return null;const t=w.from(Object(a.e)(A,0,32)).toNumber(),e=w.from(Object(a.e)(A,t,t+32)).toNumber();return Object(a.e)(A,t+32,t+32+e)}class In{constructor(A,t,e,r){T(this,"provider",A),T(this,"name",e),T(this,"address",A.formatter.address(t)),T(this,"_resolvedAddress",r)}_fetchBytes(A,t){return zi(this,void 0,void 0,(function*(){const e={to:this.address,data:Object(a.c)([A,Di(this.name),t||"0x"])};try{return Bn(yield this.provider.call(e))}catch(A){return A.code,I.b.errors.CALL_EXCEPTION,null}}))}_getAddress(A,t){const e=on[String(A)];if(null==e&&Xi.throwError("unsupported coin type: "+A,I.b.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${A})`}),"eth"===e.ilk)return this.provider.formatter.address(t);const r=Object(a.a)(t);if(null!=e.p2pkh){const A=t.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);if(A){const t=parseInt(A[1],16);if(A[2].length===2*t&&t>=1&&t<=75)return En(Object(a.b)([[e.p2pkh],"0x"+A[2]]))}}if(null!=e.p2sh){const A=t.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);if(A){const t=parseInt(A[1],16);if(A[2].length===2*t&&t>=1&&t<=75)return En(Object(a.b)([[e.p2sh],"0x"+A[2]]))}}if(null!=e.prefix){const A=r[1];let t=r[0];if(0===t?20!==A&&32!==A&&(t=-1):t=-1,t>=0&&r.length===2+A&&A>=1&&A<=75){const A=Li.a.toWords(r.slice(2));return A.unshift(t),Li.a.encode(e.prefix,A)}}return null}getAddress(A){return zi(this,void 0,void 0,(function*(){if(null==A&&(A=60),60===A)try{const A={to:this.address,data:"0x3b3b57de"+Di(this.name).substring(2)},t=yield this.provider.call(A);return"0x"===t||t===ni?null:this.provider.formatter.callAddress(t)}catch(A){if(A.code===I.b.errors.CALL_EXCEPTION)return null;throw A}const t=yield this._fetchBytes("0xf1cb7e06",sn(A));if(null==t||"0x"===t)return null;const e=this._getAddress(A,t);return null==e&&Xi.throwError("invalid or unsupported coin data",I.b.errors.UNSUPPORTED_OPERATION,{operation:`getAddress(${A})`,coinType:A,data:t}),e}))}getAvatar(){return zi(this,void 0,void 0,(function*(){const A=[];try{const t=yield this.getText("avatar");if(null==t)return null;for(let e=0;e<an.length;e++){const r=t.match(an[e]);if(null!=r)switch(r[1]){case"https":return A.push({type:"url",content:t}),{linkage:A,url:t};case"data":return A.push({type:"data",content:t}),{linkage:A,url:t};case"ipfs":return A.push({type:"ipfs",content:t}),{linkage:A,url:"https://gateway.ipfs.io/ipfs/"+t.substring(7)};case"erc721":case"erc1155":{const e="erc721"===r[1]?"0xc87b56dd":"0x0e89341c";A.push({type:r[1],content:t});const i=this._resolvedAddress||(yield this.getAddress()),n=(r[2]||"").split("/");if(2!==n.length)return null;const o=yield this.provider.formatter.address(n[0]),s=Object(a.h)(w.from(n[1]).toHexString(),32);if("erc721"===r[1]){const t=this.provider.formatter.callAddress(yield this.provider.call({to:o,data:Object(a.c)(["0x6352211e",s])}));if(i!==t)return null;A.push({type:"owner",content:t})}else if("erc1155"===r[1]){const t=w.from(yield this.provider.call({to:o,data:Object(a.c)(["0x00fdd58e",Object(a.h)(i,32),s])}));if(t.isZero())return null;A.push({type:"balance",content:t.toString()})}const E={to:this.provider.formatter.address(n[0]),data:Object(a.c)([e,s])};let g=gn(yield this.provider.call(E));if(null==g)return null;A.push({type:"metadata-url",content:g}),"erc1155"===r[1]&&(g=g.replace("{id}",s.substring(2)));const B=yield Ji(g);return B&&"string"==typeof B.image&&B.image.match(/^https:\/\//i)?(A.push({type:"metadata",content:JSON.stringify(B)}),A.push({type:"url",content:B.image}),{linkage:A,url:B.image}):null}}}}catch(A){}return null}))}getContentHash(){return zi(this,void 0,void 0,(function*(){const A=yield this._fetchBytes("0xbc1c58d1");if(null==A||"0x"===A)return null;const t=A.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);if(t){const A=parseInt(t[3],16);if(t[4].length===2*A)return"ipfs://"+ze.encode("0x"+t[1])}const e=A.match(/^0xe40101fa011b20([0-9a-f]*)$/);return e&&64===e[1].length?"bzz://"+e[1]:Xi.throwError("invalid or unsupported content hash data",I.b.errors.UNSUPPORTED_OPERATION,{operation:"getContentHash()",data:A})}))}getText(A){return zi(this,void 0,void 0,(function*(){let t=BA(A);t=Object(a.b)([sn(64),sn(t.length),t]),t.length%32!=0&&(t=Object(a.b)([t,Object(a.h)("0x",32-A.length%32)]));const e=yield this._fetchBytes("0x59d1d43c",Object(a.i)(t));return null==e||"0x"===e?null:hA(e)}))}}let cn=null,un=1;class hn extends Ut{constructor(A){if(Xi.checkNew(new.target,Ut),super(),this._events=[],this._emitted={block:-2},this.formatter=new.target.getFormatter(),T(this,"anyNetwork","any"===A),this.anyNetwork&&(A=this.detectNetwork()),A instanceof Promise)this._networkPromise=A,A.catch(A=>{}),this._ready().catch(A=>{});else{const t=U(new.target,"getNetwork")(A);t?(T(this,"_network",t),this.emit("network",t,null)):Xi.throwArgumentError("invalid network","network",A)}this._maxInternalBlockNumber=-1024,this._lastBlockNumber=-2,this._pollingInterval=4e3,this._fastQueryDate=0}_ready(){return zi(this,void 0,void 0,(function*(){if(null==this._network){let A=null;if(this._networkPromise)try{A=yield this._networkPromise}catch(A){}null==A&&(A=yield this.detectNetwork()),A||Xi.throwError("no network detected",I.b.errors.UNKNOWN_ERROR,{}),null==this._network&&(this.anyNetwork?this._network=A:T(this,"_network",A),this.emit("network",A,null))}return this._network}))}get ready(){return Pi(()=>this._ready().then(A=>A,A=>{if(A.code!==I.b.errors.NETWORK_ERROR||"noNetwork"!==A.event)throw A}))}static getFormatter(){return null==cn&&(cn=new Hi),cn}static getNetwork(A){return ui(null==A?"homestead":A)}_getInternalBlockNumber(A){return zi(this,void 0,void 0,(function*(){if(yield this._ready(),A>0)for(;this._internalBlockNumber;){const t=this._internalBlockNumber;try{const e=yield t;if(tn()-e.respTime<=A)return e.blockNumber;break}catch(A){if(this._internalBlockNumber===t)break}}const t=tn(),e=m({blockNumber:this.perform("getBlockNumber",{}),networkError:this.getNetwork().then(A=>null,A=>A)}).then(({blockNumber:A,networkError:r})=>{if(r)throw this._internalBlockNumber===e&&(this._internalBlockNumber=null),r;const i=tn();return(A=w.from(A).toNumber())<this._maxInternalBlockNumber&&(A=this._maxInternalBlockNumber),this._maxInternalBlockNumber=A,this._setFastBlockNumber(A),{blockNumber:A,reqTime:t,respTime:i}});return this._internalBlockNumber=e,e.catch(A=>{this._internalBlockNumber===e&&(this._internalBlockNumber=null)}),(yield e).blockNumber}))}poll(){return zi(this,void 0,void 0,(function*(){const A=un++,t=[];let e=null;try{e=yield this._getInternalBlockNumber(100+this.pollingInterval/2)}catch(A){return void this.emit("error",A)}if(this._setFastBlockNumber(e),this.emit("poll",A,e),e!==this._lastBlockNumber){if(-2===this._emitted.block&&(this._emitted.block=e-1),Math.abs(this._emitted.block-e)>1e3)Xi.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${e})`),this.emit("error",Xi.makeError("network block skew detected",I.b.errors.NETWORK_ERROR,{blockNumber:e,event:"blockSkew",previousBlockNumber:this._emitted.block})),this.emit("block",e);else for(let A=this._emitted.block+1;A<=e;A++)this.emit("block",A);this._emitted.block!==e&&(this._emitted.block=e,Object.keys(this._emitted).forEach(A=>{if("block"===A)return;const t=this._emitted[A];"pending"!==t&&e-t>12&&delete this._emitted[A]})),-2===this._lastBlockNumber&&(this._lastBlockNumber=e-1),this._events.forEach(A=>{switch(A.type){case"tx":{const e=A.hash;let r=this.getTransactionReceipt(e).then(A=>A&&null!=A.blockNumber?(this._emitted["t:"+e]=A.blockNumber,this.emit(e,A),null):null).catch(A=>{this.emit("error",A)});t.push(r);break}case"filter":{const r=A.filter;r.fromBlock=this._lastBlockNumber+1,r.toBlock=e;const i=this.getLogs(r).then(A=>{0!==A.length&&A.forEach(A=>{this._emitted["b:"+A.blockHash]=A.blockNumber,this._emitted["t:"+A.transactionHash]=A.blockNumber,this.emit(r,A)})}).catch(A=>{this.emit("error",A)});t.push(i);break}}}),this._lastBlockNumber=e,Promise.all(t).then(()=>{this.emit("didPoll",A)}).catch(A=>{this.emit("error",A)})}else this.emit("didPoll",A)}))}resetEventsBlock(A){this._lastBlockNumber=A-1,this.polling&&this.poll()}get network(){return this._network}detectNetwork(){return zi(this,void 0,void 0,(function*(){return Xi.throwError("provider does not support network detection",I.b.errors.UNSUPPORTED_OPERATION,{operation:"provider.detectNetwork"})}))}getNetwork(){return zi(this,void 0,void 0,(function*(){const A=yield this._ready(),t=yield this.detectNetwork();if(A.chainId!==t.chainId){if(this.anyNetwork)return this._network=t,this._lastBlockNumber=-2,this._fastBlockNumber=null,this._fastBlockNumberPromise=null,this._fastQueryDate=0,this._emitted.block=-2,this._maxInternalBlockNumber=-1024,this._internalBlockNumber=null,this.emit("network",t,A),yield en(0),this._network;const e=Xi.makeError("underlying network changed",I.b.errors.NETWORK_ERROR,{event:"changed",network:A,detectedNetwork:t});throw this.emit("error",e),e}return A}))}get blockNumber(){return this._getInternalBlockNumber(100+this.pollingInterval/2).then(A=>{this._setFastBlockNumber(A)},A=>{}),null!=this._fastBlockNumber?this._fastBlockNumber:-1}get polling(){return null!=this._poller}set polling(A){A&&!this._poller?(this._poller=setInterval(()=>{this.poll()},this.pollingInterval),this._bootstrapPoll||(this._bootstrapPoll=setTimeout(()=>{this.poll(),this._bootstrapPoll=setTimeout(()=>{this._poller||this.poll(),this._bootstrapPoll=null},this.pollingInterval)},0))):!A&&this._poller&&(clearInterval(this._poller),this._poller=null)}get pollingInterval(){return this._pollingInterval}set pollingInterval(A){if("number"!=typeof A||A<=0||parseInt(String(A))!=A)throw new Error("invalid polling interval");this._pollingInterval=A,this._poller&&(clearInterval(this._poller),this._poller=setInterval(()=>{this.poll()},this._pollingInterval))}_getFastBlockNumber(){const A=tn();return A-this._fastQueryDate>2*this._pollingInterval&&(this._fastQueryDate=A,this._fastBlockNumberPromise=this.getBlockNumber().then(A=>((null==this._fastBlockNumber||A>this._fastBlockNumber)&&(this._fastBlockNumber=A),this._fastBlockNumber))),this._fastBlockNumberPromise}_setFastBlockNumber(A){null!=this._fastBlockNumber&&A<this._fastBlockNumber||(this._fastQueryDate=tn(),(null==this._fastBlockNumber||A>this._fastBlockNumber)&&(this._fastBlockNumber=A,this._fastBlockNumberPromise=Promise.resolve(A)))}waitForTransaction(A,t,e){return zi(this,void 0,void 0,(function*(){return this._waitForTransaction(A,null==t?1:t,e||0,null)}))}_waitForTransaction(A,t,e,r){return zi(this,void 0,void 0,(function*(){const i=yield this.getTransactionReceipt(A);return(i?i.confirmations:0)>=t?i:new Promise((i,n)=>{const o=[];let s=!1;const E=function(){return!!s||(s=!0,o.forEach(A=>{A()}),!1)},a=A=>{A.confirmations<t||E()||i(A)};if(this.on(A,a),o.push(()=>{this.removeListener(A,a)}),r){let e=r.startBlock,i=null;const a=o=>zi(this,void 0,void 0,(function*(){s||(yield en(1e3),this.getTransactionCount(r.from).then(g=>zi(this,void 0,void 0,(function*(){if(!s){if(g<=r.nonce)e=o;else{{const t=yield this.getTransaction(A);if(t&&null!=t.blockNumber)return}for(null==i&&(i=e-3,i<r.startBlock&&(i=r.startBlock));i<=o;){if(s)return;const e=yield this.getBlockWithTransactions(i);for(let i=0;i<e.transactions.length;i++){const o=e.transactions[i];if(o.hash===A)return;if(o.from===r.from&&o.nonce===r.nonce){if(s)return;const e=yield this.waitForTransaction(o.hash,t);if(E())return;let i="replaced";return o.data===r.data&&o.to===r.to&&o.value.eq(r.value)?i="repriced":"0x"===o.data&&o.from===o.to&&o.value.isZero()&&(i="cancelled"),void n(Xi.makeError("transaction was replaced",I.b.errors.TRANSACTION_REPLACED,{cancelled:"replaced"===i||"cancelled"===i,reason:i,replacement:this._wrapTransaction(o),hash:A,receipt:e}))}}i++}}s||this.once("block",a)}})),A=>{s||this.once("block",a)}))}));if(s)return;this.once("block",a),o.push(()=>{this.removeListener("block",a)})}if("number"==typeof e&&e>0){const A=setTimeout(()=>{E()||n(Xi.makeError("timeout exceeded",I.b.errors.TIMEOUT,{timeout:e}))},e);A.unref&&A.unref(),o.push(()=>{clearTimeout(A)})}})}))}getBlockNumber(){return zi(this,void 0,void 0,(function*(){return this._getInternalBlockNumber(0)}))}getGasPrice(){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const A=yield this.perform("getGasPrice",{});try{return w.from(A)}catch(t){return Xi.throwError("bad result from backend",I.b.errors.SERVER_ERROR,{method:"getGasPrice",result:A,error:t})}}))}getBalance(A,t){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield m({address:this._getAddress(A),blockTag:this._getBlockTag(t)}),r=yield this.perform("getBalance",e);try{return w.from(r)}catch(A){return Xi.throwError("bad result from backend",I.b.errors.SERVER_ERROR,{method:"getBalance",params:e,result:r,error:A})}}))}getTransactionCount(A,t){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield m({address:this._getAddress(A),blockTag:this._getBlockTag(t)}),r=yield this.perform("getTransactionCount",e);try{return w.from(r).toNumber()}catch(A){return Xi.throwError("bad result from backend",I.b.errors.SERVER_ERROR,{method:"getTransactionCount",params:e,result:r,error:A})}}))}getCode(A,t){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield m({address:this._getAddress(A),blockTag:this._getBlockTag(t)}),r=yield this.perform("getCode",e);try{return Object(a.i)(r)}catch(A){return Xi.throwError("bad result from backend",I.b.errors.SERVER_ERROR,{method:"getCode",params:e,result:r,error:A})}}))}getStorageAt(A,t,e){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const r=yield m({address:this._getAddress(A),blockTag:this._getBlockTag(e),position:Promise.resolve(t).then(A=>Object(a.g)(A))}),i=yield this.perform("getStorageAt",r);try{return Object(a.i)(i)}catch(A){return Xi.throwError("bad result from backend",I.b.errors.SERVER_ERROR,{method:"getStorageAt",params:r,result:i,error:A})}}))}_wrapTransaction(A,t,e){if(null!=t&&32!==Object(a.d)(t))throw new Error("invalid response - sendTransaction");const r=A;return null!=t&&A.hash!==t&&Xi.throwError("Transaction hash mismatch from Provider.sendTransaction.",I.b.errors.UNKNOWN_ERROR,{expectedHash:A.hash,returnedHash:t}),r.wait=(t,r)=>zi(this,void 0,void 0,(function*(){null==t&&(t=1),null==r&&(r=0);let i=void 0;0!==t&&null!=e&&(i={data:A.data,from:A.from,nonce:A.nonce,to:A.to,value:A.value,startBlock:e});const n=yield this._waitForTransaction(A.hash,t,r,i);return null==n&&0===t?null:(this._emitted["t:"+A.hash]=n.blockNumber,0===n.status&&Xi.throwError("transaction failed",I.b.errors.CALL_EXCEPTION,{transactionHash:A.hash,transaction:A,receipt:n}),n)})),r}sendTransaction(A){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield Promise.resolve(A).then(A=>Object(a.i)(A)),e=this.formatter.transaction(A);null==e.confirmations&&(e.confirmations=0);const r=yield this._getInternalBlockNumber(100+2*this.pollingInterval);try{const A=yield this.perform("sendTransaction",{signedTransaction:t});return this._wrapTransaction(e,A,r)}catch(A){throw A.transaction=e,A.transactionHash=e.hash,A}}))}_getTransactionRequest(A){return zi(this,void 0,void 0,(function*(){const t=yield A,e={};return["from","to"].forEach(A=>{null!=t[A]&&(e[A]=Promise.resolve(t[A]).then(A=>A?this._getAddress(A):null))}),["gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","value"].forEach(A=>{null!=t[A]&&(e[A]=Promise.resolve(t[A]).then(A=>A?w.from(A):null))}),["type"].forEach(A=>{null!=t[A]&&(e[A]=Promise.resolve(t[A]).then(A=>null!=A?A:null))}),t.accessList&&(e.accessList=this.formatter.accessList(t.accessList)),["data"].forEach(A=>{null!=t[A]&&(e[A]=Promise.resolve(t[A]).then(A=>A?Object(a.i)(A):null))}),this.formatter.transactionRequest(yield m(e))}))}_getFilter(A){return zi(this,void 0,void 0,(function*(){A=yield A;const t={};return null!=A.address&&(t.address=this._getAddress(A.address)),["blockHash","topics"].forEach(e=>{null!=A[e]&&(t[e]=A[e])}),["fromBlock","toBlock"].forEach(e=>{null!=A[e]&&(t[e]=this._getBlockTag(A[e]))}),this.formatter.filter(yield m(t))}))}call(A,t){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const e=yield m({transaction:this._getTransactionRequest(A),blockTag:this._getBlockTag(t)}),r=yield this.perform("call",e);try{return Object(a.i)(r)}catch(A){return Xi.throwError("bad result from backend",I.b.errors.SERVER_ERROR,{method:"call",params:e,result:r,error:A})}}))}estimateGas(A){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield m({transaction:this._getTransactionRequest(A)}),e=yield this.perform("estimateGas",t);try{return w.from(e)}catch(A){return Xi.throwError("bad result from backend",I.b.errors.SERVER_ERROR,{method:"estimateGas",params:t,result:e,error:A})}}))}_getAddress(A){return zi(this,void 0,void 0,(function*(){"string"!=typeof(A=yield A)&&Xi.throwArgumentError("invalid address or ENS name","name",A);const t=yield this.resolveName(A);return null==t&&Xi.throwError("ENS name not configured",I.b.errors.UNSUPPORTED_OPERATION,{operation:`resolveName(${JSON.stringify(A)})`}),t}))}_getBlock(A,t){return zi(this,void 0,void 0,(function*(){yield this.getNetwork(),A=yield A;let e=-128;const r={includeTransactions:!!t};if(Object(a.l)(A,32))r.blockHash=A;else try{r.blockTag=yield this._getBlockTag(A),Object(a.l)(r.blockTag)&&(e=parseInt(r.blockTag.substring(2),16))}catch(t){Xi.throwArgumentError("invalid block hash or block tag","blockHashOrBlockTag",A)}return Pi(()=>zi(this,void 0,void 0,(function*(){const A=yield this.perform("getBlock",r);if(null==A)return null!=r.blockHash&&null==this._emitted["b:"+r.blockHash]||null!=r.blockTag&&e>this._emitted.block?null:void 0;if(t){let t=null;for(let e=0;e<A.transactions.length;e++){const r=A.transactions[e];if(null==r.blockNumber)r.confirmations=0;else if(null==r.confirmations){null==t&&(t=yield this._getInternalBlockNumber(100+2*this.pollingInterval));let A=t-r.blockNumber+1;A<=0&&(A=1),r.confirmations=A}}const e=this.formatter.blockWithTransactions(A);return e.transactions=e.transactions.map(A=>this._wrapTransaction(A)),e}return this.formatter.block(A)})),{oncePoll:this})}))}getBlock(A){return this._getBlock(A,!1)}getBlockWithTransactions(A){return this._getBlock(A,!0)}getTransaction(A){return zi(this,void 0,void 0,(function*(){yield this.getNetwork(),A=yield A;const t={transactionHash:this.formatter.hash(A,!0)};return Pi(()=>zi(this,void 0,void 0,(function*(){const e=yield this.perform("getTransaction",t);if(null==e)return null==this._emitted["t:"+A]?null:void 0;const r=this.formatter.transactionResponse(e);if(null==r.blockNumber)r.confirmations=0;else if(null==r.confirmations){let A=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-r.blockNumber+1;A<=0&&(A=1),r.confirmations=A}return this._wrapTransaction(r)})),{oncePoll:this})}))}getTransactionReceipt(A){return zi(this,void 0,void 0,(function*(){yield this.getNetwork(),A=yield A;const t={transactionHash:this.formatter.hash(A,!0)};return Pi(()=>zi(this,void 0,void 0,(function*(){const e=yield this.perform("getTransactionReceipt",t);if(null==e)return null==this._emitted["t:"+A]?null:void 0;if(null==e.blockHash)return;const r=this.formatter.receipt(e);if(null==r.blockNumber)r.confirmations=0;else if(null==r.confirmations){let A=(yield this._getInternalBlockNumber(100+2*this.pollingInterval))-r.blockNumber+1;A<=0&&(A=1),r.confirmations=A}return r})),{oncePoll:this})}))}getLogs(A){return zi(this,void 0,void 0,(function*(){yield this.getNetwork();const t=yield m({filter:this._getFilter(A)}),e=yield this.perform("getLogs",t);return e.forEach(A=>{null==A.removed&&(A.removed=!1)}),Hi.arrayOf(this.formatter.filterLog.bind(this.formatter))(e)}))}getEtherPrice(){return zi(this,void 0,void 0,(function*(){return yield this.getNetwork(),this.perform("getEtherPrice",{})}))}_getBlockTag(A){return zi(this,void 0,void 0,(function*(){if("number"==typeof(A=yield A)&&A<0){A%1&&Xi.throwArgumentError("invalid BlockTag","blockTag",A);let t=yield this._getInternalBlockNumber(100+2*this.pollingInterval);return t+=A,t<0&&(t=0),this.formatter.blockTag(t)}return this.formatter.blockTag(A)}))}getResolver(A){return zi(this,void 0,void 0,(function*(){try{const t=yield this._getResolver(A);return null==t?null:new In(this,t,A)}catch(A){return A.code,I.b.errors.CALL_EXCEPTION,null}}))}_getResolver(A){return zi(this,void 0,void 0,(function*(){const t=yield this.getNetwork();t.ensAddress||Xi.throwError("network does not support ENS",I.b.errors.UNSUPPORTED_OPERATION,{operation:"ENS",network:t.name});const e={to:t.ensAddress,data:"0x0178b8bf"+Di(A).substring(2)};try{return this.formatter.callAddress(yield this.call(e))}catch(A){if(A.code===I.b.errors.CALL_EXCEPTION)return null;throw A}}))}resolveName(A){return zi(this,void 0,void 0,(function*(){A=yield A;try{return Promise.resolve(this.formatter.address(A))}catch(t){if(Object(a.l)(A))throw t}"string"!=typeof A&&Xi.throwArgumentError("invalid ENS name","name",A);const t=yield this.getResolver(A);return t?yield t.getAddress():null}))}lookupAddress(A){return zi(this,void 0,void 0,(function*(){A=yield A;const t=(A=this.formatter.address(A)).substring(2).toLowerCase()+".addr.reverse",e=yield this._getResolver(t);if(!e)return null;let r=Object(a.a)(yield this.call({to:e,data:"0x691f3431"+Di(t).substring(2)}));if(r.length<32||!w.from(r.slice(0,32)).eq(32))return null;if(r=r.slice(32),r.length<32)return null;const i=w.from(r.slice(0,32)).toNumber();if(r=r.slice(32),i>r.length)return null;const n=hA(r.slice(0,i));return(yield this.resolveName(n))!=A?null:n}))}getAvatar(A){return zi(this,void 0,void 0,(function*(){let t=null;if(Object(a.l)(A)){const e=this.formatter.address(A),r=e.substring(2).toLowerCase()+".addr.reverse",i=yield this._getResolver(r);if(!i)return null;t=new In(this,i,"_",e)}else t=yield this.getResolver(A);const e=yield t.getAvatar();return null==e?null:e.url}))}perform(A,t){return Xi.throwError(A+" not implemented",I.b.errors.NOT_IMPLEMENTED,{operation:A})}_startEvent(A){this.polling=this._events.filter(A=>A.pollable()).length>0}_stopEvent(A){this.polling=this._events.filter(A=>A.pollable()).length>0}_addEventListener(A,t,e){const r=new nn(An(A),t,e);return this._events.push(r),this._startEvent(r),this}on(A,t){return this._addEventListener(A,t,!1)}once(A,t){return this._addEventListener(A,t,!0)}emit(A,...t){let e=!1,r=[],i=An(A);return this._events=this._events.filter(A=>A.tag!==i||(setTimeout(()=>{A.listener.apply(this,t)},0),e=!0,!A.once||(r.push(A),!1))),r.forEach(A=>{this._stopEvent(A)}),e}listenerCount(A){if(!A)return this._events.length;let t=An(A);return this._events.filter(A=>A.tag===t).length}listeners(A){if(null==A)return this._events.map(A=>A.listener);let t=An(A);return this._events.filter(A=>A.tag===t).map(A=>A.listener)}off(A,t){if(null==t)return this.removeAllListeners(A);const e=[];let r=!1,i=An(A);return this._events=this._events.filter(A=>A.tag!==i||A.listener!=t||(!!r||(r=!0,e.push(A),!1))),e.forEach(A=>{this._stopEvent(A)}),this}removeAllListeners(A){let t=[];if(null==A)t=this._events,this._events=[];else{const e=An(A);this._events=this._events.filter(A=>A.tag!==e||(t.push(A),!1))}return t.forEach(A=>{this._stopEvent(A)}),this}}var ln=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const wn=new I.b("providers/5.5.0"),fn=["call","estimateGas"];function Qn(A,t,e){if("call"===A&&t.code===I.b.errors.SERVER_ERROR){const A=t.error;if(A&&A.message.match("reverted")&&Object(a.l)(A.data))return A.data;wn.throwError("missing revert data in call exception",I.b.errors.CALL_EXCEPTION,{error:t,data:"0x"})}let r=t.message;t.code===I.b.errors.SERVER_ERROR&&t.error&&"string"==typeof t.error.message?r=t.error.message:"string"==typeof t.body?r=t.body:"string"==typeof t.responseText&&(r=t.responseText),r=(r||"").toLowerCase();const i=e.transaction||e.signedTransaction;throw r.match(/insufficient funds|base fee exceeds gas limit/)&&wn.throwError("insufficient funds for intrinsic transaction cost",I.b.errors.INSUFFICIENT_FUNDS,{error:t,method:A,transaction:i}),r.match(/nonce too low/)&&wn.throwError("nonce has already been used",I.b.errors.NONCE_EXPIRED,{error:t,method:A,transaction:i}),r.match(/replacement transaction underpriced/)&&wn.throwError("replacement fee too low",I.b.errors.REPLACEMENT_UNDERPRICED,{error:t,method:A,transaction:i}),r.match(/only replay-protected/)&&wn.throwError("legacy pre-eip-155 transactions not supported",I.b.errors.UNSUPPORTED_OPERATION,{error:t,method:A,transaction:i}),fn.indexOf(A)>=0&&r.match(/gas required exceeds allowance|always failing transaction|execution reverted/)&&wn.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",I.b.errors.UNPREDICTABLE_GAS_LIMIT,{error:t,method:A,transaction:i}),t}function Cn(A){return new Promise((function(t){setTimeout(t,A)}))}function dn(A){if(A.error){const t=new Error(A.error.message);throw t.code=A.error.code,t.data=A.error.data,t}return A.result}function Rn(A){return A?A.toLowerCase():A}const pn={};class Tn extends Dt{constructor(A,t,e){if(wn.checkNew(new.target,Tn),super(),A!==pn)throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");T(this,"provider",t),null==e&&(e=0),"string"==typeof e?(T(this,"_address",this.provider.formatter.address(e)),T(this,"_index",null)):"number"==typeof e?(T(this,"_index",e),T(this,"_address",null)):wn.throwArgumentError("invalid address or index","addressOrIndex",e)}connect(A){return wn.throwError("cannot alter JSON-RPC Signer connection",I.b.errors.UNSUPPORTED_OPERATION,{operation:"connect"})}connectUnchecked(){return new Un(pn,this.provider,this._address||this._index)}getAddress(){return this._address?Promise.resolve(this._address):this.provider.send("eth_accounts",[]).then(A=>(A.length<=this._index&&wn.throwError("unknown account #"+this._index,I.b.errors.UNSUPPORTED_OPERATION,{operation:"getAddress"}),this.provider.formatter.address(A[this._index])))}sendUncheckedTransaction(A){A=F(A);const t=this.getAddress().then(A=>(A&&(A=A.toLowerCase()),A));if(null==A.gasLimit){const e=F(A);e.from=t,A.gasLimit=this.provider.estimateGas(e)}return null!=A.to&&(A.to=Promise.resolve(A.to).then(A=>ln(this,void 0,void 0,(function*(){if(null==A)return null;const t=yield this.provider.resolveName(A);return null==t&&wn.throwArgumentError("provided ENS name resolves to null","tx.to",A),t})))),m({tx:m(A),sender:t}).then(({tx:t,sender:e})=>{null!=t.from?t.from.toLowerCase()!==e&&wn.throwArgumentError("from address mismatch","transaction",A):t.from=e;const r=this.provider.constructor.hexlifyTransaction(t,{from:!0});return this.provider.send("eth_sendTransaction",[r]).then(A=>A,A=>Qn("sendTransaction",A,r))})}signTransaction(A){return wn.throwError("signing transactions is unsupported",I.b.errors.UNSUPPORTED_OPERATION,{operation:"signTransaction"})}sendTransaction(A){return ln(this,void 0,void 0,(function*(){const t=yield this.provider._getInternalBlockNumber(100+2*this.provider.pollingInterval),e=yield this.sendUncheckedTransaction(A);try{return yield Pi(()=>ln(this,void 0,void 0,(function*(){const A=yield this.provider.getTransaction(e);if(null!==A)return this.provider._wrapTransaction(A,e,t)})),{oncePoll:this.provider})}catch(A){throw A.transactionHash=e,A}}))}signMessage(A){return ln(this,void 0,void 0,(function*(){const t="string"==typeof A?BA(A):A,e=yield this.getAddress();return yield this.provider.send("personal_sign",[Object(a.i)(t),e.toLowerCase()])}))}_legacySignMessage(A){return ln(this,void 0,void 0,(function*(){const t="string"==typeof A?BA(A):A,e=yield this.getAddress();return yield this.provider.send("eth_sign",[e.toLowerCase(),Object(a.i)(t)])}))}_signTypedData(A,t,e){return ln(this,void 0,void 0,(function*(){const r=yield Ke.resolveNames(A,t,e,A=>this.provider.resolveName(A)),i=yield this.getAddress();return yield this.provider.send("eth_signTypedData_v4",[i.toLowerCase(),JSON.stringify(Ke.getPayload(r.domain,t,r.value))])}))}unlock(A){return ln(this,void 0,void 0,(function*(){const t=this.provider,e=yield this.getAddress();return t.send("personal_unlockAccount",[e.toLowerCase(),A,null])}))}}class Un extends Tn{sendTransaction(A){return this.sendUncheckedTransaction(A).then(A=>({hash:A,nonce:null,gasLimit:null,gasPrice:null,data:null,value:null,chainId:null,confirmations:0,from:null,wait:t=>this.provider.waitForTransaction(A,t)}))}}const mn={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0};class Mn extends hn{constructor(A,t){wn.checkNew(new.target,Mn);let e=t;null==e&&(e=new Promise((A,t)=>{setTimeout(()=>{this.detectNetwork().then(t=>{A(t)},A=>{t(A)})},0)})),super(e),A||(A=U(this.constructor,"defaultUrl")()),T(this,"connection","string"==typeof A?Object.freeze({url:A}):Object.freeze(F(A))),this._nextId=42}get _cache(){return null==this._eventLoopCache&&(this._eventLoopCache={}),this._eventLoopCache}static defaultUrl(){return"http://localhost:8545"}detectNetwork(){return this._cache.detectNetwork||(this._cache.detectNetwork=this._uncachedDetectNetwork(),setTimeout(()=>{this._cache.detectNetwork=null},0)),this._cache.detectNetwork}_uncachedDetectNetwork(){return ln(this,void 0,void 0,(function*(){yield Cn(0);let A=null;try{A=yield this.send("eth_chainId",[])}catch(t){try{A=yield this.send("net_version",[])}catch(A){}}if(null!=A){const t=U(this.constructor,"getNetwork");try{return t(w.from(A).toNumber())}catch(t){return wn.throwError("could not detect network",I.b.errors.NETWORK_ERROR,{chainId:A,event:"invalidNetwork",serverError:t})}}return wn.throwError("could not detect network",I.b.errors.NETWORK_ERROR,{event:"noNetwork"})}))}getSigner(A){return new Tn(pn,this,A)}getUncheckedSigner(A){return this.getSigner(A).connectUnchecked()}listAccounts(){return this.send("eth_accounts",[]).then(A=>A.map(A=>this.formatter.address(A)))}send(A,t){const e={method:A,params:t,id:this._nextId++,jsonrpc:"2.0"};this.emit("debug",{action:"request",request:N(e),provider:this});const r=["eth_chainId","eth_blockNumber"].indexOf(A)>=0;if(r&&this._cache[A])return this._cache[A];const i=Ji(this.connection,JSON.stringify(e),dn).then(A=>(this.emit("debug",{action:"response",request:e,response:A,provider:this}),A),A=>{throw this.emit("debug",{action:"response",error:A,request:e,provider:this}),A});return r&&(this._cache[A]=i,setTimeout(()=>{this._cache[A]=null},0)),i}prepareRequest(A,t){switch(A){case"getBlockNumber":return["eth_blockNumber",[]];case"getGasPrice":return["eth_gasPrice",[]];case"getBalance":return["eth_getBalance",[Rn(t.address),t.blockTag]];case"getTransactionCount":return["eth_getTransactionCount",[Rn(t.address),t.blockTag]];case"getCode":return["eth_getCode",[Rn(t.address),t.blockTag]];case"getStorageAt":return["eth_getStorageAt",[Rn(t.address),t.position,t.blockTag]];case"sendTransaction":return["eth_sendRawTransaction",[t.signedTransaction]];case"getBlock":return t.blockTag?["eth_getBlockByNumber",[t.blockTag,!!t.includeTransactions]]:t.blockHash?["eth_getBlockByHash",[t.blockHash,!!t.includeTransactions]]:null;case"getTransaction":return["eth_getTransactionByHash",[t.transactionHash]];case"getTransactionReceipt":return["eth_getTransactionReceipt",[t.transactionHash]];case"call":return["eth_call",[U(this.constructor,"hexlifyTransaction")(t.transaction,{from:!0}),t.blockTag]];case"estimateGas":return["eth_estimateGas",[U(this.constructor,"hexlifyTransaction")(t.transaction,{from:!0})]];case"getLogs":return t.filter&&null!=t.filter.address&&(t.filter.address=Rn(t.filter.address)),["eth_getLogs",[t.filter]]}return null}perform(A,t){return ln(this,void 0,void 0,(function*(){if("call"===A||"estimateGas"===A){const A=t.transaction;if(A&&null!=A.type&&w.from(A.type).isZero()&&null==A.maxFeePerGas&&null==A.maxPriorityFeePerGas){const e=yield this.getFeeData();null==e.maxFeePerGas&&null==e.maxPriorityFeePerGas&&((t=F(t)).transaction=F(A),delete t.transaction.type)}}const e=this.prepareRequest(A,t);null==e&&wn.throwError(A+" not implemented",I.b.errors.NOT_IMPLEMENTED,{operation:A});try{return yield this.send(e[0],e[1])}catch(e){return Qn(A,e,t)}}))}_startEvent(A){"pending"===A.tag&&this._startPending(),super._startEvent(A)}_startPending(){if(null!=this._pendingFilter)return;const A=this,t=this.send("eth_newPendingTransactionFilter",[]);this._pendingFilter=t,t.then((function(e){return function r(){A.send("eth_getFilterChanges",[e]).then((function(e){if(A._pendingFilter!=t)return null;let r=Promise.resolve();return e.forEach((function(t){A._emitted["t:"+t.toLowerCase()]="pending",r=r.then((function(){return A.getTransaction(t).then((function(t){return A.emit("pending",t),null}))}))})),r.then((function(){return Cn(1e3)}))})).then((function(){if(A._pendingFilter==t)return setTimeout((function(){r()}),0),null;A.send("eth_uninstallFilter",[e])})).catch(A=>{})}(),e})).catch(A=>{})}_stopEvent(A){"pending"===A.tag&&0===this.listenerCount("pending")&&(this._pendingFilter=null),super._stopEvent(A)}static hexlifyTransaction(A,t){const e=F(mn);if(t)for(const A in t)t[A]&&(e[A]=!0);M(A,e);const r={};return["gasLimit","gasPrice","type","maxFeePerGas","maxPriorityFeePerGas","nonce","value"].forEach((function(t){if(null==A[t])return;const e=Object(a.g)(A[t]);"gasLimit"===t&&(t="gas"),r[t]=e})),["from","to","data"].forEach((function(t){null!=A[t]&&(r[t]=Object(a.i)(A[t]))})),A.accessList&&(r.accessList=qt(A.accessList)),r}}let Fn=null;try{if(Fn=WebSocket,null==Fn)throw new Error("inject please")}catch(A){const t=new I.b("providers/5.5.0");Fn=function(){t.throwError("WebSockets not supported in this environment",I.b.errors.UNSUPPORTED_OPERATION,{operation:"new WebSocket()"})}}var Sn=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Dn=new I.b("providers/5.5.0");let Nn=1;class Gn extends Mn{constructor(A,t){"any"===t&&Dn.throwError("WebSocketProvider does not support 'any' network yet",I.b.errors.UNSUPPORTED_OPERATION,{operation:"network:any"}),super(A,t),this._pollingInterval=-1,this._wsReady=!1,T(this,"_websocket",new Fn(this.connection.url)),T(this,"_requests",{}),T(this,"_subs",{}),T(this,"_subIds",{}),T(this,"_detectNetwork",super.detectNetwork()),this._websocket.onopen=()=>{this._wsReady=!0,Object.keys(this._requests).forEach(A=>{this._websocket.send(this._requests[A].payload)})},this._websocket.onmessage=A=>{const t=A.data,e=JSON.parse(t);if(null!=e.id){const A=String(e.id),r=this._requests[A];if(delete this._requests[A],void 0!==e.result)r.callback(null,e.result),this.emit("debug",{action:"response",request:JSON.parse(r.payload),response:e.result,provider:this});else{let A=null;e.error?(A=new Error(e.error.message||"unknown error"),T(A,"code",e.error.code||null),T(A,"response",t)):A=new Error("unknown error"),r.callback(A,void 0),this.emit("debug",{action:"response",error:A,request:JSON.parse(r.payload),provider:this})}}else if("eth_subscription"===e.method){const A=this._subs[e.params.subscription];A&&A.processFunc(e.params.result)}else console.warn("this should not happen")};const e=setInterval(()=>{this.emit("poll")},1e3);e.unref&&e.unref()}detectNetwork(){return this._detectNetwork}get pollingInterval(){return 0}resetEventsBlock(A){Dn.throwError("cannot reset events block on WebSocketProvider",I.b.errors.UNSUPPORTED_OPERATION,{operation:"resetEventBlock"})}set pollingInterval(A){Dn.throwError("cannot set polling interval on WebSocketProvider",I.b.errors.UNSUPPORTED_OPERATION,{operation:"setPollingInterval"})}poll(){return Sn(this,void 0,void 0,(function*(){return null}))}set polling(A){A&&Dn.throwError("cannot set polling on WebSocketProvider",I.b.errors.UNSUPPORTED_OPERATION,{operation:"setPolling"})}send(A,t){const e=Nn++;return new Promise((r,i)=>{const n=JSON.stringify({method:A,params:t,id:e,jsonrpc:"2.0"});this.emit("debug",{action:"request",request:JSON.parse(n),provider:this}),this._requests[String(e)]={callback:function(A,t){return A?i(A):r(t)},payload:n},this._wsReady&&this._websocket.send(n)})}static defaultUrl(){return"ws://localhost:8546"}_subscribe(A,t,e){return Sn(this,void 0,void 0,(function*(){let r=this._subIds[A];null==r&&(r=Promise.all(t).then(A=>this.send("eth_subscribe",A)),this._subIds[A]=r);const i=yield r;this._subs[i]={tag:A,processFunc:e}}))}_startEvent(A){switch(A.type){case"block":this._subscribe("block",["newHeads"],A=>{const t=w.from(A.number).toNumber();this._emitted.block=t,this.emit("block",t)});break;case"pending":this._subscribe("pending",["newPendingTransactions"],A=>{this.emit("pending",A)});break;case"filter":this._subscribe(A.tag,["logs",this._getFilter(A.filter)],t=>{null==t.removed&&(t.removed=!1),this.emit(A.filter,this.formatter.filterLog(t))});break;case"tx":{const t=A=>{const t=A.hash;this.getTransactionReceipt(t).then(A=>{A&&this.emit(t,A)})};t(A),this._subscribe("tx",["newHeads"],A=>{this._events.filter(A=>"tx"===A.type).forEach(t)});break}case"debug":case"poll":case"willPoll":case"didPoll":case"error":break;default:console.log("unhandled:",A)}}_stopEvent(A){let t=A.tag;if("tx"===A.type){if(this._events.filter(A=>"tx"===A.type).length)return;t="tx"}else if(this.listenerCount(A.event))return;const e=this._subIds[t];e&&(delete this._subIds[t],e.then(A=>{this._subs[A]&&(delete this._subs[A],this.send("eth_unsubscribe",[A]))}))}destroy(){return Sn(this,void 0,void 0,(function*(){this._websocket.readyState===Fn.CONNECTING&&(yield new Promise(A=>{this._websocket.onopen=function(){A(!0)},this._websocket.onerror=function(){A(!1)}})),this._websocket.close(1e3)}))}}var yn=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Vn=new I.b("providers/5.5.0");class bn extends Mn{detectNetwork(){const A=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return yn(this,void 0,void 0,(function*(){let t=this.network;return null==t&&(t=yield A.detectNetwork.call(this),t||Vn.throwError("no network detected",I.b.errors.UNKNOWN_ERROR,{}),null==this._network&&(T(this,"_network",t),this.emit("network",t,null))),t}))}}class kn extends bn{constructor(A,t){Vn.checkAbstract(new.target,kn),A=U(new.target,"getNetwork")(A),t=U(new.target,"getApiKey")(t);super(U(new.target,"getUrl")(A,t),A),"string"==typeof t?T(this,"apiKey",t):null!=t&&Object.keys(t).forEach(A=>{T(this,A,t[A])})}_startPending(){Vn.warn("WARNING: API provider does not support pending filters")}isCommunityResource(){return!1}getSigner(A){return Vn.throwError("API provider does not support signing",I.b.errors.UNSUPPORTED_OPERATION,{operation:"getSigner"})}listAccounts(){return Promise.resolve([])}static getApiKey(A){return A}static getUrl(A,t){return Vn.throwError("not implemented; sub-classes must override getUrl",I.b.errors.NOT_IMPLEMENTED,{operation:"getUrl"})}}const vn=new I.b("providers/5.5.0"),On="_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";class Zn extends Gn{constructor(A,t){const e=new Jn(A,t);super(e.connection.url.replace(/^http/i,"ws").replace(".alchemyapi.",".ws.alchemyapi."),e.network),T(this,"apiKey",e.apiKey)}isCommunityResource(){return this.apiKey===On}}class Jn extends kn{static getWebSocketProvider(A,t){return new Zn(A,t)}static getApiKey(A){return null==A?On:(A&&"string"!=typeof A&&vn.throwArgumentError("invalid apiKey","apiKey",A),A)}static getUrl(A,t){let e=null;switch(A.name){case"homestead":e="eth-mainnet.alchemyapi.io/v2/";break;case"ropsten":e="eth-ropsten.alchemyapi.io/v2/";break;case"rinkeby":e="eth-rinkeby.alchemyapi.io/v2/";break;case"goerli":e="eth-goerli.alchemyapi.io/v2/";break;case"kovan":e="eth-kovan.alchemyapi.io/v2/";break;case"matic":e="polygon-mainnet.g.alchemy.com/v2/";break;case"maticmum":e="polygon-mumbai.g.alchemy.com/v2/";break;default:vn.throwArgumentError("unsupported network","network",arguments[0])}return{allowGzip:!0,url:"https://"+e+t,throttleCallback:(A,e)=>(t===On&&qi(),Promise.resolve(!0))}}isCommunityResource(){return this.apiKey===On}}var Pn=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Yn=new I.b("providers/5.5.0");class Ln extends kn{static getApiKey(A){return null!=A&&Yn.throwArgumentError("apiKey not supported for cloudflare","apiKey",A),null}static getUrl(A,t){let e=null;switch(A.name){case"homestead":e="https://cloudflare-eth.com/";break;default:Yn.throwArgumentError("unsupported network","network",arguments[0])}return e}perform(A,t){const e=Object.create(null,{perform:{get:()=>super.perform}});return Pn(this,void 0,void 0,(function*(){if("getBlockNumber"===A){return(yield e.perform.call(this,"getBlock",{blockTag:"latest"})).number}return e.perform.call(this,A,t)}))}}var xn=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Hn=new I.b("providers/5.5.0");function Wn(A){const t={};for(let e in A){if(null==A[e])continue;let r=A[e];"type"===e&&0===r||(r={type:!0,gasLimit:!0,gasPrice:!0,maxFeePerGs:!0,maxPriorityFeePerGas:!0,nonce:!0,value:!0}[e]?Object(a.g)(Object(a.i)(r)):"accessList"===e?"["+qt(r).map(A=>`{address:"${A.address}",storageKeys:["${A.storageKeys.join('","')}"]}`).join(",")+"]":Object(a.i)(r),t[e]=r)}return t}function jn(A){if(0==A.status&&("No records found"===A.message||"No transactions found"===A.message))return A.result;if(1!=A.status||"OK"!=A.message){const t=new Error("invalid response");throw t.result=JSON.stringify(A),(A.result||"").toLowerCase().indexOf("rate limit")>=0&&(t.throttleRetry=!0),t}return A.result}function Kn(A){if(A&&0==A.status&&"NOTOK"==A.message&&(A.result||"").toLowerCase().indexOf("rate limit")>=0){const t=new Error("throttled response");throw t.result=JSON.stringify(A),t.throttleRetry=!0,t}if("2.0"!=A.jsonrpc){const t=new Error("invalid response");throw t.result=JSON.stringify(A),t}if(A.error){const t=new Error(A.error.message||"unknown error");throw A.error.code&&(t.code=A.error.code),A.error.data&&(t.data=A.error.data),t}return A.result}function qn(A){if("pending"===A)throw new Error("pending not supported");return"latest"===A?A:parseInt(A.substring(2),16)}function zn(A,t,e){if("call"===A&&t.code===I.b.errors.SERVER_ERROR){const A=t.error;if(A&&(A.message.match(/reverted/i)||A.message.match(/VM execution error/i))){let e=A.data;if(e&&(e="0x"+e.replace(/^.*0x/i,"")),Object(a.l)(e))return e;Hn.throwError("missing revert data in call exception",I.b.errors.CALL_EXCEPTION,{error:t,data:"0x"})}}let r=t.message;throw t.code===I.b.errors.SERVER_ERROR&&(t.error&&"string"==typeof t.error.message?r=t.error.message:"string"==typeof t.body?r=t.body:"string"==typeof t.responseText&&(r=t.responseText)),r=(r||"").toLowerCase(),r.match(/insufficient funds/)&&Hn.throwError("insufficient funds for intrinsic transaction cost",I.b.errors.INSUFFICIENT_FUNDS,{error:t,method:A,transaction:e}),r.match(/same hash was already imported|transaction nonce is too low|nonce too low/)&&Hn.throwError("nonce has already been used",I.b.errors.NONCE_EXPIRED,{error:t,method:A,transaction:e}),r.match(/another transaction with same nonce/)&&Hn.throwError("replacement fee too low",I.b.errors.REPLACEMENT_UNDERPRICED,{error:t,method:A,transaction:e}),r.match(/execution failed due to an exception|execution reverted/)&&Hn.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",I.b.errors.UNPREDICTABLE_GAS_LIMIT,{error:t,method:A,transaction:e}),t}class Xn extends hn{constructor(A,t){Hn.checkNew(new.target,Xn),super(A),T(this,"baseUrl",this.getBaseUrl()),T(this,"apiKey",t||"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB")}getBaseUrl(){switch(this.network?this.network.name:"invalid"){case"homestead":return"https://api.etherscan.io";case"ropsten":return"https://api-ropsten.etherscan.io";case"rinkeby":return"https://api-rinkeby.etherscan.io";case"kovan":return"https://api-kovan.etherscan.io";case"goerli":return"https://api-goerli.etherscan.io"}return Hn.throwArgumentError("unsupported network","network",name)}getUrl(A,t){const e=Object.keys(t).reduce((A,e)=>{const r=t[e];return null!=r&&(A+=`&${e}=${r}`),A},""),r=this.apiKey?"&apikey="+this.apiKey:"";return`${this.baseUrl}/api?module=${A}${e}${r}`}getPostUrl(){return this.baseUrl+"/api"}getPostData(A,t){return t.module=A,t.apikey=this.apiKey,t}fetch(A,t,e){return xn(this,void 0,void 0,(function*(){const r=e?this.getPostUrl():this.getUrl(A,t),i=e?this.getPostData(A,t):null,n="proxy"===A?Kn:jn;this.emit("debug",{action:"request",request:r,provider:this});const o={url:r,throttleSlotInterval:1e3,throttleCallback:(A,t)=>(this.isCommunityResource()&&qi(),Promise.resolve(!0))};let s=null;i&&(o.headers={"content-type":"application/x-www-form-urlencoded; charset=UTF-8"},s=Object.keys(i).map(A=>`${A}=${i[A]}`).join("&"));const E=yield Ji(o,s,n||Kn);return this.emit("debug",{action:"response",request:r,response:N(E),provider:this}),E}))}detectNetwork(){return xn(this,void 0,void 0,(function*(){return this.network}))}perform(A,t){const e=Object.create(null,{perform:{get:()=>super.perform}});return xn(this,void 0,void 0,(function*(){switch(A){case"getBlockNumber":return this.fetch("proxy",{action:"eth_blockNumber"});case"getGasPrice":return this.fetch("proxy",{action:"eth_gasPrice"});case"getBalance":return this.fetch("account",{action:"balance",address:t.address,tag:t.blockTag});case"getTransactionCount":return this.fetch("proxy",{action:"eth_getTransactionCount",address:t.address,tag:t.blockTag});case"getCode":return this.fetch("proxy",{action:"eth_getCode",address:t.address,tag:t.blockTag});case"getStorageAt":return this.fetch("proxy",{action:"eth_getStorageAt",address:t.address,position:t.position,tag:t.blockTag});case"sendTransaction":return this.fetch("proxy",{action:"eth_sendRawTransaction",hex:t.signedTransaction},!0).catch(A=>zn("sendTransaction",A,t.signedTransaction));case"getBlock":if(t.blockTag)return this.fetch("proxy",{action:"eth_getBlockByNumber",tag:t.blockTag,boolean:t.includeTransactions?"true":"false"});throw new Error("getBlock by blockHash not implemented");case"getTransaction":return this.fetch("proxy",{action:"eth_getTransactionByHash",txhash:t.transactionHash});case"getTransactionReceipt":return this.fetch("proxy",{action:"eth_getTransactionReceipt",txhash:t.transactionHash});case"call":{if("latest"!==t.blockTag)throw new Error("EtherscanProvider does not support blockTag for call");const A=Wn(t.transaction);A.module="proxy",A.action="eth_call";try{return yield this.fetch("proxy",A,!0)}catch(A){return zn("call",A,t.transaction)}}case"estimateGas":{const A=Wn(t.transaction);A.module="proxy",A.action="eth_estimateGas";try{return yield this.fetch("proxy",A,!0)}catch(A){return zn("estimateGas",A,t.transaction)}}case"getLogs":{const A={action:"getLogs"};if(t.filter.fromBlock&&(A.fromBlock=qn(t.filter.fromBlock)),t.filter.toBlock&&(A.toBlock=qn(t.filter.toBlock)),t.filter.address&&(A.address=t.filter.address),t.filter.topics&&t.filter.topics.length>0&&(t.filter.topics.length>1&&Hn.throwError("unsupported topic count",I.b.errors.UNSUPPORTED_OPERATION,{topics:t.filter.topics}),1===t.filter.topics.length)){const e=t.filter.topics[0];"string"==typeof e&&66===e.length||Hn.throwError("unsupported topic format",I.b.errors.UNSUPPORTED_OPERATION,{topic0:e}),A.topic0=e}const e=yield this.fetch("logs",A);let r={};for(let A=0;A<e.length;A++){const t=e[A];if(null==t.blockHash){if(null==r[t.blockNumber]){const A=yield this.getBlock(t.blockNumber);A&&(r[t.blockNumber]=A.hash)}t.blockHash=r[t.blockNumber]}}return e}case"getEtherPrice":return"homestead"!==this.network.name?0:parseFloat((yield this.fetch("stats",{action:"ethprice"})).ethusd)}return e.perform.call(this,A,t)}))}getHistory(A,t,e){return xn(this,void 0,void 0,(function*(){const r={action:"txlist",address:yield this.resolveName(A),startblock:null==t?0:t,endblock:null==e?99999999:e,sort:"asc"};return(yield this.fetch("account",r)).map(A=>{["contractAddress","to"].forEach((function(t){""==A[t]&&delete A[t]})),null==A.creates&&null!=A.contractAddress&&(A.creates=A.contractAddress);const t=this.formatter.transactionResponse(A);return A.timeStamp&&(t.timestamp=parseInt(A.timeStamp)),t})}))}isCommunityResource(){return"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB"===this.apiKey}}function _n(A){for(let t=(A=A.slice()).length-1;t>0;t--){const e=Math.floor(Math.random()*(t+1)),r=A[t];A[t]=A[e],A[e]=r}return A}var $n=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))};const Ao=new I.b("providers/5.5.0");function to(){return(new Date).getTime()}function eo(A){let t=null;for(let e=0;e<A.length;e++){const r=A[e];if(null==r)return null;t?t.name===r.name&&t.chainId===r.chainId&&(t.ensAddress===r.ensAddress||null==t.ensAddress&&null==r.ensAddress)||Ao.throwArgumentError("provider mismatch","networks",A):t=r}return t}function ro(A,t){A=A.slice().sort();const e=Math.floor(A.length/2);if(A.length%2)return A[e];const r=A[e-1],i=A[e];return null!=t&&Math.abs(r-i)>t?null:(r+i)/2}function io(A){if(null===A)return"null";if("number"==typeof A||"boolean"==typeof A)return JSON.stringify(A);if("string"==typeof A)return A;if(w.isBigNumber(A))return A.toString();if(Array.isArray(A))return JSON.stringify(A.map(A=>io(A)));if("object"==typeof A){const t=Object.keys(A);return t.sort(),"{"+t.map(t=>{let e=A[t];return e="function"==typeof e?"[function]":io(e),JSON.stringify(t)+":"+e}).join(",")+"}"}throw new Error("unknown value type: "+typeof A)}let no=1;function oo(A){let t=null,e=null,r=new Promise(r=>{t=function(){e&&(clearTimeout(e),e=null),r()},e=setTimeout(t,A)});return{cancel:t,getPromise:function(){return r},wait:A=>(r=r.then(A),r)}}const so=[I.b.errors.CALL_EXCEPTION,I.b.errors.INSUFFICIENT_FUNDS,I.b.errors.NONCE_EXPIRED,I.b.errors.REPLACEMENT_UNDERPRICED,I.b.errors.UNPREDICTABLE_GAS_LIMIT],Eo=["address","args","errorArgs","errorSignature","method","transaction"];function ao(A,t){const e={weight:A.weight};return Object.defineProperty(e,"provider",{get:()=>A.provider}),A.start&&(e.start=A.start),t&&(e.duration=t-A.start),A.done&&(A.error?e.error=A.error:e.result=A.result||null),e}function go(A,t,e){let r=io;switch(t){case"getBlockNumber":return function(t){const e=t.map(A=>A.result);let r=ro(t.map(A=>A.result),2);if(null!=r)return r=Math.ceil(r),e.indexOf(r+1)>=0&&r++,r>=A._highestBlockNumber&&(A._highestBlockNumber=r),A._highestBlockNumber};case"getGasPrice":return function(A){const t=A.map(A=>A.result);return t.sort(),t[Math.floor(t.length/2)]};case"getEtherPrice":return function(A){return ro(A.map(A=>A.result))};case"getBalance":case"getTransactionCount":case"getCode":case"getStorageAt":case"call":case"estimateGas":case"getLogs":break;case"getTransaction":case"getTransactionReceipt":r=function(A){return null==A?null:((A=F(A)).confirmations=-1,io(A))};break;case"getBlock":r=e.includeTransactions?function(A){return null==A?null:((A=F(A)).transactions=A.transactions.map(A=>((A=F(A)).confirmations=-1,A)),io(A))}:function(A){return null==A?null:io(A)};break;default:throw new Error("unknown method: "+t)}return function(A,t){return function(e){const r={};e.forEach(t=>{const e=A(t.result);r[e]||(r[e]={count:0,result:t.result}),r[e].count++});const i=Object.keys(r);for(let A=0;A<i.length;A++){const e=r[i[A]];if(e.count>=t)return e.result}}}(r,A.quorum)}function Bo(A,t){return $n(this,void 0,void 0,(function*(){const e=A.provider;return null!=e.blockNumber&&e.blockNumber>=t||-1===t?e:Pi(()=>new Promise((r,i)=>{setTimeout((function(){return e.blockNumber>=t?r(e):A.cancelled?r(null):r(void 0)}),0)}),{oncePoll:e})}))}function Io(A,t,e,r){return $n(this,void 0,void 0,(function*(){let i=A.provider;switch(e){case"getBlockNumber":case"getGasPrice":return i[e]();case"getEtherPrice":if(i.getEtherPrice)return i.getEtherPrice();break;case"getBalance":case"getTransactionCount":case"getCode":return r.blockTag&&Object(a.l)(r.blockTag)&&(i=yield Bo(A,t)),i[e](r.address,r.blockTag||"latest");case"getStorageAt":return r.blockTag&&Object(a.l)(r.blockTag)&&(i=yield Bo(A,t)),i.getStorageAt(r.address,r.position,r.blockTag||"latest");case"getBlock":return r.blockTag&&Object(a.l)(r.blockTag)&&(i=yield Bo(A,t)),i[r.includeTransactions?"getBlockWithTransactions":"getBlock"](r.blockTag||r.blockHash);case"call":case"estimateGas":return r.blockTag&&Object(a.l)(r.blockTag)&&(i=yield Bo(A,t)),i[e](r.transaction);case"getTransaction":case"getTransactionReceipt":return i[e](r.transactionHash);case"getLogs":{let e=r.filter;return(e.fromBlock&&Object(a.l)(e.fromBlock)||e.toBlock&&Object(a.l)(e.toBlock))&&(i=yield Bo(A,t)),i.getLogs(e)}}return Ao.throwError("unknown method error",I.b.errors.UNKNOWN_ERROR,{method:e,params:r})}))}class co extends hn{constructor(A,t){Ao.checkNew(new.target,co),0===A.length&&Ao.throwArgumentError("missing providers","providers",A);const e=A.map((A,t)=>{if(Ut.isProvider(A)){const t=ji(A)?2e3:750,e=1;return Object.freeze({provider:A,weight:1,stallTimeout:t,priority:e})}const e=F(A);null==e.priority&&(e.priority=1),null==e.stallTimeout&&(e.stallTimeout=ji(A)?2e3:750),null==e.weight&&(e.weight=1);const r=e.weight;return(r%1||r>512||r<1)&&Ao.throwArgumentError("invalid weight; must be integer in [1, 512]",`providers[${t}].weight`,r),Object.freeze(e)}),r=e.reduce((A,t)=>A+t.weight,0);null==t?t=r/2:t>r&&Ao.throwArgumentError("quorum will always fail; larger than total weight","quorum",t);let i=eo(e.map(A=>A.provider.network));null==i&&(i=new Promise((A,t)=>{setTimeout(()=>{this.detectNetwork().then(A,t)},0)})),super(i),T(this,"providerConfigs",Object.freeze(e)),T(this,"quorum",t),this._highestBlockNumber=-1}detectNetwork(){return $n(this,void 0,void 0,(function*(){return eo(yield Promise.all(this.providerConfigs.map(A=>A.provider.getNetwork())))}))}perform(A,t){return $n(this,void 0,void 0,(function*(){if("sendTransaction"===A){const A=yield Promise.all(this.providerConfigs.map(A=>A.provider.sendTransaction(t.signedTransaction).then(A=>A.hash,A=>A)));for(let t=0;t<A.length;t++){const e=A[t];if("string"==typeof e)return e}throw A[0]}-1===this._highestBlockNumber&&"getBlockNumber"!==A&&(yield this.getBlockNumber());const e=go(this,A,t),r=_n(this.providerConfigs.map(F));r.sort((A,t)=>A.priority-t.priority);const i=this._highestBlockNumber;let n=0,o=!0;for(;;){const s=to();let E=r.filter(A=>A.runner&&s-A.start<A.stallTimeout).reduce((A,t)=>A+t.weight,0);for(;E<this.quorum&&n<r.length;){const e=r[n++],o=no++;e.start=to(),e.staller=oo(e.stallTimeout),e.staller.wait(()=>{e.staller=null}),e.runner=Io(e,i,A,t).then(r=>{e.done=!0,e.result=r,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:o,backend:ao(e,to()),request:{method:A,params:N(t)},provider:this})},r=>{e.done=!0,e.error=r,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:o,backend:ao(e,to()),request:{method:A,params:N(t)},provider:this})}),this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:o,backend:ao(e,null),request:{method:A,params:N(t)},provider:this}),E+=e.weight}const a=[];r.forEach(A=>{!A.done&&A.runner&&(a.push(A.runner),A.staller&&a.push(A.staller.getPromise()))}),a.length&&(yield Promise.race(a));const g=r.filter(A=>A.done&&null==A.error);if(g.length>=this.quorum){const A=e(g);if(void 0!==A)return r.forEach(A=>{A.staller&&A.staller.cancel(),A.cancelled=!0}),A;o||(yield oo(100).getPromise()),o=!1}const B=r.reduce((A,t)=>{if(!t.done||null==t.error)return A;const e=t.error.code;return so.indexOf(e)>=0&&(A[e]||(A[e]={error:t.error,weight:0}),A[e].weight+=t.weight),A},{});if(Object.keys(B).forEach(A=>{const t=B[A];if(t.weight<this.quorum)return;r.forEach(A=>{A.staller&&A.staller.cancel(),A.cancelled=!0});const e=t.error,i={};Eo.forEach(A=>{null!=e[A]&&(i[A]=e[A])}),Ao.throwError(e.reason||e.message,A,i)}),0===r.filter(A=>!A.done).length)break}return r.forEach(A=>{A.staller&&A.staller.cancel(),A.cancelled=!0}),Ao.throwError("failed to meet quorum",I.b.errors.SERVER_ERROR,{method:A,params:t,results:r.map(A=>ao(A)),provider:this})}))}}const uo=null,ho=new I.b("providers/5.5.0"),lo="84842078b09946638c03157f83405213";class wo extends Gn{constructor(A,t){const e=new fo(A,t),r=e.connection;r.password&&ho.throwError("INFURA WebSocket project secrets unsupported",I.b.errors.UNSUPPORTED_OPERATION,{operation:"InfuraProvider.getWebSocketProvider()"});super(r.url.replace(/^http/i,"ws").replace("/v3/","/ws/v3/"),A),T(this,"apiKey",e.projectId),T(this,"projectId",e.projectId),T(this,"projectSecret",e.projectSecret)}isCommunityResource(){return this.projectId===lo}}class fo extends kn{static getWebSocketProvider(A,t){return new wo(A,t)}static getApiKey(A){const t={apiKey:lo,projectId:lo,projectSecret:null};return null==A||("string"==typeof A?t.projectId=A:null!=A.projectSecret?(ho.assertArgument("string"==typeof A.projectId,"projectSecret requires a projectId","projectId",A.projectId),ho.assertArgument("string"==typeof A.projectSecret,"invalid projectSecret","projectSecret","[REDACTED]"),t.projectId=A.projectId,t.projectSecret=A.projectSecret):A.projectId&&(t.projectId=A.projectId),t.apiKey=t.projectId),t}static getUrl(A,t){let e=null;switch(A?A.name:"unknown"){case"homestead":e="mainnet.infura.io";break;case"ropsten":e="ropsten.infura.io";break;case"rinkeby":e="rinkeby.infura.io";break;case"kovan":e="kovan.infura.io";break;case"goerli":e="goerli.infura.io";break;case"matic":e="polygon-mainnet.infura.io";break;case"maticmum":e="polygon-mumbai.infura.io";break;default:ho.throwError("unsupported network",I.b.errors.INVALID_ARGUMENT,{argument:"network",value:A})}const r={allowGzip:!0,url:"https://"+e+"/v3/"+t.projectId,throttleCallback:(A,e)=>(t.projectId===lo&&qi(),Promise.resolve(!0))};return null!=t.projectSecret&&(r.user="",r.password=t.projectSecret),r}isCommunityResource(){return this.projectId===lo}}class Qo extends Mn{send(A,t){const e={method:A,params:t,id:this._nextId++,jsonrpc:"2.0"};null==this._pendingBatch&&(this._pendingBatch=[]);const r={request:e,resolve:null,reject:null},i=new Promise((A,t)=>{r.resolve=A,r.reject=t});return this._pendingBatch.push(r),this._pendingBatchAggregator||(this._pendingBatchAggregator=setTimeout(()=>{const A=this._pendingBatch;this._pendingBatch=null,this._pendingBatchAggregator=null;const t=A.map(A=>A.request);return this.emit("debug",{action:"requestBatch",request:N(t),provider:this}),Ji(this.connection,JSON.stringify(t)).then(e=>{this.emit("debug",{action:"response",request:t,response:e,provider:this}),A.forEach((A,t)=>{const r=e[t];if(r.error){const t=new Error(r.error.message);t.code=r.error.code,t.data=r.error.data,A.reject(t)}else A.resolve(r.result)})},e=>{this.emit("debug",{action:"response",error:e,request:t,provider:this}),A.forEach(A=>{A.reject(e)})})},10)),i}}const Co=new I.b("providers/5.5.0");class Ro extends kn{static getApiKey(A){return A&&"string"!=typeof A&&Co.throwArgumentError("invalid apiKey","apiKey",A),A||"ETHERS_JS_SHARED"}static getUrl(A,t){Co.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");let e=null;switch(A.name){case"homestead":e="https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";break;case"ropsten":e="https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";break;case"rinkeby":e="https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";break;case"goerli":e="https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";break;case"kovan":e="https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";break;default:Co.throwArgumentError("unsupported network","network",arguments[0])}return e+"?apiKey="+t}}const po=new I.b("providers/5.5.0"),To={homestead:"6004bcd10040261633ade990",ropsten:"6004bd4d0040261633ade991",rinkeby:"6004bda20040261633ade994",goerli:"6004bd860040261633ade992"};class Uo extends kn{constructor(A,t){if(null==t){const e=U(new.target,"getNetwork")(A);if(e){const A=To[e.name];A&&(t={applicationId:A,loadBalancer:!0})}null==t&&po.throwError("unsupported network",I.b.errors.INVALID_ARGUMENT,{argument:"network",value:A})}super(A,t)}static getApiKey(A){null==A&&po.throwArgumentError("PocketProvider.getApiKey does not support null apiKey","apiKey",A);const t={applicationId:null,loadBalancer:!1,applicationSecretKey:null};return"string"==typeof A?t.applicationId=A:null!=A.applicationSecretKey?(po.assertArgument("string"==typeof A.applicationId,"applicationSecretKey requires an applicationId","applicationId",A.applicationId),po.assertArgument("string"==typeof A.applicationSecretKey,"invalid applicationSecretKey","applicationSecretKey","[REDACTED]"),t.applicationId=A.applicationId,t.applicationSecretKey=A.applicationSecretKey,t.loadBalancer=!!A.loadBalancer):A.applicationId?(po.assertArgument("string"==typeof A.applicationId,"apiKey.applicationId must be a string","apiKey.applicationId",A.applicationId),t.applicationId=A.applicationId,t.loadBalancer=!!A.loadBalancer):po.throwArgumentError("unsupported PocketProvider apiKey","apiKey",A),t}static getUrl(A,t){let e=null;switch(A?A.name:"unknown"){case"homestead":e="eth-mainnet.gateway.pokt.network";break;case"ropsten":e="eth-ropsten.gateway.pokt.network";break;case"rinkeby":e="eth-rinkeby.gateway.pokt.network";break;case"goerli":e="eth-goerli.gateway.pokt.network";break;default:po.throwError("unsupported network",I.b.errors.INVALID_ARGUMENT,{argument:"network",value:A})}let r=null;r=t.loadBalancer?`https://${e}/v1/lb/${t.applicationId}`:`https://${e}/v1/${t.applicationId}`;const i={url:r,headers:{}};return null!=t.applicationSecretKey&&(i.user="",i.password=t.applicationSecretKey),i}isCommunityResource(){return this.applicationId===To[this.network.name]}}const mo=new I.b("providers/5.5.0");let Mo=1;function Fo(A,t){const e="Web3LegacyFetcher";return function(A,r){const i={method:A,params:r,id:Mo++,jsonrpc:"2.0"};return new Promise((A,r)=>{this.emit("debug",{action:"request",fetcher:e,request:N(i),provider:this}),t(i,(t,n)=>{if(t)return this.emit("debug",{action:"response",fetcher:e,error:t,request:i,provider:this}),r(t);if(this.emit("debug",{action:"response",fetcher:e,request:i,response:n,provider:this}),n.error){const A=new Error(n.error.message);return A.code=n.error.code,A.data=n.error.data,r(A)}A(n.result)})})}}class So extends Mn{constructor(A,t){mo.checkNew(new.target,So),null==A&&mo.throwArgumentError("missing provider","provider",A);let e=null,r=null,i=null;"function"==typeof A?(e="unknown:",r=A):(e=A.host||A.path||"",!e&&A.isMetaMask&&(e="metamask"),i=A,A.request?(""===e&&(e="eip-1193:"),r=function(A){return function(t,e){null==e&&(e=[]);const r={method:t,params:e};return this.emit("debug",{action:"request",fetcher:"Eip1193Fetcher",request:N(r),provider:this}),A.request(r).then(A=>(this.emit("debug",{action:"response",fetcher:"Eip1193Fetcher",request:r,response:A,provider:this}),A),A=>{throw this.emit("debug",{action:"response",fetcher:"Eip1193Fetcher",request:r,error:A,provider:this}),A})}}(A)):A.sendAsync?r=Fo(0,A.sendAsync.bind(A)):A.send?r=Fo(0,A.send.bind(A)):mo.throwArgumentError("unsupported provider","provider",A),e||(e="unknown:")),super(e,t),T(this,"jsonRpcFetchFunc",r),T(this,"provider",i)}send(A,t){return this.jsonRpcFetchFunc(A,t)}}const Do=new I.b("providers/5.5.0");function No(A,t){if(null==A&&(A="homestead"),"string"==typeof A){const t=A.match(/^(ws|http)s?:/i);if(t)switch(t[1]){case"http":return new Mn(A);case"ws":return new Gn(A);default:Do.throwArgumentError("unsupported URL scheme","network",A)}}const e=ui(A);return e&&e._defaultProvider||Do.throwError("unsupported getDefaultProvider network",I.b.errors.NETWORK_ERROR,{operation:"getDefaultProvider",network:A}),e._defaultProvider({FallbackProvider:co,AlchemyProvider:Jn,CloudflareProvider:Ln,EtherscanProvider:Xn,InfuraProvider:fo,JsonRpcProvider:Mn,NodesmithProvider:Ro,PocketProvider:Uo,Web3Provider:So,IpcProvider:uo},t)}const Go=new RegExp("^bytes([0-9]+)$"),yo=new RegExp("^(u?int)([0-9]*)$"),Vo=new RegExp("^(.*)\\[([0-9]*)\\]$"),bo=new I.b("solidity/5.5.0");function ko(A,t){A.length!=t.length&&bo.throwArgumentError("wrong number of values; expected ${ types.length }","values",t);const e=[];return A.forEach((function(A,r){e.push(function A(t,e,r){switch(t){case"address":return r?Object(a.p)(e,32):Object(a.a)(e);case"string":return BA(e);case"bytes":return Object(a.a)(e);case"bool":return e=e?"0x01":"0x00",r?Object(a.p)(e,32):Object(a.a)(e)}let i=t.match(yo);if(i){let A=parseInt(i[2]||"256");return(i[2]&&String(A)!==i[2]||A%8!=0||0===A||A>256)&&bo.throwArgumentError("invalid number type","type",t),r&&(A=256),e=w.from(e).toTwos(A),Object(a.p)(e,A/8)}if(i=t.match(Go),i){const A=parseInt(i[1]);return(String(A)!==i[1]||0===A||A>32)&&bo.throwArgumentError("invalid bytes type","type",t),Object(a.a)(e).byteLength!==A&&bo.throwArgumentError("invalid value for "+t,"value",e),r?Object(a.a)((e+"0000000000000000000000000000000000000000000000000000000000000000").substring(0,66)):e}if(i=t.match(Vo),i&&Array.isArray(e)){const r=i[1];parseInt(i[2]||String(e.length))!=e.length&&bo.throwArgumentError("invalid array length for "+t,"value",e);const n=[];return e.forEach((function(t){n.push(A(r,t,!0))})),Object(a.b)(n)}return bo.throwArgumentError("invalid type","type",t)}(A,t[r]))})),Object(a.i)(Object(a.b)(e))}function vo(A,t){return J(ko(A,t))}function Oo(A,t){return er(ko(A,t))}function Zo(A){const t=BA(A);if(t.length>31)throw new Error("bytes32 string must be less than 32 bytes");return Object(a.i)(Object(a.b)([t,ni]).slice(0,32))}function Jo(A){const t=Object(a.a)(A);if(32!==t.length)throw new Error("invalid bytes32 - not 32 bytes long");if(0!==t[31])throw new Error("invalid bytes32 string - no null terminator");let e=31;for(;0===t[e-1];)e--;return hA(t.slice(0,e))}const Po=new I.b("units/5.5.0"),Yo=["wei","kwei","mwei","gwei","szabo","finney","ether"];function Lo(A){const t=String(A).split(".");(t.length>2||!t[0].match(/^-?[0-9]*$/)||t[1]&&!t[1].match(/^[0-9]*$/)||"."===A||"-."===A)&&Po.throwArgumentError("invalid value","value",A);let e=t[0],r="";for("-"===e.substring(0,1)&&(r="-",e=e.substring(1));"0"===e.substring(0,1);)e=e.substring(1);""===e&&(e="0");let i="";for(2===t.length&&(i="."+(t[1]||"0"));i.length>2&&"0"===i[i.length-1];)i=i.substring(0,i.length-1);const n=[];for(;e.length;){if(e.length<=3){n.unshift(e);break}{const A=e.length-3;n.unshift(e.substring(A)),e=e.substring(0,A)}}return r+n.join(",")+i}function xo(A,t){if("string"==typeof t){const A=Yo.indexOf(t);-1!==A&&(t=3*A)}return me(A,null!=t?t:18)}function Ho(A,t){if("string"!=typeof A&&Po.throwArgumentError("value must be a string","value",A),"string"==typeof t){const A=Yo.indexOf(t);-1!==A&&(t=3*A)}return Me(A,null!=t?t:18)}function Wo(A){return xo(A,18)}function jo(A){return Ho(A,18)}const Ko="ethers/5.5.1",qo=new I.b(Ko);try{const A=window;null==A._ethers&&(A._ethers=E)}catch(A){}},function(A,t,e){"use strict";(function(t){var r=e(7),i=e(66),n=e(34),o={"Content-Type":"application/x-www-form-urlencoded"};function s(A,t){!r.isUndefined(A)&&r.isUndefined(A["Content-Type"])&&(A["Content-Type"]=t)}var E,a={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==t&&"[object process]"===Object.prototype.toString.call(t))&&(E=e(35)),E),transformRequest:[function(A,t){return i(t,"Accept"),i(t,"Content-Type"),r.isFormData(A)||r.isArrayBuffer(A)||r.isBuffer(A)||r.isStream(A)||r.isFile(A)||r.isBlob(A)?A:r.isArrayBufferView(A)?A.buffer:r.isURLSearchParams(A)?(s(t,"application/x-www-form-urlencoded;charset=utf-8"),A.toString()):r.isObject(A)||t&&"application/json"===t["Content-Type"]?(s(t,"application/json"),function(A,t,e){if(r.isString(A))try{return(t||JSON.parse)(A),r.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(e||JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){var t=this.transitional||a.transitional,e=t&&t.silentJSONParsing,i=t&&t.forcedJSONParsing,o=!e&&"json"===this.responseType;if(o||i&&r.isString(A)&&A.length)try{return JSON.parse(A)}catch(A){if(o){if("SyntaxError"===A.name)throw n(A,this,"E_JSON_PARSE");throw A}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(A){a.headers[A]={}})),r.forEach(["post","put","patch"],(function(A){a.headers[A]=r.merge(o)})),A.exports=a}).call(this,e(26))},function(A,t,e){"use strict";function r(A){this.message=A}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,A.exports=r},function(A,t,e){"use strict";(function(t){!function(e){function r(A){const t=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let e=1779033703,r=3144134277,i=1013904242,n=2773480762,o=1359893119,s=2600822924,E=528734635,a=1541459225;const g=new Uint32Array(64);function B(A){let B=0,I=A.length;for(;I>=64;){let c,u,h,l,w,f=e,Q=r,C=i,d=n,R=o,p=s,T=E,U=a;for(u=0;u<16;u++)h=B+4*u,g[u]=(255&A[h])<<24|(255&A[h+1])<<16|(255&A[h+2])<<8|255&A[h+3];for(u=16;u<64;u++)c=g[u-2],l=(c>>>17|c<<15)^(c>>>19|c<<13)^c>>>10,c=g[u-15],w=(c>>>7|c<<25)^(c>>>18|c<<14)^c>>>3,g[u]=(l+g[u-7]|0)+(w+g[u-16]|0)|0;for(u=0;u<64;u++)l=(((R>>>6|R<<26)^(R>>>11|R<<21)^(R>>>25|R<<7))+(R&p^~R&T)|0)+(U+(t[u]+g[u]|0)|0)|0,w=((f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10))+(f&Q^f&C^Q&C)|0,U=T,T=p,p=R,R=d+l|0,d=C,C=Q,Q=f,f=l+w|0;e=e+f|0,r=r+Q|0,i=i+C|0,n=n+d|0,o=o+R|0,s=s+p|0,E=E+T|0,a=a+U|0,B+=64,I-=64}}B(A);let I,c=A.length%64,u=A.length/536870912|0,h=A.length<<3,l=c<56?56:120,w=A.slice(A.length-c,A.length);for(w.push(128),I=c+1;I<l;I++)w.push(0);return w.push(u>>>24&255),w.push(u>>>16&255),w.push(u>>>8&255),w.push(u>>>0&255),w.push(h>>>24&255),w.push(h>>>16&255),w.push(h>>>8&255),w.push(h>>>0&255),B(w),[e>>>24&255,e>>>16&255,e>>>8&255,e>>>0&255,r>>>24&255,r>>>16&255,r>>>8&255,r>>>0&255,i>>>24&255,i>>>16&255,i>>>8&255,i>>>0&255,n>>>24&255,n>>>16&255,n>>>8&255,n>>>0&255,o>>>24&255,o>>>16&255,o>>>8&255,o>>>0&255,s>>>24&255,s>>>16&255,s>>>8&255,s>>>0&255,E>>>24&255,E>>>16&255,E>>>8&255,E>>>0&255,a>>>24&255,a>>>16&255,a>>>8&255,a>>>0&255]}function i(A,t,e){A=A.length<=64?A:r(A);const i=64+t.length+4,n=new Array(i),o=new Array(64);let s,E=[];for(s=0;s<64;s++)n[s]=54;for(s=0;s<A.length;s++)n[s]^=A[s];for(s=0;s<t.length;s++)n[64+s]=t[s];for(s=i-4;s<i;s++)n[s]=0;for(s=0;s<64;s++)o[s]=92;for(s=0;s<A.length;s++)o[s]^=A[s];function a(){for(let A=i-1;A>=i-4;A--){if(n[A]++,n[A]<=255)return;n[A]=0}}for(;e>=32;)a(),E=E.concat(r(o.concat(r(n)))),e-=32;return e>0&&(a(),E=E.concat(r(o.concat(r(n))).slice(0,e))),E}function n(A,t,e,r,i){let n;for(a(A,16*(2*e-1),i,0,16),n=0;n<2*e;n++)E(A,16*n,i,16),s(i,r),a(i,0,A,t+16*n,16);for(n=0;n<e;n++)a(A,t+2*n*16,A,16*n,16);for(n=0;n<e;n++)a(A,t+16*(2*n+1),A,16*(n+e),16)}function o(A,t){return A<<t|A>>>32-t}function s(A,t){a(A,0,t,0,16);for(let A=8;A>0;A-=2)t[4]^=o(t[0]+t[12],7),t[8]^=o(t[4]+t[0],9),t[12]^=o(t[8]+t[4],13),t[0]^=o(t[12]+t[8],18),t[9]^=o(t[5]+t[1],7),t[13]^=o(t[9]+t[5],9),t[1]^=o(t[13]+t[9],13),t[5]^=o(t[1]+t[13],18),t[14]^=o(t[10]+t[6],7),t[2]^=o(t[14]+t[10],9),t[6]^=o(t[2]+t[14],13),t[10]^=o(t[6]+t[2],18),t[3]^=o(t[15]+t[11],7),t[7]^=o(t[3]+t[15],9),t[11]^=o(t[7]+t[3],13),t[15]^=o(t[11]+t[7],18),t[1]^=o(t[0]+t[3],7),t[2]^=o(t[1]+t[0],9),t[3]^=o(t[2]+t[1],13),t[0]^=o(t[3]+t[2],18),t[6]^=o(t[5]+t[4],7),t[7]^=o(t[6]+t[5],9),t[4]^=o(t[7]+t[6],13),t[5]^=o(t[4]+t[7],18),t[11]^=o(t[10]+t[9],7),t[8]^=o(t[11]+t[10],9),t[9]^=o(t[8]+t[11],13),t[10]^=o(t[9]+t[8],18),t[12]^=o(t[15]+t[14],7),t[13]^=o(t[12]+t[15],9),t[14]^=o(t[13]+t[12],13),t[15]^=o(t[14]+t[13],18);for(let e=0;e<16;++e)A[e]+=t[e]}function E(A,t,e,r){for(let i=0;i<r;i++)e[i]^=A[t+i]}function a(A,t,e,r,i){for(;i--;)e[r++]=A[t++]}function g(A){if(!A||"number"!=typeof A.length)return!1;for(let t=0;t<A.length;t++){const e=A[t];if("number"!=typeof e||e%1||e<0||e>=256)return!1}return!0}function B(A,t){if("number"!=typeof A||A%1)throw new Error("invalid "+t);return A}function I(A,e,r,o,s,I,c){if(r=B(r,"N"),o=B(o,"r"),s=B(s,"p"),I=B(I,"dkLen"),0===r||0!=(r&r-1))throw new Error("N must be power of 2");if(r>2147483647/128/o)throw new Error("N too large");if(o>2147483647/128/s)throw new Error("r too large");if(!g(A))throw new Error("password must be an array or buffer");if(A=Array.prototype.slice.call(A),!g(e))throw new Error("salt must be an array or buffer");e=Array.prototype.slice.call(e);let u=i(A,e,128*s*o);const h=new Uint32Array(32*s*o);for(let A=0;A<h.length;A++){const t=4*A;h[A]=(255&u[t+3])<<24|(255&u[t+2])<<16|(255&u[t+1])<<8|(255&u[t+0])<<0}const l=new Uint32Array(64*o),w=new Uint32Array(32*o*r),f=32*o,Q=new Uint32Array(16),C=new Uint32Array(16),d=s*r*2;let R,p,T=0,U=null,m=!1,M=0,F=0;const S=c?parseInt(1e3/o):4294967295,D=void 0!==t?t:setTimeout,N=function(){if(m)return c(new Error("cancelled"),T/d);let t;switch(M){case 0:p=32*F*o,a(h,p,l,0,f),M=1,R=0;case 1:t=r-R,t>S&&(t=S);for(let A=0;A<t;A++)a(l,0,w,(R+A)*f,f),n(l,f,o,Q,C);if(R+=t,T+=t,c){const A=parseInt(1e3*T/d);if(A!==U){if(m=c(null,T/d),m)break;U=A}}if(R<r)break;R=0,M=2;case 2:t=r-R,t>S&&(t=S);for(let A=0;A<t;A++){const A=l[16*(2*o-1)]&r-1;E(w,A*f,l,f),n(l,f,o,Q,C)}if(R+=t,T+=t,c){const A=parseInt(1e3*T/d);if(A!==U){if(m=c(null,T/d),m)break;U=A}}if(R<r)break;if(a(l,0,h,p,f),F++,F<s){M=0;break}u=[];for(let A=0;A<h.length;A++)u.push(h[A]>>0&255),u.push(h[A]>>8&255),u.push(h[A]>>16&255),u.push(h[A]>>24&255);const e=i(A,u,I);return c&&c(null,1,e),e}c&&D(N)};if(!c)for(;;){const A=N();if(null!=A)return A}N()}const c={scrypt:function(A,t,e,r,i,n,o){return new Promise((function(s,E){let a=0;o&&o(0),I(A,t,e,r,i,n,(function(A,t,e){if(A)E(A);else if(e)o&&1!==a&&o(1),s(new Uint8Array(e));else if(o&&t!==a)return a=t,o(t)}))}))},syncScrypt:function(A,t,e,r,i,n){return new Uint8Array(I(A,t,e,r,i,n))}};A.exports=c}()}).call(this,e(88).setImmediate)},,function(A,t){var e,r,i=A.exports={};function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(A){if(e===setTimeout)return setTimeout(A,0);if((e===n||!e)&&setTimeout)return e=setTimeout,setTimeout(A,0);try{return e(A,0)}catch(t){try{return e.call(null,A,0)}catch(t){return e.call(this,A,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:n}catch(A){e=n}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(A){r=o}}();var E,a=[],g=!1,B=-1;function I(){g&&E&&(g=!1,E.length?a=E.concat(a):B=-1,a.length&&c())}function c(){if(!g){var A=s(I);g=!0;for(var t=a.length;t;){for(E=a,a=[];++B<t;)E&&E[B].run();B=-1,t=a.length}E=null,g=!1,function(A){if(r===clearTimeout)return clearTimeout(A);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(A);try{r(A)}catch(t){try{return r.call(null,A)}catch(t){return r.call(this,A)}}}(A)}}function u(A,t){this.fun=A,this.array=t}function h(){}i.nextTick=function(A){var t=new Array(arguments.length-1);if(arguments.length>1)for(var e=1;e<arguments.length;e++)t[e-1]=arguments[e];a.push(new u(A,t)),1!==a.length||g||s(c)},u.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=h,i.addListener=h,i.once=h,i.off=h,i.removeListener=h,i.removeAllListeners=h,i.emit=h,i.prependListener=h,i.prependOnceListener=h,i.listeners=function(A){return[]},i.binding=function(A){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(A){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(A,t,e){"use strict";e.d(t,"a",(function(){return n}));let r=0;const i=[],n=(A,t,e)=>{const n={type:A,id:String(++r),date:new Date};t&&(n.message=t),e&&(n.data=e),function(A){for(let t=0;t<i.length;t++)try{i[t](A)}catch(A){console.error(A)}}(n)},o=A=>(i.push(A),()=>{const t=i.indexOf(A);-1!==t&&(i[t]=i[i.length-1],i.pop())});"undefined"!=typeof window&&(window.__ledgerLogsListen=o)},function(A,t,e){var r;!function(i){"use strict";var n,o=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,s=Math.ceil,E=Math.floor,a="[BigNumber Error] ",g=a+"Number primitive has more than 15 significant digits: ",B=1e14,I=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],c=1e9;function u(A){var t=0|A;return A>0||A===t?t:t-1}function h(A){for(var t,e,r=1,i=A.length,n=A[0]+"";r<i;){for(e=14-(t=A[r++]+"").length;e--;t="0"+t);n+=t}for(i=n.length;48===n.charCodeAt(--i););return n.slice(0,i+1||1)}function l(A,t){var e,r,i=A.c,n=t.c,o=A.s,s=t.s,E=A.e,a=t.e;if(!o||!s)return null;if(e=i&&!i[0],r=n&&!n[0],e||r)return e?r?0:-s:o;if(o!=s)return o;if(e=o<0,r=E==a,!i||!n)return r?0:!i^e?1:-1;if(!r)return E>a^e?1:-1;for(s=(E=i.length)<(a=n.length)?E:a,o=0;o<s;o++)if(i[o]!=n[o])return i[o]>n[o]^e?1:-1;return E==a?0:E>a^e?1:-1}function w(A,t,e,r){if(A<t||A>e||A!==E(A))throw Error(a+(r||"Argument")+("number"==typeof A?A<t||A>e?" out of range: ":" not an integer: ":" not a primitive number: ")+String(A))}function f(A){var t=A.c.length-1;return u(A.e/14)==t&&A.c[t]%2!=0}function Q(A,t){return(A.length>1?A.charAt(0)+"."+A.slice(1):A)+(t<0?"e":"e+")+t}function C(A,t,e){var r,i;if(t<0){for(i=e+".";++t;i+=e);A=i+A}else if(++t>(r=A.length)){for(i=e,t-=r;--t;i+=e);A+=i}else t<r&&(A=A.slice(0,t)+"."+A.slice(t));return A}(n=function A(t){var e,r,i,n,d,R,p,T,U,m=Z.prototype={constructor:Z,toString:null,valueOf:null},M=new Z(1),F=20,S=4,D=-7,N=21,G=-1e7,y=1e7,V=!1,b=1,k=0,v={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},O="0123456789abcdefghijklmnopqrstuvwxyz";function Z(A,t){var e,n,s,a,B,I,c,u,h=this;if(!(h instanceof Z))return new Z(A,t);if(null==t){if(A&&!0===A._isBigNumber)return h.s=A.s,void(!A.c||A.e>y?h.c=h.e=null:A.e<G?h.c=[h.e=0]:(h.e=A.e,h.c=A.c.slice()));if((I="number"==typeof A)&&0*A==0){if(h.s=1/A<0?(A=-A,-1):1,A===~~A){for(a=0,B=A;B>=10;B/=10,a++);return void(a>y?h.c=h.e=null:(h.e=a,h.c=[A]))}u=String(A)}else{if(!o.test(u=String(A)))return i(h,u,I);h.s=45==u.charCodeAt(0)?(u=u.slice(1),-1):1}(a=u.indexOf("."))>-1&&(u=u.replace(".","")),(B=u.search(/e/i))>0?(a<0&&(a=B),a+=+u.slice(B+1),u=u.substring(0,B)):a<0&&(a=u.length)}else{if(w(t,2,O.length,"Base"),10==t)return L(h=new Z(A),F+h.e+1,S);if(u=String(A),I="number"==typeof A){if(0*A!=0)return i(h,u,I,t);if(h.s=1/A<0?(u=u.slice(1),-1):1,Z.DEBUG&&u.replace(/^0\.0*|\./,"").length>15)throw Error(g+A)}else h.s=45===u.charCodeAt(0)?(u=u.slice(1),-1):1;for(e=O.slice(0,t),a=B=0,c=u.length;B<c;B++)if(e.indexOf(n=u.charAt(B))<0){if("."==n){if(B>a){a=c;continue}}else if(!s&&(u==u.toUpperCase()&&(u=u.toLowerCase())||u==u.toLowerCase()&&(u=u.toUpperCase()))){s=!0,B=-1,a=0;continue}return i(h,String(A),I,t)}I=!1,(a=(u=r(u,t,10,h.s)).indexOf("."))>-1?u=u.replace(".",""):a=u.length}for(B=0;48===u.charCodeAt(B);B++);for(c=u.length;48===u.charCodeAt(--c););if(u=u.slice(B,++c)){if(c-=B,I&&Z.DEBUG&&c>15&&(A>9007199254740991||A!==E(A)))throw Error(g+h.s*A);if((a=a-B-1)>y)h.c=h.e=null;else if(a<G)h.c=[h.e=0];else{if(h.e=a,h.c=[],B=(a+1)%14,a<0&&(B+=14),B<c){for(B&&h.c.push(+u.slice(0,B)),c-=14;B<c;)h.c.push(+u.slice(B,B+=14));B=14-(u=u.slice(B)).length}else B-=c;for(;B--;u+="0");h.c.push(+u)}}else h.c=[h.e=0]}function J(A,t,e,r){var i,n,o,s,E;if(null==e?e=S:w(e,0,8),!A.c)return A.toString();if(i=A.c[0],o=A.e,null==t)E=h(A.c),E=1==r||2==r&&(o<=D||o>=N)?Q(E,o):C(E,o,"0");else if(n=(A=L(new Z(A),t,e)).e,s=(E=h(A.c)).length,1==r||2==r&&(t<=n||n<=D)){for(;s<t;E+="0",s++);E=Q(E,n)}else if(t-=o,E=C(E,n,"0"),n+1>s){if(--t>0)for(E+=".";t--;E+="0");}else if((t+=n-s)>0)for(n+1==s&&(E+=".");t--;E+="0");return A.s<0&&i?"-"+E:E}function P(A,t){for(var e,r=1,i=new Z(A[0]);r<A.length;r++){if(!(e=new Z(A[r])).s){i=e;break}t.call(i,e)&&(i=e)}return i}function Y(A,t,e){for(var r=1,i=t.length;!t[--i];t.pop());for(i=t[0];i>=10;i/=10,r++);return(e=r+14*e-1)>y?A.c=A.e=null:e<G?A.c=[A.e=0]:(A.e=e,A.c=t),A}function L(A,t,e,r){var i,n,o,a,g,c,u,h=A.c,l=I;if(h){A:{for(i=1,a=h[0];a>=10;a/=10,i++);if((n=t-i)<0)n+=14,o=t,u=(g=h[c=0])/l[i-o-1]%10|0;else if((c=s((n+1)/14))>=h.length){if(!r)break A;for(;h.length<=c;h.push(0));g=u=0,i=1,o=(n%=14)-14+1}else{for(g=a=h[c],i=1;a>=10;a/=10,i++);u=(o=(n%=14)-14+i)<0?0:g/l[i-o-1]%10|0}if(r=r||t<0||null!=h[c+1]||(o<0?g:g%l[i-o-1]),r=e<4?(u||r)&&(0==e||e==(A.s<0?3:2)):u>5||5==u&&(4==e||r||6==e&&(n>0?o>0?g/l[i-o]:0:h[c-1])%10&1||e==(A.s<0?8:7)),t<1||!h[0])return h.length=0,r?(t-=A.e+1,h[0]=l[(14-t%14)%14],A.e=-t||0):h[0]=A.e=0,A;if(0==n?(h.length=c,a=1,c--):(h.length=c+1,a=l[14-n],h[c]=o>0?E(g/l[i-o]%l[o])*a:0),r)for(;;){if(0==c){for(n=1,o=h[0];o>=10;o/=10,n++);for(o=h[0]+=a,a=1;o>=10;o/=10,a++);n!=a&&(A.e++,h[0]==B&&(h[0]=1));break}if(h[c]+=a,h[c]!=B)break;h[c--]=0,a=1}for(n=h.length;0===h[--n];h.pop());}A.e>y?A.c=A.e=null:A.e<G&&(A.c=[A.e=0])}return A}function x(A){var t,e=A.e;return null===e?A.toString():(t=h(A.c),t=e<=D||e>=N?Q(t,e):C(t,e,"0"),A.s<0?"-"+t:t)}return Z.clone=A,Z.ROUND_UP=0,Z.ROUND_DOWN=1,Z.ROUND_CEIL=2,Z.ROUND_FLOOR=3,Z.ROUND_HALF_UP=4,Z.ROUND_HALF_DOWN=5,Z.ROUND_HALF_EVEN=6,Z.ROUND_HALF_CEIL=7,Z.ROUND_HALF_FLOOR=8,Z.EUCLID=9,Z.config=Z.set=function(A){var t,e;if(null!=A){if("object"!=typeof A)throw Error(a+"Object expected: "+A);if(A.hasOwnProperty(t="DECIMAL_PLACES")&&(w(e=A[t],0,c,t),F=e),A.hasOwnProperty(t="ROUNDING_MODE")&&(w(e=A[t],0,8,t),S=e),A.hasOwnProperty(t="EXPONENTIAL_AT")&&((e=A[t])&&e.pop?(w(e[0],-c,0,t),w(e[1],0,c,t),D=e[0],N=e[1]):(w(e,-c,c,t),D=-(N=e<0?-e:e))),A.hasOwnProperty(t="RANGE"))if((e=A[t])&&e.pop)w(e[0],-c,-1,t),w(e[1],1,c,t),G=e[0],y=e[1];else{if(w(e,-c,c,t),!e)throw Error(a+t+" cannot be zero: "+e);G=-(y=e<0?-e:e)}if(A.hasOwnProperty(t="CRYPTO")){if((e=A[t])!==!!e)throw Error(a+t+" not true or false: "+e);if(e){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw V=!e,Error(a+"crypto unavailable");V=e}else V=e}if(A.hasOwnProperty(t="MODULO_MODE")&&(w(e=A[t],0,9,t),b=e),A.hasOwnProperty(t="POW_PRECISION")&&(w(e=A[t],0,c,t),k=e),A.hasOwnProperty(t="FORMAT")){if("object"!=typeof(e=A[t]))throw Error(a+t+" not an object: "+e);v=e}if(A.hasOwnProperty(t="ALPHABET")){if("string"!=typeof(e=A[t])||/^.?$|[+\-.\s]|(.).*\1/.test(e))throw Error(a+t+" invalid: "+e);O=e}}return{DECIMAL_PLACES:F,ROUNDING_MODE:S,EXPONENTIAL_AT:[D,N],RANGE:[G,y],CRYPTO:V,MODULO_MODE:b,POW_PRECISION:k,FORMAT:v,ALPHABET:O}},Z.isBigNumber=function(A){if(!A||!0!==A._isBigNumber)return!1;if(!Z.DEBUG)return!0;var t,e,r=A.c,i=A.e,n=A.s;A:if("[object Array]"=={}.toString.call(r)){if((1===n||-1===n)&&i>=-c&&i<=c&&i===E(i)){if(0===r[0]){if(0===i&&1===r.length)return!0;break A}if((t=(i+1)%14)<1&&(t+=14),String(r[0]).length==t){for(t=0;t<r.length;t++)if((e=r[t])<0||e>=B||e!==E(e))break A;if(0!==e)return!0}}}else if(null===r&&null===i&&(null===n||1===n||-1===n))return!0;throw Error(a+"Invalid BigNumber: "+A)},Z.maximum=Z.max=function(){return P(arguments,m.lt)},Z.minimum=Z.min=function(){return P(arguments,m.gt)},Z.random=(n=9007199254740992*Math.random()&2097151?function(){return E(9007199254740992*Math.random())}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(A){var t,e,r,i,o,g=0,B=[],u=new Z(M);if(null==A?A=F:w(A,0,c),i=s(A/14),V)if(crypto.getRandomValues){for(t=crypto.getRandomValues(new Uint32Array(i*=2));g<i;)(o=131072*t[g]+(t[g+1]>>>11))>=9e15?(e=crypto.getRandomValues(new Uint32Array(2)),t[g]=e[0],t[g+1]=e[1]):(B.push(o%1e14),g+=2);g=i/2}else{if(!crypto.randomBytes)throw V=!1,Error(a+"crypto unavailable");for(t=crypto.randomBytes(i*=7);g<i;)(o=281474976710656*(31&t[g])+1099511627776*t[g+1]+4294967296*t[g+2]+16777216*t[g+3]+(t[g+4]<<16)+(t[g+5]<<8)+t[g+6])>=9e15?crypto.randomBytes(7).copy(t,g):(B.push(o%1e14),g+=7);g=i/7}if(!V)for(;g<i;)(o=n())<9e15&&(B[g++]=o%1e14);for(A%=14,(i=B[--g])&&A&&(o=I[14-A],B[g]=E(i/o)*o);0===B[g];B.pop(),g--);if(g<0)B=[r=0];else{for(r=-1;0===B[0];B.splice(0,1),r-=14);for(g=1,o=B[0];o>=10;o/=10,g++);g<14&&(r-=14-g)}return u.e=r,u.c=B,u}),Z.sum=function(){for(var A=1,t=arguments,e=new Z(t[0]);A<t.length;)e=e.plus(t[A++]);return e},r=function(){function A(A,t,e,r){for(var i,n,o=[0],s=0,E=A.length;s<E;){for(n=o.length;n--;o[n]*=t);for(o[0]+=r.indexOf(A.charAt(s++)),i=0;i<o.length;i++)o[i]>e-1&&(null==o[i+1]&&(o[i+1]=0),o[i+1]+=o[i]/e|0,o[i]%=e)}return o.reverse()}return function(t,r,i,n,o){var s,E,a,g,B,I,c,u,l=t.indexOf("."),w=F,f=S;for(l>=0&&(g=k,k=0,t=t.replace(".",""),I=(u=new Z(r)).pow(t.length-l),k=g,u.c=A(C(h(I.c),I.e,"0"),10,i,"0123456789"),u.e=u.c.length),a=g=(c=A(t,r,i,o?(s=O,"0123456789"):(s="0123456789",O))).length;0==c[--g];c.pop());if(!c[0])return s.charAt(0);if(l<0?--a:(I.c=c,I.e=a,I.s=n,c=(I=e(I,u,w,f,i)).c,B=I.r,a=I.e),l=c[E=a+w+1],g=i/2,B=B||E<0||null!=c[E+1],B=f<4?(null!=l||B)&&(0==f||f==(I.s<0?3:2)):l>g||l==g&&(4==f||B||6==f&&1&c[E-1]||f==(I.s<0?8:7)),E<1||!c[0])t=B?C(s.charAt(1),-w,s.charAt(0)):s.charAt(0);else{if(c.length=E,B)for(--i;++c[--E]>i;)c[E]=0,E||(++a,c=[1].concat(c));for(g=c.length;!c[--g];);for(l=0,t="";l<=g;t+=s.charAt(c[l++]));t=C(t,a,s.charAt(0))}return t}}(),e=function(){function A(A,t,e){var r,i,n,o,s=0,E=A.length,a=t%1e7,g=t/1e7|0;for(A=A.slice();E--;)s=((i=a*(n=A[E]%1e7)+(r=g*n+(o=A[E]/1e7|0)*a)%1e7*1e7+s)/e|0)+(r/1e7|0)+g*o,A[E]=i%e;return s&&(A=[s].concat(A)),A}function t(A,t,e,r){var i,n;if(e!=r)n=e>r?1:-1;else for(i=n=0;i<e;i++)if(A[i]!=t[i]){n=A[i]>t[i]?1:-1;break}return n}function e(A,t,e,r){for(var i=0;e--;)A[e]-=i,i=A[e]<t[e]?1:0,A[e]=i*r+A[e]-t[e];for(;!A[0]&&A.length>1;A.splice(0,1));}return function(r,i,n,o,s){var a,g,I,c,h,l,w,f,Q,C,d,R,p,T,U,m,M,F=r.s==i.s?1:-1,S=r.c,D=i.c;if(!(S&&S[0]&&D&&D[0]))return new Z(r.s&&i.s&&(S?!D||S[0]!=D[0]:D)?S&&0==S[0]||!D?0*F:F/0:NaN);for(Q=(f=new Z(F)).c=[],F=n+(g=r.e-i.e)+1,s||(s=B,g=u(r.e/14)-u(i.e/14),F=F/14|0),I=0;D[I]==(S[I]||0);I++);if(D[I]>(S[I]||0)&&g--,F<0)Q.push(1),c=!0;else{for(T=S.length,m=D.length,I=0,F+=2,(h=E(s/(D[0]+1)))>1&&(D=A(D,h,s),S=A(S,h,s),m=D.length,T=S.length),p=m,d=(C=S.slice(0,m)).length;d<m;C[d++]=0);M=D.slice(),M=[0].concat(M),U=D[0],D[1]>=s/2&&U++;do{if(h=0,(a=t(D,C,m,d))<0){if(R=C[0],m!=d&&(R=R*s+(C[1]||0)),(h=E(R/U))>1)for(h>=s&&(h=s-1),w=(l=A(D,h,s)).length,d=C.length;1==t(l,C,w,d);)h--,e(l,m<w?M:D,w,s),w=l.length,a=1;else 0==h&&(a=h=1),w=(l=D.slice()).length;if(w<d&&(l=[0].concat(l)),e(C,l,d,s),d=C.length,-1==a)for(;t(D,C,m,d)<1;)h++,e(C,m<d?M:D,d,s),d=C.length}else 0===a&&(h++,C=[0]);Q[I++]=h,C[0]?C[d++]=S[p]||0:(C=[S[p]],d=1)}while((p++<T||null!=C[0])&&F--);c=null!=C[0],Q[0]||Q.splice(0,1)}if(s==B){for(I=1,F=Q[0];F>=10;F/=10,I++);L(f,n+(f.e=I+14*g-1)+1,o,c)}else f.e=g,f.r=+c;return f}}(),d=/^(-?)0([xbo])(?=\w[\w.]*$)/i,R=/^([^.]+)\.$/,p=/^\.([^.]+)$/,T=/^-?(Infinity|NaN)$/,U=/^\s*\+(?=[\w.])|^\s+|\s+$/g,i=function(A,t,e,r){var i,n=e?t:t.replace(U,"");if(T.test(n))A.s=isNaN(n)?null:n<0?-1:1;else{if(!e&&(n=n.replace(d,(function(A,t,e){return i="x"==(e=e.toLowerCase())?16:"b"==e?2:8,r&&r!=i?A:t})),r&&(i=r,n=n.replace(R,"$1").replace(p,"0.$1")),t!=n))return new Z(n,i);if(Z.DEBUG)throw Error(a+"Not a"+(r?" base "+r:"")+" number: "+t);A.s=null}A.c=A.e=null},m.absoluteValue=m.abs=function(){var A=new Z(this);return A.s<0&&(A.s=1),A},m.comparedTo=function(A,t){return l(this,new Z(A,t))},m.decimalPlaces=m.dp=function(A,t){var e,r,i,n=this;if(null!=A)return w(A,0,c),null==t?t=S:w(t,0,8),L(new Z(n),A+n.e+1,t);if(!(e=n.c))return null;if(r=14*((i=e.length-1)-u(this.e/14)),i=e[i])for(;i%10==0;i/=10,r--);return r<0&&(r=0),r},m.dividedBy=m.div=function(A,t){return e(this,new Z(A,t),F,S)},m.dividedToIntegerBy=m.idiv=function(A,t){return e(this,new Z(A,t),0,1)},m.exponentiatedBy=m.pow=function(A,t){var e,r,i,n,o,g,B,I,c=this;if((A=new Z(A)).c&&!A.isInteger())throw Error(a+"Exponent not an integer: "+x(A));if(null!=t&&(t=new Z(t)),o=A.e>14,!c.c||!c.c[0]||1==c.c[0]&&!c.e&&1==c.c.length||!A.c||!A.c[0])return I=new Z(Math.pow(+x(c),o?2-f(A):+x(A))),t?I.mod(t):I;if(g=A.s<0,t){if(t.c?!t.c[0]:!t.s)return new Z(NaN);(r=!g&&c.isInteger()&&t.isInteger())&&(c=c.mod(t))}else{if(A.e>9&&(c.e>0||c.e<-1||(0==c.e?c.c[0]>1||o&&c.c[1]>=24e7:c.c[0]<8e13||o&&c.c[0]<=9999975e7)))return n=c.s<0&&f(A)?-0:0,c.e>-1&&(n=1/n),new Z(g?1/n:n);k&&(n=s(k/14+2))}for(o?(e=new Z(.5),g&&(A.s=1),B=f(A)):B=(i=Math.abs(+x(A)))%2,I=new Z(M);;){if(B){if(!(I=I.times(c)).c)break;n?I.c.length>n&&(I.c.length=n):r&&(I=I.mod(t))}if(i){if(0===(i=E(i/2)))break;B=i%2}else if(L(A=A.times(e),A.e+1,1),A.e>14)B=f(A);else{if(0===(i=+x(A)))break;B=i%2}c=c.times(c),n?c.c&&c.c.length>n&&(c.c.length=n):r&&(c=c.mod(t))}return r?I:(g&&(I=M.div(I)),t?I.mod(t):n?L(I,k,S,void 0):I)},m.integerValue=function(A){var t=new Z(this);return null==A?A=S:w(A,0,8),L(t,t.e+1,A)},m.isEqualTo=m.eq=function(A,t){return 0===l(this,new Z(A,t))},m.isFinite=function(){return!!this.c},m.isGreaterThan=m.gt=function(A,t){return l(this,new Z(A,t))>0},m.isGreaterThanOrEqualTo=m.gte=function(A,t){return 1===(t=l(this,new Z(A,t)))||0===t},m.isInteger=function(){return!!this.c&&u(this.e/14)>this.c.length-2},m.isLessThan=m.lt=function(A,t){return l(this,new Z(A,t))<0},m.isLessThanOrEqualTo=m.lte=function(A,t){return-1===(t=l(this,new Z(A,t)))||0===t},m.isNaN=function(){return!this.s},m.isNegative=function(){return this.s<0},m.isPositive=function(){return this.s>0},m.isZero=function(){return!!this.c&&0==this.c[0]},m.minus=function(A,t){var e,r,i,n,o=this,s=o.s;if(t=(A=new Z(A,t)).s,!s||!t)return new Z(NaN);if(s!=t)return A.s=-t,o.plus(A);var E=o.e/14,a=A.e/14,g=o.c,I=A.c;if(!E||!a){if(!g||!I)return g?(A.s=-t,A):new Z(I?o:NaN);if(!g[0]||!I[0])return I[0]?(A.s=-t,A):new Z(g[0]?o:3==S?-0:0)}if(E=u(E),a=u(a),g=g.slice(),s=E-a){for((n=s<0)?(s=-s,i=g):(a=E,i=I),i.reverse(),t=s;t--;i.push(0));i.reverse()}else for(r=(n=(s=g.length)<(t=I.length))?s:t,s=t=0;t<r;t++)if(g[t]!=I[t]){n=g[t]<I[t];break}if(n&&(i=g,g=I,I=i,A.s=-A.s),(t=(r=I.length)-(e=g.length))>0)for(;t--;g[e++]=0);for(t=B-1;r>s;){if(g[--r]<I[r]){for(e=r;e&&!g[--e];g[e]=t);--g[e],g[r]+=B}g[r]-=I[r]}for(;0==g[0];g.splice(0,1),--a);return g[0]?Y(A,g,a):(A.s=3==S?-1:1,A.c=[A.e=0],A)},m.modulo=m.mod=function(A,t){var r,i,n=this;return A=new Z(A,t),!n.c||!A.s||A.c&&!A.c[0]?new Z(NaN):!A.c||n.c&&!n.c[0]?new Z(n):(9==b?(i=A.s,A.s=1,r=e(n,A,0,3),A.s=i,r.s*=i):r=e(n,A,0,b),(A=n.minus(r.times(A))).c[0]||1!=b||(A.s=n.s),A)},m.multipliedBy=m.times=function(A,t){var e,r,i,n,o,s,E,a,g,I,c,h,l,w,f=this,Q=f.c,C=(A=new Z(A,t)).c;if(!(Q&&C&&Q[0]&&C[0]))return!f.s||!A.s||Q&&!Q[0]&&!C||C&&!C[0]&&!Q?A.c=A.e=A.s=null:(A.s*=f.s,Q&&C?(A.c=[0],A.e=0):A.c=A.e=null),A;for(r=u(f.e/14)+u(A.e/14),A.s*=f.s,(E=Q.length)<(I=C.length)&&(l=Q,Q=C,C=l,i=E,E=I,I=i),i=E+I,l=[];i--;l.push(0));for(w=B,1e7,i=I;--i>=0;){for(e=0,c=C[i]%1e7,h=C[i]/1e7|0,n=i+(o=E);n>i;)e=((a=c*(a=Q[--o]%1e7)+(s=h*a+(g=Q[o]/1e7|0)*c)%1e7*1e7+l[n]+e)/w|0)+(s/1e7|0)+h*g,l[n--]=a%w;l[n]=e}return e?++r:l.splice(0,1),Y(A,l,r)},m.negated=function(){var A=new Z(this);return A.s=-A.s||null,A},m.plus=function(A,t){var e,r=this,i=r.s;if(t=(A=new Z(A,t)).s,!i||!t)return new Z(NaN);if(i!=t)return A.s=-t,r.minus(A);var n=r.e/14,o=A.e/14,s=r.c,E=A.c;if(!n||!o){if(!s||!E)return new Z(i/0);if(!s[0]||!E[0])return E[0]?A:new Z(s[0]?r:0*i)}if(n=u(n),o=u(o),s=s.slice(),i=n-o){for(i>0?(o=n,e=E):(i=-i,e=s),e.reverse();i--;e.push(0));e.reverse()}for((i=s.length)-(t=E.length)<0&&(e=E,E=s,s=e,t=i),i=0;t;)i=(s[--t]=s[t]+E[t]+i)/B|0,s[t]=B===s[t]?0:s[t]%B;return i&&(s=[i].concat(s),++o),Y(A,s,o)},m.precision=m.sd=function(A,t){var e,r,i,n=this;if(null!=A&&A!==!!A)return w(A,1,c),null==t?t=S:w(t,0,8),L(new Z(n),A,t);if(!(e=n.c))return null;if(r=14*(i=e.length-1)+1,i=e[i]){for(;i%10==0;i/=10,r--);for(i=e[0];i>=10;i/=10,r++);}return A&&n.e+1>r&&(r=n.e+1),r},m.shiftedBy=function(A){return w(A,-9007199254740991,9007199254740991),this.times("1e"+A)},m.squareRoot=m.sqrt=function(){var A,t,r,i,n,o=this,s=o.c,E=o.s,a=o.e,g=F+4,B=new Z("0.5");if(1!==E||!s||!s[0])return new Z(!E||E<0&&(!s||s[0])?NaN:s?o:1/0);if(0==(E=Math.sqrt(+x(o)))||E==1/0?(((t=h(s)).length+a)%2==0&&(t+="0"),E=Math.sqrt(+t),a=u((a+1)/2)-(a<0||a%2),r=new Z(t=E==1/0?"5e"+a:(t=E.toExponential()).slice(0,t.indexOf("e")+1)+a)):r=new Z(E+""),r.c[0])for((E=(a=r.e)+g)<3&&(E=0);;)if(n=r,r=B.times(n.plus(e(o,n,g,1))),h(n.c).slice(0,E)===(t=h(r.c)).slice(0,E)){if(r.e<a&&--E,"9999"!=(t=t.slice(E-3,E+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(L(r,r.e+F+2,1),A=!r.times(r).eq(o));break}if(!i&&(L(n,n.e+F+2,0),n.times(n).eq(o))){r=n;break}g+=4,E+=4,i=1}return L(r,r.e+F+1,S,A)},m.toExponential=function(A,t){return null!=A&&(w(A,0,c),A++),J(this,A,t,1)},m.toFixed=function(A,t){return null!=A&&(w(A,0,c),A=A+this.e+1),J(this,A,t)},m.toFormat=function(A,t,e){var r,i=this;if(null==e)null!=A&&t&&"object"==typeof t?(e=t,t=null):A&&"object"==typeof A?(e=A,A=t=null):e=v;else if("object"!=typeof e)throw Error(a+"Argument not an object: "+e);if(r=i.toFixed(A,t),i.c){var n,o=r.split("."),s=+e.groupSize,E=+e.secondaryGroupSize,g=e.groupSeparator||"",B=o[0],I=o[1],c=i.s<0,u=c?B.slice(1):B,h=u.length;if(E&&(n=s,s=E,E=n,h-=n),s>0&&h>0){for(n=h%s||s,B=u.substr(0,n);n<h;n+=s)B+=g+u.substr(n,s);E>0&&(B+=g+u.slice(n)),c&&(B="-"+B)}r=I?B+(e.decimalSeparator||"")+((E=+e.fractionGroupSize)?I.replace(new RegExp("\\d{"+E+"}\\B","g"),"$&"+(e.fractionGroupSeparator||"")):I):B}return(e.prefix||"")+r+(e.suffix||"")},m.toFraction=function(A){var t,r,i,n,o,s,E,g,B,c,u,l,w=this,f=w.c;if(null!=A&&(!(E=new Z(A)).isInteger()&&(E.c||1!==E.s)||E.lt(M)))throw Error(a+"Argument "+(E.isInteger()?"out of range: ":"not an integer: ")+x(E));if(!f)return new Z(w);for(t=new Z(M),B=r=new Z(M),i=g=new Z(M),l=h(f),o=t.e=l.length-w.e-1,t.c[0]=I[(s=o%14)<0?14+s:s],A=!A||E.comparedTo(t)>0?o>0?t:B:E,s=y,y=1/0,E=new Z(l),g.c[0]=0;c=e(E,t,0,1),1!=(n=r.plus(c.times(i))).comparedTo(A);)r=i,i=n,B=g.plus(c.times(n=B)),g=n,t=E.minus(c.times(n=t)),E=n;return n=e(A.minus(r),i,0,1),g=g.plus(n.times(B)),r=r.plus(n.times(i)),g.s=B.s=w.s,u=e(B,i,o*=2,S).minus(w).abs().comparedTo(e(g,r,o,S).minus(w).abs())<1?[B,i]:[g,r],y=s,u},m.toNumber=function(){return+x(this)},m.toPrecision=function(A,t){return null!=A&&w(A,1,c),J(this,A,t,2)},m.toString=function(A){var t,e=this,i=e.s,n=e.e;return null===n?i?(t="Infinity",i<0&&(t="-"+t)):t="NaN":(null==A?t=n<=D||n>=N?Q(h(e.c),n):C(h(e.c),n,"0"):10===A?t=C(h((e=L(new Z(e),F+n+1,S)).c),e.e,"0"):(w(A,2,O.length,"Base"),t=r(C(h(e.c),n,"0"),10,A,i,!0)),i<0&&e.c[0]&&(t="-"+t)),t},m.valueOf=m.toJSON=function(){return x(this)},m._isBigNumber=!0,null!=t&&Z.set(t),Z}()).default=n.BigNumber=n,void 0===(r=function(){return n}.call(t,e,t,A))||(A.exports=r)}()},function(A,t,e){"use strict";(function(A){e.d(t,"a",(function(){return a})),e.d(t,"b",(function(){return g}));var r=e(18),i=e.n(r),n=e(19),o=e(11),s=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))},E=function(A,t){var e,r,i,n,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return n={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function s(n){return function(s){return function(n){if(e)throw new TypeError("Generator is already executing.");for(;o;)try{if(e=1,r&&(i=2&n[0]?r.return:n[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,n[1])).done)return i;switch(r=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,r=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(A,o)}catch(A){n=[6,A],r=0}finally{e=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,s])}}},a=function(t,e,r){return s(void 0,void 0,void 0,(function(){var s,a,g,B,I,c;return E(this,(function(E){switch(E.label){case 0:return(s=Object(n.a)(r).nftExplorerBaseURL)?(a=s+"/"+e+"/contracts/"+t,[4,i.a.get(a).then((function(A){return A.data})).catch((function(A){return Object(o.a)("error","could not fetch from "+a+": "+String(A)),null}))]):[2];case 1:return(g=E.sent())?(B=g.payload,I=Number(B.slice(2,3)),c=B.slice(3,3+I).toString(),[2,{contractAddress:t,collectionName:c,data:A.from(B,"hex")}]):[2]}}))}))},g=function(A,t,e,r){return s(void 0,void 0,void 0,(function(){var s,a,g;return E(this,(function(E){switch(E.label){case 0:return(s=Object(n.a)(r).nftExplorerBaseURL)?(a=s+"/"+e+"/contracts/"+A+"/plugin-selector/"+t,[4,i.a.get(a).then((function(A){return A.data})).catch((function(A){return Object(o.a)("error","could not fetch from "+a+": "+String(A)),null}))]):[2];case 1:return(g=E.sent())?[2,g.payload]:[2]}}))}))}}).call(this,e(15).Buffer)},function(A,t,e){"use strict";for(var r="qpzry9x8gf2tvdw0s3jn54khce6mua7l",i={},n=0;n<r.length;n++){var o=r.charAt(n);if(void 0!==i[o])throw new TypeError(o+" is ambiguous");i[o]=n}function s(A){var t=A>>25;return(33554431&A)<<5^996825010&-(t>>0&1)^642813549&-(t>>1&1)^513874426&-(t>>2&1)^1027748829&-(t>>3&1)^705979059&-(t>>4&1)}function E(A){for(var t=1,e=0;e<A.length;++e){var r=A.charCodeAt(e);if(r<33||r>126)return"Invalid prefix ("+A+")";t=s(t)^r>>5}for(t=s(t),e=0;e<A.length;++e){var i=A.charCodeAt(e);t=s(t)^31&i}return t}function a(A,t){if(t=t||90,A.length<8)return A+" too short";if(A.length>t)return"Exceeds length limit";var e=A.toLowerCase(),r=A.toUpperCase();if(A!==e&&A!==r)return"Mixed-case string "+A;var n=(A=e).lastIndexOf("1");if(-1===n)return"No separator character for "+A;if(0===n)return"Missing prefix for "+A;var o=A.slice(0,n),a=A.slice(n+1);if(a.length<6)return"Data too short";var g=E(o);if("string"==typeof g)return g;for(var B=[],I=0;I<a.length;++I){var c=a.charAt(I),u=i[c];if(void 0===u)return"Unknown character "+c;g=s(g)^u,I+6>=a.length||B.push(u)}return 1!==g?"Invalid checksum for "+A:{prefix:o,words:B}}function g(A,t,e,r){for(var i=0,n=0,o=(1<<e)-1,s=[],E=0;E<A.length;++E)for(i=i<<t|A[E],n+=t;n>=e;)n-=e,s.push(i>>n&o);if(r)n>0&&s.push(i<<e-n&o);else{if(n>=t)return"Excess padding";if(i<<e-n&o)return"Non-zero padding"}return s}A.exports={decodeUnsafe:function(){var A=a.apply(null,arguments);if("object"==typeof A)return A},decode:function(A){var t=a.apply(null,arguments);if("object"==typeof t)return t;throw new Error(t)},encode:function(A,t,e){if(e=e||90,A.length+7+t.length>e)throw new TypeError("Exceeds length limit");var i=E(A=A.toLowerCase());if("string"==typeof i)throw new Error(i);for(var n=A+"1",o=0;o<t.length;++o){var a=t[o];if(a>>5!=0)throw new Error("Non 5-bit word");i=s(i)^a,n+=r.charAt(a)}for(o=0;o<6;++o)i=s(i);for(i^=1,o=0;o<6;++o){n+=r.charAt(i>>5*(5-o)&31)}return n},toWordsUnsafe:function(A){var t=g(A,8,5,!0);if(Array.isArray(t))return t},toWords:function(A){var t=g(A,8,5,!0);if(Array.isArray(t))return t;throw new Error(t)},fromWordsUnsafe:function(A){var t=g(A,5,8,!1);if(Array.isArray(t))return t},fromWords:function(A){var t=g(A,5,8,!1);if(Array.isArray(t))return t;throw new Error(t)}}},,function(A,t,e){"use strict";A.exports=function(A,t){return function(){for(var e=new Array(arguments.length),r=0;r<e.length;r++)e[r]=arguments[r];return A.apply(t,e)}}},function(A,t,e){"use strict";var r=e(7);function i(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}A.exports=function(A,t,e){if(!t)return A;var n;if(e)n=e(t);else if(r.isURLSearchParams(t))n=t.toString();else{var o=[];r.forEach(t,(function(A,t){null!=A&&(r.isArray(A)?t+="[]":A=[A],r.forEach(A,(function(A){r.isDate(A)?A=A.toISOString():r.isObject(A)&&(A=JSON.stringify(A)),o.push(i(t)+"="+i(A))})))})),n=o.join("&")}if(n){var s=A.indexOf("#");-1!==s&&(A=A.slice(0,s)),A+=(-1===A.indexOf("?")?"?":"&")+n}return A}},function(A,t,e){"use strict";A.exports=function(A,t,e,r,i){return A.config=t,e&&(A.code=e),A.request=r,A.response=i,A.isAxiosError=!0,A.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},A}},function(A,t,e){"use strict";var r=e(7),i=e(67),n=e(68),o=e(33),s=e(69),E=e(72),a=e(73),g=e(36),B=e(22),I=e(23);A.exports=function(A){return new Promise((function(t,e){var c,u=A.data,h=A.headers,l=A.responseType;function w(){A.cancelToken&&A.cancelToken.unsubscribe(c),A.signal&&A.signal.removeEventListener("abort",c)}r.isFormData(u)&&delete h["Content-Type"];var f=new XMLHttpRequest;if(A.auth){var Q=A.auth.username||"",C=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";h.Authorization="Basic "+btoa(Q+":"+C)}var d=s(A.baseURL,A.url);function R(){if(f){var r="getAllResponseHeaders"in f?E(f.getAllResponseHeaders()):null,n={data:l&&"text"!==l&&"json"!==l?f.response:f.responseText,status:f.status,statusText:f.statusText,headers:r,config:A,request:f};i((function(A){t(A),w()}),(function(A){e(A),w()}),n),f=null}}if(f.open(A.method.toUpperCase(),o(d,A.params,A.paramsSerializer),!0),f.timeout=A.timeout,"onloadend"in f?f.onloadend=R:f.onreadystatechange=function(){f&&4===f.readyState&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))&&setTimeout(R)},f.onabort=function(){f&&(e(g("Request aborted",A,"ECONNABORTED",f)),f=null)},f.onerror=function(){e(g("Network Error",A,null,f)),f=null},f.ontimeout=function(){var t=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",r=A.transitional||B.transitional;A.timeoutErrorMessage&&(t=A.timeoutErrorMessage),e(g(t,A,r.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",f)),f=null},r.isStandardBrowserEnv()){var p=(A.withCredentials||a(d))&&A.xsrfCookieName?n.read(A.xsrfCookieName):void 0;p&&(h[A.xsrfHeaderName]=p)}"setRequestHeader"in f&&r.forEach(h,(function(A,t){void 0===u&&"content-type"===t.toLowerCase()?delete h[t]:f.setRequestHeader(t,A)})),r.isUndefined(A.withCredentials)||(f.withCredentials=!!A.withCredentials),l&&"json"!==l&&(f.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&f.addEventListener("progress",A.onDownloadProgress),"function"==typeof A.onUploadProgress&&f.upload&&f.upload.addEventListener("progress",A.onUploadProgress),(A.cancelToken||A.signal)&&(c=function(A){f&&(e(!A||A&&A.type?new I("canceled"):A),f.abort(),f=null)},A.cancelToken&&A.cancelToken.subscribe(c),A.signal&&(A.signal.aborted?c():A.signal.addEventListener("abort",c))),u||(u=null),f.send(u)}))}},function(A,t,e){"use strict";var r=e(34);A.exports=function(A,t,e,i,n){var o=new Error(A);return r(o,t,e,i,n)}},function(A,t,e){"use strict";A.exports=function(A){return!(!A||!A.__CANCEL__)}},function(A,t,e){"use strict";var r=e(7);A.exports=function(A,t){t=t||{};var e={};function i(A,t){return r.isPlainObject(A)&&r.isPlainObject(t)?r.merge(A,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function n(e){return r.isUndefined(t[e])?r.isUndefined(A[e])?void 0:i(void 0,A[e]):i(A[e],t[e])}function o(A){if(!r.isUndefined(t[A]))return i(void 0,t[A])}function s(e){return r.isUndefined(t[e])?r.isUndefined(A[e])?void 0:i(void 0,A[e]):i(void 0,t[e])}function E(e){return e in t?i(A[e],t[e]):e in A?i(void 0,A[e]):void 0}var a={url:o,method:o,data:o,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:E};return r.forEach(Object.keys(A).concat(Object.keys(t)),(function(A){var t=a[A]||n,i=t(A);r.isUndefined(i)&&t!==E||(e[A]=i)})),e}},function(A,t){A.exports={version:"0.24.0"}},function(A,t,e){"use strict";var r=e(10).rotr32;function i(A,t,e){return A&t^~A&e}function n(A,t,e){return A&t^A&e^t&e}function o(A,t,e){return A^t^e}t.ft_1=function(A,t,e,r){return 0===A?i(t,e,r):1===A||3===A?o(t,e,r):2===A?n(t,e,r):void 0},t.ch32=i,t.maj32=n,t.p32=o,t.s0_256=function(A){return r(A,2)^r(A,13)^r(A,22)},t.s1_256=function(A){return r(A,6)^r(A,11)^r(A,25)},t.g0_256=function(A){return r(A,7)^r(A,18)^A>>>3},t.g1_256=function(A){return r(A,17)^r(A,19)^A>>>10}},function(A,t,e){"use strict";var r=e(10),i=e(17),n=e(40),o=e(16),s=r.sum32,E=r.sum32_4,a=r.sum32_5,g=n.ch32,B=n.maj32,I=n.s0_256,c=n.s1_256,u=n.g0_256,h=n.g1_256,l=i.BlockHash,w=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function f(){if(!(this instanceof f))return new f;l.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=w,this.W=new Array(64)}r.inherits(f,l),A.exports=f,f.blockSize=512,f.outSize=256,f.hmacStrength=192,f.padLength=64,f.prototype._update=function(A,t){for(var e=this.W,r=0;r<16;r++)e[r]=A[t+r];for(;r<e.length;r++)e[r]=E(h(e[r-2]),e[r-7],u(e[r-15]),e[r-16]);var i=this.h[0],n=this.h[1],l=this.h[2],w=this.h[3],f=this.h[4],Q=this.h[5],C=this.h[6],d=this.h[7];for(o(this.k.length===e.length),r=0;r<e.length;r++){var R=a(d,c(f),g(f,Q,C),this.k[r],e[r]),p=s(I(i),B(i,n,l));d=C,C=Q,Q=f,f=s(w,R),w=l,l=n,n=i,i=s(R,p)}this.h[0]=s(this.h[0],i),this.h[1]=s(this.h[1],n),this.h[2]=s(this.h[2],l),this.h[3]=s(this.h[3],w),this.h[4]=s(this.h[4],f),this.h[5]=s(this.h[5],Q),this.h[6]=s(this.h[6],C),this.h[7]=s(this.h[7],d)},f.prototype._digest=function(A){return"hex"===A?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},function(A,t,e){"use strict";var r=e(10),i=e(17),n=e(16),o=r.rotr64_hi,s=r.rotr64_lo,E=r.shr64_hi,a=r.shr64_lo,g=r.sum64,B=r.sum64_hi,I=r.sum64_lo,c=r.sum64_4_hi,u=r.sum64_4_lo,h=r.sum64_5_hi,l=r.sum64_5_lo,w=i.BlockHash,f=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function Q(){if(!(this instanceof Q))return new Q;w.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=f,this.W=new Array(160)}function C(A,t,e,r,i){var n=A&e^~A&i;return n<0&&(n+=4294967296),n}function d(A,t,e,r,i,n){var o=t&r^~t&n;return o<0&&(o+=4294967296),o}function R(A,t,e,r,i){var n=A&e^A&i^e&i;return n<0&&(n+=4294967296),n}function p(A,t,e,r,i,n){var o=t&r^t&n^r&n;return o<0&&(o+=4294967296),o}function T(A,t){var e=o(A,t,28)^o(t,A,2)^o(t,A,7);return e<0&&(e+=4294967296),e}function U(A,t){var e=s(A,t,28)^s(t,A,2)^s(t,A,7);return e<0&&(e+=4294967296),e}function m(A,t){var e=o(A,t,14)^o(A,t,18)^o(t,A,9);return e<0&&(e+=4294967296),e}function M(A,t){var e=s(A,t,14)^s(A,t,18)^s(t,A,9);return e<0&&(e+=4294967296),e}function F(A,t){var e=o(A,t,1)^o(A,t,8)^E(A,t,7);return e<0&&(e+=4294967296),e}function S(A,t){var e=s(A,t,1)^s(A,t,8)^a(A,t,7);return e<0&&(e+=4294967296),e}function D(A,t){var e=o(A,t,19)^o(t,A,29)^E(A,t,6);return e<0&&(e+=4294967296),e}function N(A,t){var e=s(A,t,19)^s(t,A,29)^a(A,t,6);return e<0&&(e+=4294967296),e}r.inherits(Q,w),A.exports=Q,Q.blockSize=1024,Q.outSize=512,Q.hmacStrength=192,Q.padLength=128,Q.prototype._prepareBlock=function(A,t){for(var e=this.W,r=0;r<32;r++)e[r]=A[t+r];for(;r<e.length;r+=2){var i=D(e[r-4],e[r-3]),n=N(e[r-4],e[r-3]),o=e[r-14],s=e[r-13],E=F(e[r-30],e[r-29]),a=S(e[r-30],e[r-29]),g=e[r-32],B=e[r-31];e[r]=c(i,n,o,s,E,a,g,B),e[r+1]=u(i,n,o,s,E,a,g,B)}},Q.prototype._update=function(A,t){this._prepareBlock(A,t);var e=this.W,r=this.h[0],i=this.h[1],o=this.h[2],s=this.h[3],E=this.h[4],a=this.h[5],c=this.h[6],u=this.h[7],w=this.h[8],f=this.h[9],Q=this.h[10],F=this.h[11],S=this.h[12],D=this.h[13],N=this.h[14],G=this.h[15];n(this.k.length===e.length);for(var y=0;y<e.length;y+=2){var V=N,b=G,k=m(w,f),v=M(w,f),O=C(w,f,Q,F,S),Z=d(w,f,Q,F,S,D),J=this.k[y],P=this.k[y+1],Y=e[y],L=e[y+1],x=h(V,b,k,v,O,Z,J,P,Y,L),H=l(V,b,k,v,O,Z,J,P,Y,L);V=T(r,i),b=U(r,i),k=R(r,i,o,s,E),v=p(r,i,o,s,E,a);var W=B(V,b,k,v),j=I(V,b,k,v);N=S,G=D,S=Q,D=F,Q=w,F=f,w=B(c,u,x,H),f=I(u,u,x,H),c=E,u=a,E=o,a=s,o=r,s=i,r=B(x,H,W,j),i=I(x,H,W,j)}g(this.h,0,r,i),g(this.h,2,o,s),g(this.h,4,E,a),g(this.h,6,c,u),g(this.h,8,w,f),g(this.h,10,Q,F),g(this.h,12,S,D),g(this.h,14,N,G)},Q.prototype._digest=function(A){return"hex"===A?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},function(A,t,e){"use strict";(function(A){e.d(t,"a",(function(){return g}));var r=e(20),i=e(44),n=e(27),o=e(5);const s=A=>A.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"");function E(t,e,i,o){const E=function(t,e){const r=A.alloc(t.length);for(let A=0;A<t.length;A++)r[A]=t[A]^e[A%e.length];return r}(t,i),a=A.from("0000000000000000000000000000000000000000000000000000000000000000","hex"),g={version:"U2F_V2",keyHandle:s(E.toString("base64")),challenge:s(a.toString("base64")),appId:location.origin};return Object(n.a)("apdu","=> "+t.toString("hex")),Object(r.sign)(g,e/1e3).then(t=>{const{signatureData:e}=t;if("string"==typeof e){const t=A.from((r=e).replace(/-/g,"+").replace(/_/g,"/")+"==".substring(0,3*r.length%4),"base64");let i;return i=o?t.slice(5):t,Object(n.a)("apdu","<= "+i.toString("hex")),i}throw t;var r})}let a=[];class g extends i.a{static async open(A,t=5e3){return new g}constructor(){super(),this.scrambleKey=void 0,this.unwrap=!0,a.push(this)}async exchange(A){try{return await E(A,this.exchangeTimeout,this.scrambleKey,this.unwrap)}catch(A){throw"object"==typeof A.metaData?(5===A.metaData.code&&(a.forEach(A=>A.emit("disconnect")),a=[]),function(A,t,e){const r=new o.b(t,e);return r.originalError=A,r}(A,"Failed to sign with Ledger device: U2F "+A.metaData.type,"U2F_"+A.metaData.code)):A}}setScrambleKey(t){this.scrambleKey=A.from(t,"ascii")}setUnwrap(A){this.unwrap=A}close(){return Promise.resolve()}}g.isSupported=r.isSupported,g.list=()=>Object(r.isSupported)().then(A=>A?[null]:[]),g.listen=A=>{let t=!1;return Object(r.isSupported)().then(e=>{t||(e?(A.next({type:"add",descriptor:null}),A.complete()):A.error(new o.b("U2F browser support is needed for Ledger. Please use Chrome, Opera or Firefox with a U2F extension. Also make sure you're on an HTTPS connection","U2FNotSupported")))}),{unsubscribe:()=>{t=!0}}}}).call(this,e(15).Buffer)},function(A,t,e){"use strict";(function(A){e.d(t,"a",(function(){return o}));var r=e(45),i=e.n(r),n=e(5);class o{constructor(){this.exchangeTimeout=3e4,this.unresponsiveTimeout=15e3,this.deviceModel=null,this._events=new i.a,this.send=async(t,e,r,i,o=A.alloc(0),s=[n.a.OK])=>{if(o.length>=256)throw new n.b("data.length exceed 256 bytes limit. Got: "+o.length,"DataLengthTooBig");const E=await this.exchange(A.concat([A.from([t,e,r,i]),A.from([o.length]),o])),a=E.readUInt16BE(E.length-2);if(!s.some(A=>A===a))throw new n.d(a);return E},this.exchangeBusyPromise=void 0,this.exchangeAtomicImpl=async A=>{if(this.exchangeBusyPromise)throw new n.c("An action was already pending on the Ledger device. Please deny or reconnect.");let t;const e=new Promise(A=>{t=A});this.exchangeBusyPromise=e;let r=!1;const i=setTimeout(()=>{r=!0,this.emit("unresponsive")},this.unresponsiveTimeout);try{const e=await A();return r&&this.emit("responsive"),e}finally{clearTimeout(i),t&&t(),this.exchangeBusyPromise=null}},this._appAPIlock=null}exchange(A){throw new Error("exchange not implemented")}setScrambleKey(A){}close(){return Promise.resolve()}on(A,t){this._events.on(A,t)}off(A,t){this._events.removeListener(A,t)}emit(A,...t){this._events.emit(A,...t)}setDebugMode(){console.warn("setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.")}setExchangeTimeout(A){this.exchangeTimeout=A}setExchangeUnresponsiveTimeout(A){this.unresponsiveTimeout=A}static create(A=3e3,t){return new Promise((e,r)=>{let i=!1;const o=this.listen({next:t=>{i=!0,o&&o.unsubscribe(),s&&clearTimeout(s),this.open(t.descriptor,A).then(e,r)},error:A=>{s&&clearTimeout(s),r(A)},complete:()=>{s&&clearTimeout(s),i||r(new n.b(this.ErrorMessage_NoDeviceFound,"NoDeviceFound"))}}),s=t?setTimeout(()=>{o.unsubscribe(),r(new n.b(this.ErrorMessage_ListenTimeout,"ListenTimeout"))},t):null})}decorateAppAPIMethods(A,t,e){for(let r of t)A[r]=this.decorateAppAPIMethod(r,A[r],A,e)}decorateAppAPIMethod(A,t,e,r){return async(...i)=>{const{_appAPIlock:o}=this;if(o)return Promise.reject(new n.b("Ledger Device is busy (lock "+o+")","TransportLocked"));try{return this._appAPIlock=A,this.setScrambleKey(r),await t.apply(e,i)}finally{this._appAPIlock=null}}}}o.isSupported=void 0,o.list=void 0,o.listen=void 0,o.open=void 0,o.ErrorMessage_ListenTimeout="No Ledger device found (timeout)",o.ErrorMessage_NoDeviceFound="No Ledger device found"}).call(this,e(15).Buffer)},function(A,t,e){"use strict";var r,i="object"==typeof Reflect?Reflect:null,n=i&&"function"==typeof i.apply?i.apply:function(A,t,e){return Function.prototype.apply.call(A,t,e)};r=i&&"function"==typeof i.ownKeys?i.ownKeys:Object.getOwnPropertySymbols?function(A){return Object.getOwnPropertyNames(A).concat(Object.getOwnPropertySymbols(A))}:function(A){return Object.getOwnPropertyNames(A)};var o=Number.isNaN||function(A){return A!=A};function s(){s.init.call(this)}A.exports=s,A.exports.once=function(A,t){return new Promise((function(e,r){function i(e){A.removeListener(t,n),r(e)}function n(){"function"==typeof A.removeListener&&A.removeListener("error",i),e([].slice.call(arguments))}w(A,t,n,{once:!0}),"error"!==t&&function(A,t,e){"function"==typeof A.on&&w(A,"error",t,e)}(A,i,{once:!0})}))},s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var E=10;function a(A){if("function"!=typeof A)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof A)}function g(A){return void 0===A._maxListeners?s.defaultMaxListeners:A._maxListeners}function B(A,t,e,r){var i,n,o,s;if(a(e),void 0===(n=A._events)?(n=A._events=Object.create(null),A._eventsCount=0):(void 0!==n.newListener&&(A.emit("newListener",t,e.listener?e.listener:e),n=A._events),o=n[t]),void 0===o)o=n[t]=e,++A._eventsCount;else if("function"==typeof o?o=n[t]=r?[e,o]:[o,e]:r?o.unshift(e):o.push(e),(i=g(A))>0&&o.length>i&&!o.warned){o.warned=!0;var E=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");E.name="MaxListenersExceededWarning",E.emitter=A,E.type=t,E.count=o.length,s=E,console&&console.warn&&console.warn(s)}return A}function I(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function c(A,t,e){var r={fired:!1,wrapFn:void 0,target:A,type:t,listener:e},i=I.bind(r);return i.listener=e,r.wrapFn=i,i}function u(A,t,e){var r=A._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:"function"==typeof i?e?[i.listener||i]:[i]:e?function(A){for(var t=new Array(A.length),e=0;e<t.length;++e)t[e]=A[e].listener||A[e];return t}(i):l(i,i.length)}function h(A){var t=this._events;if(void 0!==t){var e=t[A];if("function"==typeof e)return 1;if(void 0!==e)return e.length}return 0}function l(A,t){for(var e=new Array(t),r=0;r<t;++r)e[r]=A[r];return e}function w(A,t,e,r){if("function"==typeof A.on)r.once?A.once(t,e):A.on(t,e);else{if("function"!=typeof A.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof A);A.addEventListener(t,(function i(n){r.once&&A.removeEventListener(t,i),e(n)}))}}Object.defineProperty(s,"defaultMaxListeners",{enumerable:!0,get:function(){return E},set:function(A){if("number"!=typeof A||A<0||o(A))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+A+".");E=A}}),s.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(A){if("number"!=typeof A||A<0||o(A))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+A+".");return this._maxListeners=A,this},s.prototype.getMaxListeners=function(){return g(this)},s.prototype.emit=function(A){for(var t=[],e=1;e<arguments.length;e++)t.push(arguments[e]);var r="error"===A,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var s=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw s.context=o,s}var E=i[A];if(void 0===E)return!1;if("function"==typeof E)n(E,this,t);else{var a=E.length,g=l(E,a);for(e=0;e<a;++e)n(g[e],this,t)}return!0},s.prototype.addListener=function(A,t){return B(this,A,t,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(A,t){return B(this,A,t,!0)},s.prototype.once=function(A,t){return a(t),this.on(A,c(this,A,t)),this},s.prototype.prependOnceListener=function(A,t){return a(t),this.prependListener(A,c(this,A,t)),this},s.prototype.removeListener=function(A,t){var e,r,i,n,o;if(a(t),void 0===(r=this._events))return this;if(void 0===(e=r[A]))return this;if(e===t||e.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[A],r.removeListener&&this.emit("removeListener",A,e.listener||t));else if("function"!=typeof e){for(i=-1,n=e.length-1;n>=0;n--)if(e[n]===t||e[n].listener===t){o=e[n].listener,i=n;break}if(i<0)return this;0===i?e.shift():function(A,t){for(;t+1<A.length;t++)A[t]=A[t+1];A.pop()}(e,i),1===e.length&&(r[A]=e[0]),void 0!==r.removeListener&&this.emit("removeListener",A,o||t)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(A){var t,e,r;if(void 0===(e=this._events))return this;if(void 0===e.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==e[A]&&(0==--this._eventsCount?this._events=Object.create(null):delete e[A]),this;if(0===arguments.length){var i,n=Object.keys(e);for(r=0;r<n.length;++r)"removeListener"!==(i=n[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=e[A]))this.removeListener(A,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(A,t[r]);return this},s.prototype.listeners=function(A){return u(this,A,!0)},s.prototype.rawListeners=function(A){return u(this,A,!1)},s.listenerCount=function(A,t){return"function"==typeof A.listenerCount?A.listenerCount(t):h.call(A,t)},s.prototype.listenerCount=h,s.prototype.eventNames=function(){return this._eventsCount>0?r(this._events):[]}},function(A,t,e){"use strict";(function(A){var r=e(6),i=e(11),n=e(53),o=e(28),s=e(21),E=e(47),a=e(49),g=e(29),B=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))},I=function(A,t){var e,r,i,n,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return n={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function s(n){return function(s){return function(n){if(e)throw new TypeError("Generator is already executing.");for(;o;)try{if(e=1,r&&(i=2&n[0]?r.return:n[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,n[1])).done)return i;switch(r=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,r=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(A,o)}catch(A){n=[6,A],r=0}finally{e=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,s])}}},c=function(A){var t="function"==typeof Symbol&&Symbol.iterator,e=t&&A[t],r=0;if(e)return e.call(A);if(A&&"number"==typeof A.length)return{next:function(){return A&&r>=A.length&&(A=void 0),{value:A&&A[r++],done:!A}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},u={eth:1,erc20:2,erc721:3,erc20mintable:4,erc721mintable:5};function h(t){return A.from(t.startsWith("0x")?t.slice(2):t,"hex")}function l(A){return A?h(A):null}var w=function(){function t(A,t,e){void 0===t&&(t="w0w"),void 0===e&&(e={}),this.transport=A,this.loadConfig=e,A.decorateAppAPIMethods(this,["getAddress","provideERC20TokenInformation","signTransaction","signPersonalMessage","getAppConfiguration","signEIP712HashedMessage","starkGetPublicKey","starkSignOrder","starkSignOrder_v2","starkSignTransfer","starkSignTransfer_v2","starkProvideQuantum","starkProvideQuantum_v2","starkUnsafeSign","eth2GetPublicKey","eth2SetWithdrawalIndex","setExternalPlugin","setPlugin"],t)}return t.prototype.setLoadConfig=function(A){this.loadConfig=A},t.prototype.getAddress=function(t,e,i){var n=Object(r.b)(t),o=A.alloc(1+4*n.length);return o[0]=n.length,n.forEach((function(A,t){o.writeUInt32BE(A,1+4*t)})),this.transport.send(224,2,e?1:0,i?1:0,o).then((function(A){var t=A[0],e=A[1+t];return{publicKey:A.slice(1,1+t).toString("hex"),address:"0x"+A.slice(1+t+1,1+t+1+e).toString("ascii"),chainCode:i?A.slice(1+t+1+e,1+t+1+e+32).toString("hex"):void 0}}))},t.prototype.provideERC20TokenInformation=function(A){var t=A.data;return f(this.transport,t)},t.prototype.signTransaction=function(t,e){return B(this,void 0,void 0,(function(){var u,h,l,w,d,R,p,T,U,m,M,F,S,D,N,G,y,V,b,k,v,O,Z,J,P,Y,L,x,H,W,j,K,q,z,X,_=this;return I(this,(function($){switch($.label){case 0:for(u=Object(r.b)(t),h=0,l=A.from(e,"hex"),w=[1,2].includes(l[0])?l[0]:null,d=null===w?l:l.slice(1,e.length),R=[],T=s.a.utils.RLP.decode(d).map((function(t){return A.from(t.slice(2),"hex")})),U=0,m=new o.BigNumber(0),M=0,F=s.a.utils.RLP.decode(d),S=2===w?{data:F[7],to:F[5],chainId:T[0]}:1===w?{data:F[6],to:F[4],chainId:T[0]}:{data:F[5],to:F[3],chainId:T.length>6?T[6]:A.from("0x01","hex")},null===w&&T.length>6&&(D=A.from(s.a.utils.RLP.encode(T.slice(-3)).slice(2),"hex"),U=l.length-(D.length-1),D[0]>247&&(U++,N=D[0]-247,U+=N-1)),(G=S.chainId)&&(m=new o.BigNumber(G.toString("hex"),16),y=A.alloc(4),G.length>4?G.copy(y):G.copy(y,4-G.length),M=y.readUInt32BE(0)),V=function(){var t=0===h?149-4*u.length:150,e=h+t>l.length?l.length-h:t;0!=U&&h+e>=U&&(e=l.length-h);var r=A.alloc(0===h?1+4*u.length+e:e);0===h?(r[0]=u.length,u.forEach((function(A,t){r.writeUInt32BE(A,1+4*t)})),l.copy(r,1+4*u.length,h,h+e)):l.copy(r,0,h,h+e),R.push(r),h+=e};h!==l.length;)V();return b=function(A){return B(_,void 0,void 0,(function(){var t,e;return I(this,(function(r){switch(r.label){case 0:return[4,Object(g.a)(A,M,this.loadConfig)];case 1:return(t=r.sent())?(Object(i.a)("ethereum","loading nft info for "+t.contractAddress+" ("+t.collectionName+")"),[4,(n=this.transport,o=t.data,n.send(224,20,0,0,o).then((function(){return!0}),(function(A){if(A&&27264===A.statusCode)return!1;if(A&&27904===A.statusCode)return!1;throw A})))]):[3,3];case 2:return r.sent(),[3,5];case 3:return(e=Object(E.a)(A,M))?(Object(i.a)("ethereum","loading erc20token info for "+e.contractAddress+" ("+e.ticker+")"),[4,f(this.transport,e.data)]):[3,5];case 4:r.sent(),r.label=5;case 5:return[2]}var n,o}))}))},S.data.length>=10?(k=S.data.substring(0,10),[4,Object(g.b)(S.to,k,M,this.loadConfig)]):[3,18];case 1:return(v=$.sent())?[4,C(this.transport,v)]:[3,3];case 2:return $.sent(),[3,16];case 3:return[4,Object(a.a)(S.to,k,M,this.loadConfig)];case 4:return(O=$.sent())?(Z=O.plugin,J=O.payload,P=O.signature,Y=O.erc20OfInterest,L=O.abi,Z?(Object(i.a)("ethereum","loading plugin for "+k),[4,Q(this.transport,J,P)]):[3,6]):[3,15];case 5:$.sent(),$.label=6;case 6:if(!(Y&&Y.length&&L))return[3,14];x=new s.a.utils.Interface(L),H=x.parseTransaction(S).args,$.label=7;case 7:$.trys.push([7,12,13,14]),W=c(Y),j=W.next(),$.label=8;case 8:return j.done?[3,11]:(t=j.value,K=t.split(".").reduce((function(A,t){return"-1"===t&&Array.isArray(A)?A[A.length-1]:A[t]}),H),[4,b(K)]);case 9:$.sent(),$.label=10;case 10:return j=W.next(),[3,8];case 11:return[3,14];case 12:return q=$.sent(),z={error:q},[3,14];case 13:try{j&&!j.done&&(X=W.return)&&X.call(W)}finally{if(z)throw z.error}return[7];case 14:return[3,16];case 15:Object(i.a)("ethereum","no infos for selector "+k),$.label=16;case 16:return[4,b(S.to)];case 17:$.sent(),$.label=18;case 18:return[2,Object(r.a)(R,(function(A,t){return _.transport.send(224,4,0===t?0:128,0,A).then((function(A){p=A}))})).then((function(){var A=p.slice(0,1)[0],t="";if(m.times(2).plus(35).plus(1).isGreaterThan(255)){var e=(2*M+35)%256,r=Math.abs(A-e);t=null!=w?r%2==1?"00":"01":m.times(2).plus(35).plus(r).toString(16)}else t=A.toString(16);return t.length%2==1&&(t="0"+t),{v:t,r:p.slice(1,33).toString("hex"),s:p.slice(33,65).toString("hex")}}),(function(A){throw function(A){return A&&27264===A.statusCode?new n.a("Please enable Blind signing or Contract data in the Ethereum app Settings"):A}(A)}))]}}))}))},t.prototype.getAppConfiguration=function(){return this.transport.send(224,6,0,0).then((function(A){return{arbitraryDataEnabled:1&A[0],erc20ProvisioningNecessary:2&A[0],starkEnabled:4&A[0],starkv2Supported:8&A[0],version:A[1]+"."+A[2]+"."+A[3]}}))},t.prototype.signPersonalMessage=function(t,e){for(var i,n=this,o=Object(r.b)(t),s=0,E=A.from(e,"hex"),a=[],g=function(){var t=0===s?149-4*o.length-4:150,e=s+t>E.length?E.length-s:t,r=A.alloc(0===s?1+4*o.length+4+e:e);0===s?(r[0]=o.length,o.forEach((function(A,t){r.writeUInt32BE(A,1+4*t)})),r.writeUInt32BE(E.length,1+4*o.length),E.copy(r,1+4*o.length+4,s,s+e)):E.copy(r,0,s,s+e),a.push(r),s+=e};s!==E.length;)g();return Object(r.a)(a,(function(A,t){return n.transport.send(224,8,0===t?0:128,0,A).then((function(A){i=A}))})).then((function(){return{v:i[0],r:i.slice(1,33).toString("hex"),s:i.slice(33,65).toString("hex")}}))},t.prototype.signEIP712HashedMessage=function(t,e,i){var n=h(e),o=h(i),s=Object(r.b)(t),E=A.alloc(1+4*s.length+32+32,0),a=0;return E[0]=s.length,s.forEach((function(A,t){E.writeUInt32BE(A,1+4*t)})),a=1+4*s.length,n.copy(E,a),a+=32,o.copy(E,a),this.transport.send(224,12,0,0,E).then((function(A){return{v:A[0],r:A.slice(1,33).toString("hex"),s:A.slice(33,65).toString("hex")}}))},t.prototype.starkGetPublicKey=function(t,e){var i=Object(r.b)(t),n=A.alloc(1+4*i.length);return n[0]=i.length,i.forEach((function(A,t){n.writeUInt32BE(A,1+4*t)})),this.transport.send(240,2,e?1:0,0,n).then((function(A){return A.slice(0,A.length-2)}))},t.prototype.starkSignOrder=function(t,e,i,n,o,s,E,a,g,B,I){var c=l(e),u=l(n),h=Object(r.b)(t),w=A.alloc(1+4*h.length+20+32+20+32+4+4+8+8+4+4,0),f=0;return w[0]=h.length,h.forEach((function(A,t){w.writeUInt32BE(A,1+4*t)})),f=1+4*h.length,c&&c.copy(w,f),f+=20,A.from(i.toString(16).padStart(64,"0"),"hex").copy(w,f),f+=32,u&&u.copy(w,f),f+=20,A.from(o.toString(16).padStart(64,"0"),"hex").copy(w,f),f+=32,w.writeUInt32BE(s,f),f+=4,w.writeUInt32BE(E,f),f+=4,A.from(a.toString(16).padStart(16,"0"),"hex").copy(w,f),f+=8,A.from(g.toString(16).padStart(16,"0"),"hex").copy(w,f),f+=8,w.writeUInt32BE(B,f),f+=4,w.writeUInt32BE(I,f),this.transport.send(240,4,1,0,w).then((function(A){return{r:A.slice(1,33).toString("hex"),s:A.slice(33,65).toString("hex")}}))},t.prototype.starkSignOrder_v2=function(t,e,i,n,o,s,E,a,g,B,I,c,h,w,f){var Q=l(e),C=l(s);if(!(i in u))throw new Error("eth.starkSignOrderv2 invalid source quantization type="+i);if(!(E in u))throw new Error("eth.starkSignOrderv2 invalid destination quantization type="+E);var d=Object(r.b)(t),R=A.alloc(1+4*d.length+1+20+32+32+1+20+32+32+4+4+8+8+4+4,0),p=0;return R[0]=d.length,d.forEach((function(A,t){R.writeUInt32BE(A,1+4*t)})),p=1+4*d.length,R[p]=u[i],p++,Q&&Q.copy(R,p),p+=20,n&&A.from(n.toString(16).padStart(64,"0"),"hex").copy(R,p),p+=32,o&&A.from(o.toString(16).padStart(64,"0"),"hex").copy(R,p),R[p+=32]=u[E],p++,C&&C.copy(R,p),p+=20,a&&A.from(a.toString(16).padStart(64,"0"),"hex").copy(R,p),p+=32,g&&A.from(g.toString(16).padStart(64,"0"),"hex").copy(R,p),p+=32,R.writeUInt32BE(B,p),p+=4,R.writeUInt32BE(I,p),p+=4,A.from(c.toString(16).padStart(16,"0"),"hex").copy(R,p),p+=8,A.from(h.toString(16).padStart(16,"0"),"hex").copy(R,p),p+=8,R.writeUInt32BE(w,p),p+=4,R.writeUInt32BE(f,p),this.transport.send(240,4,3,0,R).then((function(A){return{r:A.slice(1,33).toString("hex"),s:A.slice(33,65).toString("hex")}}))},t.prototype.starkSignTransfer=function(t,e,i,n,o,s,E,a,g){var B=l(e),I=h(n),c=Object(r.b)(t),u=A.alloc(1+4*c.length+20+32+32+4+4+8+4+4,0),w=0;return u[0]=c.length,c.forEach((function(A,t){u.writeUInt32BE(A,1+4*t)})),w=1+4*c.length,B&&B.copy(u,w),w+=20,A.from(i.toString(16).padStart(64,"0"),"hex").copy(u,w),w+=32,I.copy(u,w),w+=32,u.writeUInt32BE(o,w),w+=4,u.writeUInt32BE(s,w),w+=4,A.from(E.toString(16).padStart(16,"0"),"hex").copy(u,w),w+=8,u.writeUInt32BE(a,w),w+=4,u.writeUInt32BE(g,w),this.transport.send(240,4,2,0,u).then((function(A){return{r:A.slice(1,33).toString("hex"),s:A.slice(33,65).toString("hex")}}))},t.prototype.starkSignTransfer_v2=function(t,e,i,n,o,s,E,a,g,B,I,c,w){var f=l(e),Q=h(s),C=l(c);if(!(i in u))throw new Error("eth.starkSignTransferv2 invalid quantization type="+i);var d=Object(r.b)(t),R=A.alloc(1+4*d.length+1+20+32+32+32+4+4+8+4+4+(C?52:0),0),p=0;return R[0]=d.length,d.forEach((function(A,t){R.writeUInt32BE(A,1+4*t)})),p=1+4*d.length,R[p]=u[i],p++,f&&f.copy(R,p),p+=20,n&&A.from(n.toString(16).padStart(64,"0"),"hex").copy(R,p),p+=32,o&&A.from(o.toString(16).padStart(64,"0"),"hex").copy(R,p),p+=32,Q.copy(R,p),p+=32,R.writeUInt32BE(E,p),p+=4,R.writeUInt32BE(a,p),p+=4,A.from(g.toString(16).padStart(16,"0"),"hex").copy(R,p),p+=8,R.writeUInt32BE(B,p),p+=4,R.writeUInt32BE(I,p),C&&w&&(p+=4,A.from(w.toString(16).padStart(64,"0"),"hex").copy(R,p),p+=32,C.copy(R,p)),this.transport.send(240,4,C?5:4,0,R).then((function(A){return{r:A.slice(1,33).toString("hex"),s:A.slice(33,65).toString("hex")}}))},t.prototype.starkProvideQuantum=function(t,e){var r=l(t),i=A.alloc(52,0);return r&&r.copy(i,0),A.from(e.toString(16).padStart(64,"0"),"hex").copy(i,20),this.transport.send(240,8,0,0,i).then((function(){return!0}),(function(A){if(A&&27904===A.statusCode)return!1;throw A}))},t.prototype.starkProvideQuantum_v2=function(t,e,r,i){var n=l(t);if(!(e in u))throw new Error("eth.starkProvideQuantumV2 invalid quantization type="+e);var o=A.alloc(84,0),s=0;return n&&n.copy(o,s),s+=20,r&&A.from(r.toString(16).padStart(64,"0"),"hex").copy(o,s),s+=32,i&&A.from(i.toString(16).padStart(64,"0"),"hex").copy(o,s),this.transport.send(240,8,u[e],0,o).then((function(){return!0}),(function(A){if(A&&27904===A.statusCode)return!1;throw A}))},t.prototype.starkUnsafeSign=function(t,e){var i,n=h(e),o=Object(r.b)(t),s=A.alloc(1+4*o.length+32);return s[0]=o.length,o.forEach((function(A,t){s.writeUInt32BE(A,1+4*t)})),i=1+4*o.length,n.copy(s,i),this.transport.send(240,10,0,0,s).then((function(A){return{r:A.slice(1,33).toString("hex"),s:A.slice(33,65).toString("hex")}}))},t.prototype.eth2GetPublicKey=function(t,e){var i=Object(r.b)(t),n=A.alloc(1+4*i.length);return n[0]=i.length,i.forEach((function(A,t){n.writeUInt32BE(A,1+4*t)})),this.transport.send(224,14,e?1:0,0,n).then((function(A){return{publicKey:A.slice(0,-2).toString("hex")}}))},t.prototype.eth2SetWithdrawalIndex=function(t){var e=A.alloc(4,0);return e.writeUInt32BE(t,0),this.transport.send(224,16,0,0,e).then((function(){return!0}),(function(A){if(A&&27904===A.statusCode)return!1;throw A}))},t.prototype.setExternalPlugin=function(A,t,e){return Q(this.transport,A,e)},t.prototype.setPlugin=function(A){return C(this.transport,A)},t}();function f(A,t){return A.send(224,10,0,0,t).then((function(){return!0}),(function(A){if(A&&27904===A.statusCode)return!1;throw A}))}function Q(t,e,r){var i=A.from(e,"hex"),n=A.from(r,"hex"),o=A.concat([i,n]);return t.send(224,18,0,0,o).then((function(){return!0}),(function(A){if(A&&27264===A.statusCode)return!1;if(A&&27012===A.statusCode)return!1;if(A&&27904===A.statusCode)return!1;throw A}))}function C(t,e){var r=A.from(e,"hex");return t.send(224,22,0,0,r).then((function(){return!0}),(function(A){if(A&&27264===A.statusCode)return!1;if(A&&27012===A.statusCode)return!1;if(A&&27904===A.statusCode)return!1;throw A}))}t.a=w}).call(this,e(15).Buffer)},function(A,t,e){"use strict";(function(A){e.d(t,"a",(function(){return o}));var r,i=e(48),n=e.n(i),o=function(A,t){return E().byContractAndChainId(s(A),t)},s=function(A){var t=A.toLowerCase();return t.startsWith("0x")?t:"0x"+t},E=function(){if(r)return r;for(var t=A.from(n.a,"base64"),e={},i=[],o=0;o<t.length;){var E=t.readUInt32BE(o);o+=4;var a=t.slice(o,o+E),g=0,B=a.readUInt8(g);g+=1;var I=a.slice(g,g+B).toString("ascii");g+=B;var c=s(a.slice(g,g+20).toString("hex"));g+=20;var u=a.readUInt32BE(g);g+=4;var h=a.readUInt32BE(g);g+=4;var l={ticker:I,contractAddress:c,decimals:u,chainId:h,signature:a.slice(g),data:a};i.push(l),e[String(h)+":"+c]=l,o+=E}var w={list:function(){return i},byContractAndChainId:function(A,t){return e[String(t)+":"+A]}};return r=w,w}}).call(this,e(15).Buffer)},function(A,t){A.exports=""},function(A,t,e){"use strict";e.d(t,"a",(function(){return g}));var r=e(18),i=e.n(r),n=e(19),o=e(11),s=function(){return(s=Object.assign||function(A){for(var t,e=1,r=arguments.length;e<r;e++)for(var i in t=arguments[e])Object.prototype.hasOwnProperty.call(t,i)&&(A[i]=t[i]);return A}).apply(this,arguments)},E=function(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))},a=function(A,t){var e,r,i,n,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return n={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function s(n){return function(s){return function(n){if(e)throw new TypeError("Generator is already executing.");for(;o;)try{if(e=1,r&&(i=2&n[0]?r.return:n[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,n[1])).done)return i;switch(r=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,r=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(A,o)}catch(A){n=[6,A],r=0}finally{e=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,s])}}},g=function(A,t,e,r){return E(void 0,void 0,void 0,(function(){var e,E,g,B,I,c,u,h;return a(this,(function(a){switch(a.label){case 0:return e=Object(n.a)(r),E=e.pluginBaseURL,g=e.extraPlugins,B={},E?(I=E+"/plugins/ethereum.json",[4,i.a.get(E+"/plugins/ethereum.json").then((function(A){return A.data})).catch((function(A){return Object(o.a)("error","could not fetch from "+I+": "+String(A)),null}))]):[3,2];case 1:B=a.sent(),a.label=2;case 2:return g&&(B=s(s({},B),g)),B?(c=t.toLowerCase(),(u=A.toLowerCase())in B&&(h=B[u],c in h)?[2,{payload:h[c].serialized_data,signature:h[c].signature,plugin:h[c].plugin,erc20OfInterest:h[c].erc20OfInterest,abi:h.abi}]:[2]):[2]}}))}))}},function(A,t,e){"use strict";(function(A){e.d(t,"a",(function(){return Y}));var r=e(2),i=e.n(r),n=e(4),o=e.n(n);"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==A||"undefined"!=typeof self&&self;function s(A,t,e){return A(e={path:t,exports:{},require:function(A,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&e.path)}},e.exports),e.exports}var E=a;function a(A,t){if(!A)throw new Error(t||"Assertion failed")}a.equal=function(A,t,e){if(A!=t)throw new Error(e||"Assertion failed: "+A+" != "+t)};var g=s((function(A,t){var e=t;function r(A){return 1===A.length?"0"+A:A}function i(A){for(var t="",e=0;e<A.length;e++)t+=r(A[e].toString(16));return t}e.toArray=function(A,t){if(Array.isArray(A))return A.slice();if(!A)return[];var e=[];if("string"!=typeof A){for(var r=0;r<A.length;r++)e[r]=0|A[r];return e}if("hex"===t){(A=A.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(A="0"+A);for(r=0;r<A.length;r+=2)e.push(parseInt(A[r]+A[r+1],16))}else for(r=0;r<A.length;r++){var i=A.charCodeAt(r),n=i>>8,o=255&i;n?e.push(n,o):e.push(o)}return e},e.zero2=r,e.toHex=i,e.encode=function(A,t){return"hex"===t?i(A):A}})),B=s((function(A,t){var e=t;e.assert=E,e.toArray=g.toArray,e.zero2=g.zero2,e.toHex=g.toHex,e.encode=g.encode,e.getNAF=function(A,t,e){var r=new Array(Math.max(A.bitLength(),e)+1);r.fill(0);for(var i=1<<t+1,n=A.clone(),o=0;o<r.length;o++){var s,E=n.andln(i-1);n.isOdd()?(s=E>(i>>1)-1?(i>>1)-E:E,n.isubn(s)):s=0,r[o]=s,n.iushrn(1)}return r},e.getJSF=function(A,t){var e=[[],[]];A=A.clone(),t=t.clone();for(var r,i=0,n=0;A.cmpn(-i)>0||t.cmpn(-n)>0;){var o,s,E=A.andln(3)+i&3,a=t.andln(3)+n&3;3===E&&(E=-1),3===a&&(a=-1),o=0==(1&E)?0:3!==(r=A.andln(7)+i&7)&&5!==r||2!==a?E:-E,e[0].push(o),s=0==(1&a)?0:3!==(r=t.andln(7)+n&7)&&5!==r||2!==E?a:-a,e[1].push(s),2*i===o+1&&(i=1-i),2*n===s+1&&(n=1-n),A.iushrn(1),t.iushrn(1)}return e},e.cachedProperty=function(A,t,e){var r="_"+t;A.prototype[t]=function(){return void 0!==this[r]?this[r]:this[r]=e.call(this)}},e.parseBytes=function(A){return"string"==typeof A?e.toArray(A,"hex"):A},e.intFromLE=function(A){return new i.a(A,"hex","le")}})),I=B.getNAF,c=B.getJSF,u=B.assert;function h(A,t){this.type=A,this.p=new i.a(t.p,16),this.red=t.prime?i.a.red(t.prime):i.a.mont(this.p),this.zero=new i.a(0).toRed(this.red),this.one=new i.a(1).toRed(this.red),this.two=new i.a(2).toRed(this.red),this.n=t.n&&new i.a(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var e=this.n&&this.p.div(this.n);!e||e.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var l=h;function w(A,t){this.curve=A,this.type=t,this.precomputed=null}h.prototype.point=function(){throw new Error("Not implemented")},h.prototype.validate=function(){throw new Error("Not implemented")},h.prototype._fixedNafMul=function(A,t){u(A.precomputed);var e=A._getDoubles(),r=I(t,1,this._bitLength),i=(1<<e.step+1)-(e.step%2==0?2:1);i/=3;var n,o,s=[];for(n=0;n<r.length;n+=e.step){o=0;for(var E=n+e.step-1;E>=n;E--)o=(o<<1)+r[E];s.push(o)}for(var a=this.jpoint(null,null,null),g=this.jpoint(null,null,null),B=i;B>0;B--){for(n=0;n<s.length;n++)(o=s[n])===B?g=g.mixedAdd(e.points[n]):o===-B&&(g=g.mixedAdd(e.points[n].neg()));a=a.add(g)}return a.toP()},h.prototype._wnafMul=function(A,t){var e=4,r=A._getNAFPoints(e);e=r.wnd;for(var i=r.points,n=I(t,e,this._bitLength),o=this.jpoint(null,null,null),s=n.length-1;s>=0;s--){for(var E=0;s>=0&&0===n[s];s--)E++;if(s>=0&&E++,o=o.dblp(E),s<0)break;var a=n[s];u(0!==a),o="affine"===A.type?a>0?o.mixedAdd(i[a-1>>1]):o.mixedAdd(i[-a-1>>1].neg()):a>0?o.add(i[a-1>>1]):o.add(i[-a-1>>1].neg())}return"affine"===A.type?o.toP():o},h.prototype._wnafMulAdd=function(A,t,e,r,i){var n,o,s,E=this._wnafT1,a=this._wnafT2,g=this._wnafT3,B=0;for(n=0;n<r;n++){var u=(s=t[n])._getNAFPoints(A);E[n]=u.wnd,a[n]=u.points}for(n=r-1;n>=1;n-=2){var h=n-1,l=n;if(1===E[h]&&1===E[l]){var w=[t[h],null,null,t[l]];0===t[h].y.cmp(t[l].y)?(w[1]=t[h].add(t[l]),w[2]=t[h].toJ().mixedAdd(t[l].neg())):0===t[h].y.cmp(t[l].y.redNeg())?(w[1]=t[h].toJ().mixedAdd(t[l]),w[2]=t[h].add(t[l].neg())):(w[1]=t[h].toJ().mixedAdd(t[l]),w[2]=t[h].toJ().mixedAdd(t[l].neg()));var f=[-3,-1,-5,-7,0,7,5,1,3],Q=c(e[h],e[l]);for(B=Math.max(Q[0].length,B),g[h]=new Array(B),g[l]=new Array(B),o=0;o<B;o++){var C=0|Q[0][o],d=0|Q[1][o];g[h][o]=f[3*(C+1)+(d+1)],g[l][o]=0,a[h]=w}}else g[h]=I(e[h],E[h],this._bitLength),g[l]=I(e[l],E[l],this._bitLength),B=Math.max(g[h].length,B),B=Math.max(g[l].length,B)}var R=this.jpoint(null,null,null),p=this._wnafT4;for(n=B;n>=0;n--){for(var T=0;n>=0;){var U=!0;for(o=0;o<r;o++)p[o]=0|g[o][n],0!==p[o]&&(U=!1);if(!U)break;T++,n--}if(n>=0&&T++,R=R.dblp(T),n<0)break;for(o=0;o<r;o++){var m=p[o];0!==m&&(m>0?s=a[o][m-1>>1]:m<0&&(s=a[o][-m-1>>1].neg()),R="affine"===s.type?R.mixedAdd(s):R.add(s))}}for(n=0;n<r;n++)a[n]=null;return i?R:R.toP()},h.BasePoint=w,w.prototype.eq=function(){throw new Error("Not implemented")},w.prototype.validate=function(){return this.curve.validate(this)},h.prototype.decodePoint=function(A,t){A=B.toArray(A,t);var e=this.p.byteLength();if((4===A[0]||6===A[0]||7===A[0])&&A.length-1==2*e)return 6===A[0]?u(A[A.length-1]%2==0):7===A[0]&&u(A[A.length-1]%2==1),this.point(A.slice(1,1+e),A.slice(1+e,1+2*e));if((2===A[0]||3===A[0])&&A.length-1===e)return this.pointFromX(A.slice(1,1+e),3===A[0]);throw new Error("Unknown point format")},w.prototype.encodeCompressed=function(A){return this.encode(A,!0)},w.prototype._encode=function(A){var t=this.curve.p.byteLength(),e=this.getX().toArray("be",t);return A?[this.getY().isEven()?2:3].concat(e):[4].concat(e,this.getY().toArray("be",t))},w.prototype.encode=function(A,t){return B.encode(this._encode(t),A)},w.prototype.precompute=function(A){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,A),t.beta=this._getBeta(),this.precomputed=t,this},w.prototype._hasDoubles=function(A){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((A.bitLength()+1)/t.step)},w.prototype._getDoubles=function(A,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var e=[this],r=this,i=0;i<t;i+=A){for(var n=0;n<A;n++)r=r.dbl();e.push(r)}return{step:A,points:e}},w.prototype._getNAFPoints=function(A){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],e=(1<<A)-1,r=1===e?null:this.dbl(),i=1;i<e;i++)t[i]=t[i-1].add(r);return{wnd:A,points:t}},w.prototype._getBeta=function(){return null},w.prototype.dblp=function(A){for(var t=this,e=0;e<A;e++)t=t.dbl();return t};var f=s((function(A){"function"==typeof Object.create?A.exports=function(A,t){t&&(A.super_=t,A.prototype=Object.create(t.prototype,{constructor:{value:A,enumerable:!1,writable:!0,configurable:!0}}))}:A.exports=function(A,t){if(t){A.super_=t;var e=function(){};e.prototype=t.prototype,A.prototype=new e,A.prototype.constructor=A}}})),Q=B.assert;function C(A){l.call(this,"short",A),this.a=new i.a(A.a,16).toRed(this.red),this.b=new i.a(A.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(A),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}f(C,l);var d=C;function R(A,t,e,r){l.BasePoint.call(this,A,"affine"),null===t&&null===e?(this.x=null,this.y=null,this.inf=!0):(this.x=new i.a(t,16),this.y=new i.a(e,16),r&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function p(A,t,e,r){l.BasePoint.call(this,A,"jacobian"),null===t&&null===e&&null===r?(this.x=this.curve.one,this.y=this.curve.one,this.z=new i.a(0)):(this.x=new i.a(t,16),this.y=new i.a(e,16),this.z=new i.a(r,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}C.prototype._getEndomorphism=function(A){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,e;if(A.beta)t=new i.a(A.beta,16).toRed(this.red);else{var r=this._getEndoRoots(this.p);t=(t=r[0].cmp(r[1])<0?r[0]:r[1]).toRed(this.red)}if(A.lambda)e=new i.a(A.lambda,16);else{var n=this._getEndoRoots(this.n);0===this.g.mul(n[0]).x.cmp(this.g.x.redMul(t))?e=n[0]:(e=n[1],Q(0===this.g.mul(e).x.cmp(this.g.x.redMul(t))))}return{beta:t,lambda:e,basis:A.basis?A.basis.map((function(A){return{a:new i.a(A.a,16),b:new i.a(A.b,16)}})):this._getEndoBasis(e)}}},C.prototype._getEndoRoots=function(A){var t=A===this.p?this.red:i.a.mont(A),e=new i.a(2).toRed(t).redInvm(),r=e.redNeg(),n=new i.a(3).toRed(t).redNeg().redSqrt().redMul(e);return[r.redAdd(n).fromRed(),r.redSub(n).fromRed()]},C.prototype._getEndoBasis=function(A){for(var t,e,r,n,o,s,E,a,g,B=this.n.ushrn(Math.floor(this.n.bitLength()/2)),I=A,c=this.n.clone(),u=new i.a(1),h=new i.a(0),l=new i.a(0),w=new i.a(1),f=0;0!==I.cmpn(0);){var Q=c.div(I);a=c.sub(Q.mul(I)),g=l.sub(Q.mul(u));var C=w.sub(Q.mul(h));if(!r&&a.cmp(B)<0)t=E.neg(),e=u,r=a.neg(),n=g;else if(r&&2==++f)break;E=a,c=I,I=a,l=u,u=g,w=h,h=C}o=a.neg(),s=g;var d=r.sqr().add(n.sqr());return o.sqr().add(s.sqr()).cmp(d)>=0&&(o=t,s=e),r.negative&&(r=r.neg(),n=n.neg()),o.negative&&(o=o.neg(),s=s.neg()),[{a:r,b:n},{a:o,b:s}]},C.prototype._endoSplit=function(A){var t=this.endo.basis,e=t[0],r=t[1],i=r.b.mul(A).divRound(this.n),n=e.b.neg().mul(A).divRound(this.n),o=i.mul(e.a),s=n.mul(r.a),E=i.mul(e.b),a=n.mul(r.b);return{k1:A.sub(o).sub(s),k2:E.add(a).neg()}},C.prototype.pointFromX=function(A,t){(A=new i.a(A,16)).red||(A=A.toRed(this.red));var e=A.redSqr().redMul(A).redIAdd(A.redMul(this.a)).redIAdd(this.b),r=e.redSqrt();if(0!==r.redSqr().redSub(e).cmp(this.zero))throw new Error("invalid point");var n=r.fromRed().isOdd();return(t&&!n||!t&&n)&&(r=r.redNeg()),this.point(A,r)},C.prototype.validate=function(A){if(A.inf)return!0;var t=A.x,e=A.y,r=this.a.redMul(t),i=t.redSqr().redMul(t).redIAdd(r).redIAdd(this.b);return 0===e.redSqr().redISub(i).cmpn(0)},C.prototype._endoWnafMulAdd=function(A,t,e){for(var r=this._endoWnafT1,i=this._endoWnafT2,n=0;n<A.length;n++){var o=this._endoSplit(t[n]),s=A[n],E=s._getBeta();o.k1.negative&&(o.k1.ineg(),s=s.neg(!0)),o.k2.negative&&(o.k2.ineg(),E=E.neg(!0)),r[2*n]=s,r[2*n+1]=E,i[2*n]=o.k1,i[2*n+1]=o.k2}for(var a=this._wnafMulAdd(1,r,i,2*n,e),g=0;g<2*n;g++)r[g]=null,i[g]=null;return a},f(R,l.BasePoint),C.prototype.point=function(A,t,e){return new R(this,A,t,e)},C.prototype.pointFromJSON=function(A,t){return R.fromJSON(this,A,t)},R.prototype._getBeta=function(){if(this.curve.endo){var A=this.precomputed;if(A&&A.beta)return A.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(A){var e=this.curve,r=function(A){return e.point(A.x.redMul(e.endo.beta),A.y)};A.beta=t,t.precomputed={beta:null,naf:A.naf&&{wnd:A.naf.wnd,points:A.naf.points.map(r)},doubles:A.doubles&&{step:A.doubles.step,points:A.doubles.points.map(r)}}}return t}},R.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},R.fromJSON=function(A,t,e){"string"==typeof t&&(t=JSON.parse(t));var r=A.point(t[0],t[1],e);if(!t[2])return r;function i(t){return A.point(t[0],t[1],e)}var n=t[2];return r.precomputed={beta:null,doubles:n.doubles&&{step:n.doubles.step,points:[r].concat(n.doubles.points.map(i))},naf:n.naf&&{wnd:n.naf.wnd,points:[r].concat(n.naf.points.map(i))}},r},R.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},R.prototype.isInfinity=function(){return this.inf},R.prototype.add=function(A){if(this.inf)return A;if(A.inf)return this;if(this.eq(A))return this.dbl();if(this.neg().eq(A))return this.curve.point(null,null);if(0===this.x.cmp(A.x))return this.curve.point(null,null);var t=this.y.redSub(A.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(A.x).redInvm()));var e=t.redSqr().redISub(this.x).redISub(A.x),r=t.redMul(this.x.redSub(e)).redISub(this.y);return this.curve.point(e,r)},R.prototype.dbl=function(){if(this.inf)return this;var A=this.y.redAdd(this.y);if(0===A.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,e=this.x.redSqr(),r=A.redInvm(),i=e.redAdd(e).redIAdd(e).redIAdd(t).redMul(r),n=i.redSqr().redISub(this.x.redAdd(this.x)),o=i.redMul(this.x.redSub(n)).redISub(this.y);return this.curve.point(n,o)},R.prototype.getX=function(){return this.x.fromRed()},R.prototype.getY=function(){return this.y.fromRed()},R.prototype.mul=function(A){return A=new i.a(A,16),this.isInfinity()?this:this._hasDoubles(A)?this.curve._fixedNafMul(this,A):this.curve.endo?this.curve._endoWnafMulAdd([this],[A]):this.curve._wnafMul(this,A)},R.prototype.mulAdd=function(A,t,e){var r=[this,t],i=[A,e];return this.curve.endo?this.curve._endoWnafMulAdd(r,i):this.curve._wnafMulAdd(1,r,i,2)},R.prototype.jmulAdd=function(A,t,e){var r=[this,t],i=[A,e];return this.curve.endo?this.curve._endoWnafMulAdd(r,i,!0):this.curve._wnafMulAdd(1,r,i,2,!0)},R.prototype.eq=function(A){return this===A||this.inf===A.inf&&(this.inf||0===this.x.cmp(A.x)&&0===this.y.cmp(A.y))},R.prototype.neg=function(A){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(A&&this.precomputed){var e=this.precomputed,r=function(A){return A.neg()};t.precomputed={naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(r)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(r)}}}return t},R.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},f(p,l.BasePoint),C.prototype.jpoint=function(A,t,e){return new p(this,A,t,e)},p.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var A=this.z.redInvm(),t=A.redSqr(),e=this.x.redMul(t),r=this.y.redMul(t).redMul(A);return this.curve.point(e,r)},p.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},p.prototype.add=function(A){if(this.isInfinity())return A;if(A.isInfinity())return this;var t=A.z.redSqr(),e=this.z.redSqr(),r=this.x.redMul(t),i=A.x.redMul(e),n=this.y.redMul(t.redMul(A.z)),o=A.y.redMul(e.redMul(this.z)),s=r.redSub(i),E=n.redSub(o);if(0===s.cmpn(0))return 0!==E.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var a=s.redSqr(),g=a.redMul(s),B=r.redMul(a),I=E.redSqr().redIAdd(g).redISub(B).redISub(B),c=E.redMul(B.redISub(I)).redISub(n.redMul(g)),u=this.z.redMul(A.z).redMul(s);return this.curve.jpoint(I,c,u)},p.prototype.mixedAdd=function(A){if(this.isInfinity())return A.toJ();if(A.isInfinity())return this;var t=this.z.redSqr(),e=this.x,r=A.x.redMul(t),i=this.y,n=A.y.redMul(t).redMul(this.z),o=e.redSub(r),s=i.redSub(n);if(0===o.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var E=o.redSqr(),a=E.redMul(o),g=e.redMul(E),B=s.redSqr().redIAdd(a).redISub(g).redISub(g),I=s.redMul(g.redISub(B)).redISub(i.redMul(a)),c=this.z.redMul(o);return this.curve.jpoint(B,I,c)},p.prototype.dblp=function(A){if(0===A)return this;if(this.isInfinity())return this;if(!A)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var e=this;for(t=0;t<A;t++)e=e.dbl();return e}var r=this.curve.a,i=this.curve.tinv,n=this.x,o=this.y,s=this.z,E=s.redSqr().redSqr(),a=o.redAdd(o);for(t=0;t<A;t++){var g=n.redSqr(),B=a.redSqr(),I=B.redSqr(),c=g.redAdd(g).redIAdd(g).redIAdd(r.redMul(E)),u=n.redMul(B),h=c.redSqr().redISub(u.redAdd(u)),l=u.redISub(h),w=c.redMul(l);w=w.redIAdd(w).redISub(I);var f=a.redMul(s);t+1<A&&(E=E.redMul(I)),n=h,s=f,a=w}return this.curve.jpoint(n,a.redMul(i),s)},p.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},p.prototype._zeroDbl=function(){var A,t,e;if(this.zOne){var r=this.x.redSqr(),i=this.y.redSqr(),n=i.redSqr(),o=this.x.redAdd(i).redSqr().redISub(r).redISub(n);o=o.redIAdd(o);var s=r.redAdd(r).redIAdd(r),E=s.redSqr().redISub(o).redISub(o),a=n.redIAdd(n);a=(a=a.redIAdd(a)).redIAdd(a),A=E,t=s.redMul(o.redISub(E)).redISub(a),e=this.y.redAdd(this.y)}else{var g=this.x.redSqr(),B=this.y.redSqr(),I=B.redSqr(),c=this.x.redAdd(B).redSqr().redISub(g).redISub(I);c=c.redIAdd(c);var u=g.redAdd(g).redIAdd(g),h=u.redSqr(),l=I.redIAdd(I);l=(l=l.redIAdd(l)).redIAdd(l),A=h.redISub(c).redISub(c),t=u.redMul(c.redISub(A)).redISub(l),e=(e=this.y.redMul(this.z)).redIAdd(e)}return this.curve.jpoint(A,t,e)},p.prototype._threeDbl=function(){var A,t,e;if(this.zOne){var r=this.x.redSqr(),i=this.y.redSqr(),n=i.redSqr(),o=this.x.redAdd(i).redSqr().redISub(r).redISub(n);o=o.redIAdd(o);var s=r.redAdd(r).redIAdd(r).redIAdd(this.curve.a),E=s.redSqr().redISub(o).redISub(o);A=E;var a=n.redIAdd(n);a=(a=a.redIAdd(a)).redIAdd(a),t=s.redMul(o.redISub(E)).redISub(a),e=this.y.redAdd(this.y)}else{var g=this.z.redSqr(),B=this.y.redSqr(),I=this.x.redMul(B),c=this.x.redSub(g).redMul(this.x.redAdd(g));c=c.redAdd(c).redIAdd(c);var u=I.redIAdd(I),h=(u=u.redIAdd(u)).redAdd(u);A=c.redSqr().redISub(h),e=this.y.redAdd(this.z).redSqr().redISub(B).redISub(g);var l=B.redSqr();l=(l=(l=l.redIAdd(l)).redIAdd(l)).redIAdd(l),t=c.redMul(u.redISub(A)).redISub(l)}return this.curve.jpoint(A,t,e)},p.prototype._dbl=function(){var A=this.curve.a,t=this.x,e=this.y,r=this.z,i=r.redSqr().redSqr(),n=t.redSqr(),o=e.redSqr(),s=n.redAdd(n).redIAdd(n).redIAdd(A.redMul(i)),E=t.redAdd(t),a=(E=E.redIAdd(E)).redMul(o),g=s.redSqr().redISub(a.redAdd(a)),B=a.redISub(g),I=o.redSqr();I=(I=(I=I.redIAdd(I)).redIAdd(I)).redIAdd(I);var c=s.redMul(B).redISub(I),u=e.redAdd(e).redMul(r);return this.curve.jpoint(g,c,u)},p.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var A=this.x.redSqr(),t=this.y.redSqr(),e=this.z.redSqr(),r=t.redSqr(),i=A.redAdd(A).redIAdd(A),n=i.redSqr(),o=this.x.redAdd(t).redSqr().redISub(A).redISub(r),s=(o=(o=(o=o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(n)).redSqr(),E=r.redIAdd(r);E=(E=(E=E.redIAdd(E)).redIAdd(E)).redIAdd(E);var a=i.redIAdd(o).redSqr().redISub(n).redISub(s).redISub(E),g=t.redMul(a);g=(g=g.redIAdd(g)).redIAdd(g);var B=this.x.redMul(s).redISub(g);B=(B=B.redIAdd(B)).redIAdd(B);var I=this.y.redMul(a.redMul(E.redISub(a)).redISub(o.redMul(s)));I=(I=(I=I.redIAdd(I)).redIAdd(I)).redIAdd(I);var c=this.z.redAdd(o).redSqr().redISub(e).redISub(s);return this.curve.jpoint(B,I,c)},p.prototype.mul=function(A,t){return A=new i.a(A,t),this.curve._wnafMul(this,A)},p.prototype.eq=function(A){if("affine"===A.type)return this.eq(A.toJ());if(this===A)return!0;var t=this.z.redSqr(),e=A.z.redSqr();if(0!==this.x.redMul(e).redISub(A.x.redMul(t)).cmpn(0))return!1;var r=t.redMul(this.z),i=e.redMul(A.z);return 0===this.y.redMul(i).redISub(A.y.redMul(r)).cmpn(0)},p.prototype.eqXToP=function(A){var t=this.z.redSqr(),e=A.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(e))return!0;for(var r=A.clone(),i=this.curve.redN.redMul(t);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(e.redIAdd(i),0===this.x.cmp(e))return!0}},p.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},p.prototype.isInfinity=function(){return 0===this.z.cmpn(0)};var T=s((function(A,t){var e=t;e.base=l,e.short=d,e.mont=null,e.edwards=null})),U=s((function(A,t){var e,r=t,i=B.assert;function n(A){"short"===A.type?this.curve=new T.short(A):"edwards"===A.type?this.curve=new T.edwards(A):this.curve=new T.mont(A),this.g=this.curve.g,this.n=this.curve.n,this.hash=A.hash,i(this.g.validate(),"Invalid curve"),i(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function s(A,t){Object.defineProperty(r,A,{configurable:!0,enumerable:!0,get:function(){var e=new n(t);return Object.defineProperty(r,A,{configurable:!0,enumerable:!0,value:e}),e}})}r.PresetCurve=n,s("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:o.a.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),s("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:o.a.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),s("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:o.a.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),s("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:o.a.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),s("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:o.a.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),s("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:o.a.sha256,gRed:!1,g:["9"]}),s("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:o.a.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{e=null.crash()}catch(A){e=void 0}s("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:o.a.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",e]})}));function m(A){if(!(this instanceof m))return new m(A);this.hash=A.hash,this.predResist=!!A.predResist,this.outLen=this.hash.outSize,this.minEntropy=A.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=g.toArray(A.entropy,A.entropyEnc||"hex"),e=g.toArray(A.nonce,A.nonceEnc||"hex"),r=g.toArray(A.pers,A.persEnc||"hex");E(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,e,r)}var M=m;m.prototype._init=function(A,t,e){var r=A.concat(t).concat(e);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var i=0;i<this.V.length;i++)this.K[i]=0,this.V[i]=1;this._update(r),this._reseed=1,this.reseedInterval=281474976710656},m.prototype._hmac=function(){return new o.a.hmac(this.hash,this.K)},m.prototype._update=function(A){var t=this._hmac().update(this.V).update([0]);A&&(t=t.update(A)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),A&&(this.K=this._hmac().update(this.V).update([1]).update(A).digest(),this.V=this._hmac().update(this.V).digest())},m.prototype.reseed=function(A,t,e,r){"string"!=typeof t&&(r=e,e=t,t=null),A=g.toArray(A,t),e=g.toArray(e,r),E(A.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(A.concat(e||[])),this._reseed=1},m.prototype.generate=function(A,t,e,r){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof t&&(r=e,e=t,t=null),e&&(e=g.toArray(e,r||"hex"),this._update(e));for(var i=[];i.length<A;)this.V=this._hmac().update(this.V).digest(),i=i.concat(this.V);var n=i.slice(0,A);return this._update(e),this._reseed++,g.encode(n,t)};var F=B.assert;function S(A,t){this.ec=A,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}var D=S;S.fromPublic=function(A,t,e){return t instanceof S?t:new S(A,{pub:t,pubEnc:e})},S.fromPrivate=function(A,t,e){return t instanceof S?t:new S(A,{priv:t,privEnc:e})},S.prototype.validate=function(){var A=this.getPublic();return A.isInfinity()?{result:!1,reason:"Invalid public key"}:A.validate()?A.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},S.prototype.getPublic=function(A,t){return"string"==typeof A&&(t=A,A=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,A):this.pub},S.prototype.getPrivate=function(A){return"hex"===A?this.priv.toString(16,2):this.priv},S.prototype._importPrivate=function(A,t){this.priv=new i.a(A,t||16),this.priv=this.priv.umod(this.ec.curve.n)},S.prototype._importPublic=function(A,t){if(A.x||A.y)return"mont"===this.ec.curve.type?F(A.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||F(A.x&&A.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(A.x,A.y));this.pub=this.ec.curve.decodePoint(A,t)},S.prototype.derive=function(A){return A.validate()||F(A.validate(),"public point not validated"),A.mul(this.priv).getX()},S.prototype.sign=function(A,t,e){return this.ec.sign(A,this,t,e)},S.prototype.verify=function(A,t){return this.ec.verify(A,t,this)},S.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var N=B.assert;function G(A,t){if(A instanceof G)return A;this._importDER(A,t)||(N(A.r&&A.s,"Signature without r or s"),this.r=new i.a(A.r,16),this.s=new i.a(A.s,16),void 0===A.recoveryParam?this.recoveryParam=null:this.recoveryParam=A.recoveryParam)}var y=G;function V(){this.place=0}function b(A,t){var e=A[t.place++];if(!(128&e))return e;var r=15&e;if(0===r||r>4)return!1;for(var i=0,n=0,o=t.place;n<r;n++,o++)i<<=8,i|=A[o],i>>>=0;return!(i<=127)&&(t.place=o,i)}function k(A){for(var t=0,e=A.length-1;!A[t]&&!(128&A[t+1])&&t<e;)t++;return 0===t?A:A.slice(t)}function v(A,t){if(t<128)A.push(t);else{var e=1+(Math.log(t)/Math.LN2>>>3);for(A.push(128|e);--e;)A.push(t>>>(e<<3)&255);A.push(t)}}G.prototype._importDER=function(A,t){A=B.toArray(A,t);var e=new V;if(48!==A[e.place++])return!1;var r=b(A,e);if(!1===r)return!1;if(r+e.place!==A.length)return!1;if(2!==A[e.place++])return!1;var n=b(A,e);if(!1===n)return!1;var o=A.slice(e.place,n+e.place);if(e.place+=n,2!==A[e.place++])return!1;var s=b(A,e);if(!1===s)return!1;if(A.length!==s+e.place)return!1;var E=A.slice(e.place,s+e.place);if(0===o[0]){if(!(128&o[1]))return!1;o=o.slice(1)}if(0===E[0]){if(!(128&E[1]))return!1;E=E.slice(1)}return this.r=new i.a(o),this.s=new i.a(E),this.recoveryParam=null,!0},G.prototype.toDER=function(A){var t=this.r.toArray(),e=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&e[0]&&(e=[0].concat(e)),t=k(t),e=k(e);!(e[0]||128&e[1]);)e=e.slice(1);var r=[2];v(r,t.length),(r=r.concat(t)).push(2),v(r,e.length);var i=r.concat(e),n=[48];return v(n,i.length),n=n.concat(i),B.encode(n,A)};var O=function(){throw new Error("unsupported")},Z=B.assert;function J(A){if(!(this instanceof J))return new J(A);"string"==typeof A&&(Z(Object.prototype.hasOwnProperty.call(U,A),"Unknown curve "+A),A=U[A]),A instanceof U.PresetCurve&&(A={curve:A}),this.curve=A.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=A.curve.g,this.g.precompute(A.curve.n.bitLength()+1),this.hash=A.hash||A.curve.hash}var P=J;J.prototype.keyPair=function(A){return new D(this,A)},J.prototype.keyFromPrivate=function(A,t){return D.fromPrivate(this,A,t)},J.prototype.keyFromPublic=function(A,t){return D.fromPublic(this,A,t)},J.prototype.genKeyPair=function(A){A||(A={});for(var t=new M({hash:this.hash,pers:A.pers,persEnc:A.persEnc||"utf8",entropy:A.entropy||O(this.hash.hmacStrength),entropyEnc:A.entropy&&A.entropyEnc||"utf8",nonce:this.n.toArray()}),e=this.n.byteLength(),r=this.n.sub(new i.a(2));;){var n=new i.a(t.generate(e));if(!(n.cmp(r)>0))return n.iaddn(1),this.keyFromPrivate(n)}},J.prototype._truncateToN=function(A,t){var e=8*A.byteLength()-this.n.bitLength();return e>0&&(A=A.ushrn(e)),!t&&A.cmp(this.n)>=0?A.sub(this.n):A},J.prototype.sign=function(A,t,e,r){"object"==typeof e&&(r=e,e=null),r||(r={}),t=this.keyFromPrivate(t,e),A=this._truncateToN(new i.a(A,16));for(var n=this.n.byteLength(),o=t.getPrivate().toArray("be",n),s=A.toArray("be",n),E=new M({hash:this.hash,entropy:o,nonce:s,pers:r.pers,persEnc:r.persEnc||"utf8"}),a=this.n.sub(new i.a(1)),g=0;;g++){var B=r.k?r.k(g):new i.a(E.generate(this.n.byteLength()));if(!((B=this._truncateToN(B,!0)).cmpn(1)<=0||B.cmp(a)>=0)){var I=this.g.mul(B);if(!I.isInfinity()){var c=I.getX(),u=c.umod(this.n);if(0!==u.cmpn(0)){var h=B.invm(this.n).mul(u.mul(t.getPrivate()).iadd(A));if(0!==(h=h.umod(this.n)).cmpn(0)){var l=(I.getY().isOdd()?1:0)|(0!==c.cmp(u)?2:0);return r.canonical&&h.cmp(this.nh)>0&&(h=this.n.sub(h),l^=1),new y({r:u,s:h,recoveryParam:l})}}}}}},J.prototype.verify=function(A,t,e,r){A=this._truncateToN(new i.a(A,16)),e=this.keyFromPublic(e,r);var n=(t=new y(t,"hex")).r,o=t.s;if(n.cmpn(1)<0||n.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var s,E=o.invm(this.n),a=E.mul(A).umod(this.n),g=E.mul(n).umod(this.n);return this.curve._maxwellTrick?!(s=this.g.jmulAdd(a,e.getPublic(),g)).isInfinity()&&s.eqXToP(n):!(s=this.g.mulAdd(a,e.getPublic(),g)).isInfinity()&&0===s.getX().umod(this.n).cmp(n)},J.prototype.recoverPubKey=function(A,t,e,r){Z((3&e)===e,"The recovery param is more than two bits"),t=new y(t,r);var n=this.n,o=new i.a(A),s=t.r,E=t.s,a=1&e,g=e>>1;if(s.cmp(this.curve.p.umod(this.curve.n))>=0&&g)throw new Error("Unable to find sencond key candinate");s=g?this.curve.pointFromX(s.add(this.curve.n),a):this.curve.pointFromX(s,a);var B=t.r.invm(n),I=n.sub(o).mul(B).umod(n),c=E.mul(B).umod(n);return this.g.mulAdd(I,s,c)},J.prototype.getKeyRecoveryParam=function(A,t,e,r){if(null!==(t=new y(t,r)).recoveryParam)return t.recoveryParam;for(var i=0;i<4;i++){var n;try{n=this.recoverPubKey(A,t,i)}catch(A){continue}if(n.eq(e))return i}throw new Error("Unable to find valid recovery factor")};var Y=s((function(A,t){var e=t;e.version="6.5.4",e.utils=B,e.rand=function(){throw new Error("unsupported")},e.curve=T,e.curves=U,e.ec=P,e.eddsa=null})).ec}).call(this,e(12))},function(A,t,e){(function(r,i){var n;
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */!function(){"use strict";var o="input is invalid type",s="object"==typeof window,E=s?window:{};E.JS_SHA3_NO_WINDOW&&(s=!1);var a=!s&&"object"==typeof self;!E.JS_SHA3_NO_NODE_JS&&"object"==typeof r&&r.versions&&r.versions.node?E=i:a&&(E=self);var g=!E.JS_SHA3_NO_COMMON_JS&&"object"==typeof A&&A.exports,B=e(87),I=!E.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,c="0123456789abcdef".split(""),u=[4,1024,262144,67108864],h=[0,8,16,24],l=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],w=[224,256,384,512],f=[128,256],Q=["hex","buffer","arrayBuffer","array","digest"],C={128:168,256:136};!E.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(A){return"[object Array]"===Object.prototype.toString.call(A)}),!I||!E.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(A){return"object"==typeof A&&A.buffer&&A.buffer.constructor===ArrayBuffer});for(var d=function(A,t,e){return function(r){return new k(A,t,A).update(r)[e]()}},R=function(A,t,e){return function(r,i){return new k(A,t,i).update(r)[e]()}},p=function(A,t,e){return function(t,r,i,n){return F["cshake"+A].update(t,r,i,n)[e]()}},T=function(A,t,e){return function(t,r,i,n){return F["kmac"+A].update(t,r,i,n)[e]()}},U=function(A,t,e,r){for(var i=0;i<Q.length;++i){var n=Q[i];A[n]=t(e,r,n)}return A},m=function(A,t){var e=d(A,t,"hex");return e.create=function(){return new k(A,t,A)},e.update=function(A){return e.create().update(A)},U(e,d,A,t)},M=[{name:"keccak",padding:[1,256,65536,16777216],bits:w,createMethod:m},{name:"sha3",padding:[6,1536,393216,100663296],bits:w,createMethod:m},{name:"shake",padding:[31,7936,2031616,520093696],bits:f,createMethod:function(A,t){var e=R(A,t,"hex");return e.create=function(e){return new k(A,t,e)},e.update=function(A,t){return e.create(t).update(A)},U(e,R,A,t)}},{name:"cshake",padding:u,bits:f,createMethod:function(A,t){var e=C[A],r=p(A,0,"hex");return r.create=function(r,i,n){return i||n?new k(A,t,r).bytepad([i,n],e):F["shake"+A].create(r)},r.update=function(A,t,e,i){return r.create(t,e,i).update(A)},U(r,p,A,t)}},{name:"kmac",padding:u,bits:f,createMethod:function(A,t){var e=C[A],r=T(A,0,"hex");return r.create=function(r,i,n){return new v(A,t,i).bytepad(["KMAC",n],e).bytepad([r],e)},r.update=function(A,t,e,i){return r.create(A,e,i).update(t)},U(r,T,A,t)}}],F={},S=[],D=0;D<M.length;++D)for(var N=M[D],G=N.bits,y=0;y<G.length;++y){var V=N.name+"_"+G[y];if(S.push(V),F[V]=N.createMethod(G[y],N.padding),"sha3"!==N.name){var b=N.name+G[y];S.push(b),F[b]=F[V]}}function k(A,t,e){this.blocks=[],this.s=[],this.padding=t,this.outputBits=e,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(A<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=e>>5,this.extraBytes=(31&e)>>3;for(var r=0;r<50;++r)this.s[r]=0}function v(A,t,e){k.call(this,A,t,e)}k.prototype.update=function(A){if(this.finalized)throw new Error("finalize already called");var t,e=typeof A;if("string"!==e){if("object"!==e)throw new Error(o);if(null===A)throw new Error(o);if(I&&A.constructor===ArrayBuffer)A=new Uint8Array(A);else if(!(Array.isArray(A)||I&&ArrayBuffer.isView(A)))throw new Error(o);t=!0}for(var r,i,n=this.blocks,s=this.byteCount,E=A.length,a=this.blockCount,g=0,B=this.s;g<E;){if(this.reset)for(this.reset=!1,n[0]=this.block,r=1;r<a+1;++r)n[r]=0;if(t)for(r=this.start;g<E&&r<s;++g)n[r>>2]|=A[g]<<h[3&r++];else for(r=this.start;g<E&&r<s;++g)(i=A.charCodeAt(g))<128?n[r>>2]|=i<<h[3&r++]:i<2048?(n[r>>2]|=(192|i>>6)<<h[3&r++],n[r>>2]|=(128|63&i)<<h[3&r++]):i<55296||i>=57344?(n[r>>2]|=(224|i>>12)<<h[3&r++],n[r>>2]|=(128|i>>6&63)<<h[3&r++],n[r>>2]|=(128|63&i)<<h[3&r++]):(i=65536+((1023&i)<<10|1023&A.charCodeAt(++g)),n[r>>2]|=(240|i>>18)<<h[3&r++],n[r>>2]|=(128|i>>12&63)<<h[3&r++],n[r>>2]|=(128|i>>6&63)<<h[3&r++],n[r>>2]|=(128|63&i)<<h[3&r++]);if(this.lastByteIndex=r,r>=s){for(this.start=r-s,this.block=n[a],r=0;r<a;++r)B[r]^=n[r];O(B),this.reset=!0}else this.start=r}return this},k.prototype.encode=function(A,t){var e=255&A,r=1,i=[e];for(e=255&(A>>=8);e>0;)i.unshift(e),e=255&(A>>=8),++r;return t?i.push(r):i.unshift(r),this.update(i),i.length},k.prototype.encodeString=function(A){var t,e=typeof A;if("string"!==e){if("object"!==e)throw new Error(o);if(null===A)throw new Error(o);if(I&&A.constructor===ArrayBuffer)A=new Uint8Array(A);else if(!(Array.isArray(A)||I&&ArrayBuffer.isView(A)))throw new Error(o);t=!0}var r=0,i=A.length;if(t)r=i;else for(var n=0;n<A.length;++n){var s=A.charCodeAt(n);s<128?r+=1:s<2048?r+=2:s<55296||s>=57344?r+=3:(s=65536+((1023&s)<<10|1023&A.charCodeAt(++n)),r+=4)}return r+=this.encode(8*r),this.update(A),r},k.prototype.bytepad=function(A,t){for(var e=this.encode(t),r=0;r<A.length;++r)e+=this.encodeString(A[r]);var i=t-e%t,n=[];return n.length=i,this.update(n),this},k.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var A=this.blocks,t=this.lastByteIndex,e=this.blockCount,r=this.s;if(A[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(A[0]=A[e],t=1;t<e+1;++t)A[t]=0;for(A[e-1]|=2147483648,t=0;t<e;++t)r[t]^=A[t];O(r)}},k.prototype.toString=k.prototype.hex=function(){this.finalize();for(var A,t=this.blockCount,e=this.s,r=this.outputBlocks,i=this.extraBytes,n=0,o=0,s="";o<r;){for(n=0;n<t&&o<r;++n,++o)A=e[n],s+=c[A>>4&15]+c[15&A]+c[A>>12&15]+c[A>>8&15]+c[A>>20&15]+c[A>>16&15]+c[A>>28&15]+c[A>>24&15];o%t==0&&(O(e),n=0)}return i&&(A=e[n],s+=c[A>>4&15]+c[15&A],i>1&&(s+=c[A>>12&15]+c[A>>8&15]),i>2&&(s+=c[A>>20&15]+c[A>>16&15])),s},k.prototype.arrayBuffer=function(){this.finalize();var A,t=this.blockCount,e=this.s,r=this.outputBlocks,i=this.extraBytes,n=0,o=0,s=this.outputBits>>3;A=i?new ArrayBuffer(r+1<<2):new ArrayBuffer(s);for(var E=new Uint32Array(A);o<r;){for(n=0;n<t&&o<r;++n,++o)E[o]=e[n];o%t==0&&O(e)}return i&&(E[n]=e[n],A=A.slice(0,s)),A},k.prototype.buffer=k.prototype.arrayBuffer,k.prototype.digest=k.prototype.array=function(){this.finalize();for(var A,t,e=this.blockCount,r=this.s,i=this.outputBlocks,n=this.extraBytes,o=0,s=0,E=[];s<i;){for(o=0;o<e&&s<i;++o,++s)A=s<<2,t=r[o],E[A]=255&t,E[A+1]=t>>8&255,E[A+2]=t>>16&255,E[A+3]=t>>24&255;s%e==0&&O(r)}return n&&(A=s<<2,t=r[o],E[A]=255&t,n>1&&(E[A+1]=t>>8&255),n>2&&(E[A+2]=t>>16&255)),E},v.prototype=new k,v.prototype.finalize=function(){return this.encode(this.outputBits,!0),k.prototype.finalize.call(this)};var O=function(A){var t,e,r,i,n,o,s,E,a,g,B,I,c,u,h,w,f,Q,C,d,R,p,T,U,m,M,F,S,D,N,G,y,V,b,k,v,O,Z,J,P,Y,L,x,H,W,j,K,q,z,X,_,$,AA,tA,eA,rA,iA,nA,oA,sA,EA,aA,gA;for(r=0;r<48;r+=2)i=A[0]^A[10]^A[20]^A[30]^A[40],n=A[1]^A[11]^A[21]^A[31]^A[41],o=A[2]^A[12]^A[22]^A[32]^A[42],s=A[3]^A[13]^A[23]^A[33]^A[43],E=A[4]^A[14]^A[24]^A[34]^A[44],a=A[5]^A[15]^A[25]^A[35]^A[45],g=A[6]^A[16]^A[26]^A[36]^A[46],B=A[7]^A[17]^A[27]^A[37]^A[47],t=(I=A[8]^A[18]^A[28]^A[38]^A[48])^(o<<1|s>>>31),e=(c=A[9]^A[19]^A[29]^A[39]^A[49])^(s<<1|o>>>31),A[0]^=t,A[1]^=e,A[10]^=t,A[11]^=e,A[20]^=t,A[21]^=e,A[30]^=t,A[31]^=e,A[40]^=t,A[41]^=e,t=i^(E<<1|a>>>31),e=n^(a<<1|E>>>31),A[2]^=t,A[3]^=e,A[12]^=t,A[13]^=e,A[22]^=t,A[23]^=e,A[32]^=t,A[33]^=e,A[42]^=t,A[43]^=e,t=o^(g<<1|B>>>31),e=s^(B<<1|g>>>31),A[4]^=t,A[5]^=e,A[14]^=t,A[15]^=e,A[24]^=t,A[25]^=e,A[34]^=t,A[35]^=e,A[44]^=t,A[45]^=e,t=E^(I<<1|c>>>31),e=a^(c<<1|I>>>31),A[6]^=t,A[7]^=e,A[16]^=t,A[17]^=e,A[26]^=t,A[27]^=e,A[36]^=t,A[37]^=e,A[46]^=t,A[47]^=e,t=g^(i<<1|n>>>31),e=B^(n<<1|i>>>31),A[8]^=t,A[9]^=e,A[18]^=t,A[19]^=e,A[28]^=t,A[29]^=e,A[38]^=t,A[39]^=e,A[48]^=t,A[49]^=e,u=A[0],h=A[1],j=A[11]<<4|A[10]>>>28,K=A[10]<<4|A[11]>>>28,S=A[20]<<3|A[21]>>>29,D=A[21]<<3|A[20]>>>29,sA=A[31]<<9|A[30]>>>23,EA=A[30]<<9|A[31]>>>23,L=A[40]<<18|A[41]>>>14,x=A[41]<<18|A[40]>>>14,b=A[2]<<1|A[3]>>>31,k=A[3]<<1|A[2]>>>31,w=A[13]<<12|A[12]>>>20,f=A[12]<<12|A[13]>>>20,q=A[22]<<10|A[23]>>>22,z=A[23]<<10|A[22]>>>22,N=A[33]<<13|A[32]>>>19,G=A[32]<<13|A[33]>>>19,aA=A[42]<<2|A[43]>>>30,gA=A[43]<<2|A[42]>>>30,tA=A[5]<<30|A[4]>>>2,eA=A[4]<<30|A[5]>>>2,v=A[14]<<6|A[15]>>>26,O=A[15]<<6|A[14]>>>26,Q=A[25]<<11|A[24]>>>21,C=A[24]<<11|A[25]>>>21,X=A[34]<<15|A[35]>>>17,_=A[35]<<15|A[34]>>>17,y=A[45]<<29|A[44]>>>3,V=A[44]<<29|A[45]>>>3,U=A[6]<<28|A[7]>>>4,m=A[7]<<28|A[6]>>>4,rA=A[17]<<23|A[16]>>>9,iA=A[16]<<23|A[17]>>>9,Z=A[26]<<25|A[27]>>>7,J=A[27]<<25|A[26]>>>7,d=A[36]<<21|A[37]>>>11,R=A[37]<<21|A[36]>>>11,$=A[47]<<24|A[46]>>>8,AA=A[46]<<24|A[47]>>>8,H=A[8]<<27|A[9]>>>5,W=A[9]<<27|A[8]>>>5,M=A[18]<<20|A[19]>>>12,F=A[19]<<20|A[18]>>>12,nA=A[29]<<7|A[28]>>>25,oA=A[28]<<7|A[29]>>>25,P=A[38]<<8|A[39]>>>24,Y=A[39]<<8|A[38]>>>24,p=A[48]<<14|A[49]>>>18,T=A[49]<<14|A[48]>>>18,A[0]=u^~w&Q,A[1]=h^~f&C,A[10]=U^~M&S,A[11]=m^~F&D,A[20]=b^~v&Z,A[21]=k^~O&J,A[30]=H^~j&q,A[31]=W^~K&z,A[40]=tA^~rA&nA,A[41]=eA^~iA&oA,A[2]=w^~Q&d,A[3]=f^~C&R,A[12]=M^~S&N,A[13]=F^~D&G,A[22]=v^~Z&P,A[23]=O^~J&Y,A[32]=j^~q&X,A[33]=K^~z&_,A[42]=rA^~nA&sA,A[43]=iA^~oA&EA,A[4]=Q^~d&p,A[5]=C^~R&T,A[14]=S^~N&y,A[15]=D^~G&V,A[24]=Z^~P&L,A[25]=J^~Y&x,A[34]=q^~X&$,A[35]=z^~_&AA,A[44]=nA^~sA&aA,A[45]=oA^~EA&gA,A[6]=d^~p&u,A[7]=R^~T&h,A[16]=N^~y&U,A[17]=G^~V&m,A[26]=P^~L&b,A[27]=Y^~x&k,A[36]=X^~$&H,A[37]=_^~AA&W,A[46]=sA^~aA&tA,A[47]=EA^~gA&eA,A[8]=p^~u&w,A[9]=T^~h&f,A[18]=y^~U&M,A[19]=V^~m&F,A[28]=L^~b&v,A[29]=x^~k&O,A[38]=$^~H&j,A[39]=AA^~W&K,A[48]=aA^~tA&rA,A[49]=gA^~eA&iA,A[0]^=l[r],A[1]^=l[r+1]};if(g)A.exports=F;else{for(D=0;D<S.length;++D)E[S[D]]=F[S[D]];B&&(void 0===(n=function(){return F}.call(t,e,t,A))||(A.exports=n))}}()}).call(this,e(26),e(12))},function(A,t,e){"use strict";e.d(t,"a",(function(){return r}));const r="random/5.5.0"},function(A,t,e){"use strict";e.d(t,"a",(function(){return s}));var r={},i={},n=function(A,t){i[A]=t},o=function(A){var t=function(t,e){Object.assign(this,e),this.name=A,this.message=t||A,this.stack=(new Error).stack};return t.prototype=new Error,r[A]=t,t};o("AccountNameRequired"),o("AccountNotSupported"),o("AmountRequired"),o("BluetoothRequired"),o("BtcUnmatchedApp"),o("CantOpenDevice"),o("CashAddrNotSupported"),o("CurrencyNotSupported"),o("DeviceAppVerifyNotSupported"),o("DeviceGenuineSocketEarlyClose"),o("DeviceNotGenuine"),o("DeviceOnDashboardExpected"),o("DeviceOnDashboardUnexpected"),o("DeviceInOSUExpected"),o("DeviceHalted"),o("DeviceNameInvalid"),o("DeviceSocketFail"),o("DeviceSocketNoBulkStatus"),o("DisconnectedDevice"),o("DisconnectedDeviceDuringOperation"),o("EnpointConfig");var s=o("EthAppPleaseEnableContractData");o("FeeEstimationFailed"),o("FirmwareNotRecognized"),o("HardResetFail"),o("InvalidXRPTag"),o("InvalidAddress"),o("InvalidAddressBecauseDestinationIsAlsoSource"),o("LatestMCUInstalledError"),o("UnknownMCU"),o("LedgerAPIError"),o("LedgerAPIErrorWithMessage"),o("LedgerAPINotAvailable"),o("ManagerAppAlreadyInstalled"),o("ManagerAppRelyOnBTC"),o("ManagerAppDepInstallRequired"),o("ManagerAppDepUninstallRequired"),o("ManagerDeviceLocked"),o("ManagerFirmwareNotEnoughSpace"),o("ManagerNotEnoughSpace"),o("ManagerUninstallBTCDep"),o("NetworkDown"),o("NoAddressesFound"),o("NotEnoughBalance"),o("NotEnoughBalanceToDelegate"),o("NotEnoughBalanceInParentAccount"),o("NotEnoughSpendableBalance"),o("NotEnoughBalanceBecauseDestinationNotCreated"),o("NoAccessToCamera"),o("NotEnoughGas"),o("NotSupportedLegacyAddress"),o("GasLessThanEstimate"),o("PasswordsDontMatch"),o("PasswordIncorrect"),o("RecommendSubAccountsToEmpty"),o("RecommendUndelegation"),o("TimeoutTagged"),o("UnexpectedBootloader"),o("MCUNotGenuineToDashboard"),o("RecipientRequired"),o("UnavailableTezosOriginatedAccountReceive"),o("UnavailableTezosOriginatedAccountSend"),o("UpdateFetchFileFail"),o("UpdateIncorrectHash"),o("UpdateIncorrectSig"),o("UpdateYourApp"),o("UserRefusedDeviceNameChange"),o("UserRefusedAddress"),o("UserRefusedFirmwareUpdate"),o("UserRefusedAllowManager"),o("UserRefusedOnDevice"),o("TransportOpenUserCancelled"),o("TransportInterfaceNotAvailable"),o("TransportRaceCondition"),o("TransportWebUSBGestureRequired"),o("DeviceShouldStayInApp"),o("WebsocketConnectionError"),o("WebsocketConnectionFailed"),o("WrongDeviceForAccount"),o("WrongAppForCurrency"),o("ETHAddressNonEIP"),o("CantScanQRCode"),o("FeeNotLoaded"),o("FeeRequired"),o("FeeTooHigh"),o("SyncError"),o("PairingFailed"),o("GenuineCheckFailed"),o("LedgerAPI4xx"),o("LedgerAPI5xx"),o("FirmwareOrAppUpdateRequired"),o("NoDBPathGiven"),o("DBWrongPassword"),o("DBNotReset");function E(A,t){this.name="TransportError",this.message=A,this.stack=(new Error).stack,this.id=t}E.prototype=new Error,n("TransportError",(function(A){return new E(A.message,A.id)}));var a={PIN_REMAINING_ATTEMPTS:25536,INCORRECT_LENGTH:26368,MISSING_CRITICAL_PARAMETER:26624,COMMAND_INCOMPATIBLE_FILE_STRUCTURE:27009,SECURITY_STATUS_NOT_SATISFIED:27010,CONDITIONS_OF_USE_NOT_SATISFIED:27013,INCORRECT_DATA:27264,NOT_ENOUGH_MEMORY_SPACE:27268,REFERENCED_DATA_NOT_FOUND:27272,FILE_ALREADY_EXISTS:27273,INCORRECT_P1_P2:27392,INS_NOT_SUPPORTED:27904,CLA_NOT_SUPPORTED:28160,TECHNICAL_PROBLEM:28416,OK:36864,MEMORY_PROBLEM:37440,NO_EF_SELECTED:37888,INVALID_OFFSET:37890,FILE_NOT_FOUND:37892,INCONSISTENT_FILE:37896,ALGORITHM_NOT_SUPPORTED:38020,INVALID_KCV:38021,CODE_NOT_INITIALIZED:38914,ACCESS_CONDITION_NOT_FULFILLED:38916,CONTRADICTION_SECRET_CODE_STATUS:38920,CONTRADICTION_INVALIDATION:38928,CODE_BLOCKED:38976,MAX_VALUE_REACHED:38992,GP_AUTH_FAILED:25344,LICENSING:28482,HALTED:28586};function g(A){this.name="TransportStatusError";var t=Object.keys(a).find((function(t){return a[t]===A}))||"UNKNOWN_ERROR",e=function(A){switch(A){case 26368:return"Incorrect length";case 26624:return"Missing critical parameter";case 27010:return"Security not satisfied (dongle locked or have invalid access rights)";case 27013:return"Condition of use not satisfied (denied by the user?)";case 27264:return"Invalid data received";case 27392:return"Invalid parameter received"}if(28416<=A&&A<=28671)return"Internal error, please report"}(A)||t,r=A.toString(16);this.message="Ledger device: "+e+" (0x"+r+")",this.stack=(new Error).stack,this.statusCode=A,this.statusText=t}g.prototype=new Error,n("TransportStatusError",(function(A){return new g(A.statusCode)}))},,,function(A,t,e){"use strict";t.byteLength=function(A){var t=a(A),e=t[0],r=t[1];return 3*(e+r)/4-r},t.toByteArray=function(A){var t,e,r=a(A),o=r[0],s=r[1],E=new n(function(A,t,e){return 3*(t+e)/4-e}(0,o,s)),g=0,B=s>0?o-4:o;for(e=0;e<B;e+=4)t=i[A.charCodeAt(e)]<<18|i[A.charCodeAt(e+1)]<<12|i[A.charCodeAt(e+2)]<<6|i[A.charCodeAt(e+3)],E[g++]=t>>16&255,E[g++]=t>>8&255,E[g++]=255&t;2===s&&(t=i[A.charCodeAt(e)]<<2|i[A.charCodeAt(e+1)]>>4,E[g++]=255&t);1===s&&(t=i[A.charCodeAt(e)]<<10|i[A.charCodeAt(e+1)]<<4|i[A.charCodeAt(e+2)]>>2,E[g++]=t>>8&255,E[g++]=255&t);return E},t.fromByteArray=function(A){for(var t,e=A.length,i=e%3,n=[],o=0,s=e-i;o<s;o+=16383)n.push(g(A,o,o+16383>s?s:o+16383));1===i?(t=A[e-1],n.push(r[t>>2]+r[t<<4&63]+"==")):2===i&&(t=(A[e-2]<<8)+A[e-1],n.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return n.join("")};for(var r=[],i=[],n="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,E=o.length;s<E;++s)r[s]=o[s],i[o.charCodeAt(s)]=s;function a(A){var t=A.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var e=A.indexOf("=");return-1===e&&(e=t),[e,e===t?0:4-e%4]}function g(A,t,e){for(var i,n,o=[],s=t;s<e;s+=3)i=(A[s]<<16&16711680)+(A[s+1]<<8&65280)+(255&A[s+2]),o.push(r[(n=i)>>18&63]+r[n>>12&63]+r[n>>6&63]+r[63&n]);return o.join("")}i["-".charCodeAt(0)]=62,i["_".charCodeAt(0)]=63},function(A,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(A,t,e,r,i){var n,o,s=8*i-r-1,E=(1<<s)-1,a=E>>1,g=-7,B=e?i-1:0,I=e?-1:1,c=A[t+B];for(B+=I,n=c&(1<<-g)-1,c>>=-g,g+=s;g>0;n=256*n+A[t+B],B+=I,g-=8);for(o=n&(1<<-g)-1,n>>=-g,g+=r;g>0;o=256*o+A[t+B],B+=I,g-=8);if(0===n)n=1-a;else{if(n===E)return o?NaN:1/0*(c?-1:1);o+=Math.pow(2,r),n-=a}return(c?-1:1)*o*Math.pow(2,n-r)},t.write=function(A,t,e,r,i,n){var o,s,E,a=8*n-i-1,g=(1<<a)-1,B=g>>1,I=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,c=r?0:n-1,u=r?1:-1,h=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,o=g):(o=Math.floor(Math.log(t)/Math.LN2),t*(E=Math.pow(2,-o))<1&&(o--,E*=2),(t+=o+B>=1?I/E:I*Math.pow(2,1-B))*E>=2&&(o++,E/=2),o+B>=g?(s=0,o=g):o+B>=1?(s=(t*E-1)*Math.pow(2,i),o+=B):(s=t*Math.pow(2,B-1)*Math.pow(2,i),o=0));i>=8;A[e+c]=255&s,c+=u,s/=256,i-=8);for(o=o<<i|s,a+=i;a>0;A[e+c]=255&o,c+=u,o/=256,a-=8);A[e+c-u]|=128*h}},function(A,t){var e={}.toString;A.exports=Array.isArray||function(A){return"[object Array]"==e.call(A)}},function(A,t,e){"use strict";(function(t){A.exports=a;var r=e(60),i="undefined"!=typeof navigator&&!!navigator.userAgent,n=i&&navigator.userAgent.match(/Safari\//)&&!navigator.userAgent.match(/Chrome\//),o=i&&navigator.userAgent.match(/Edge\/1[2345]/),s=null;function E(A){return s||(s=new A((function(A,t){function e(){A({u2f:null,native:!0})}return i?n?e():(void 0!==window.u2f&&"function"==typeof window.u2f.sign&&A({u2f:window.u2f,native:!0}),o||"http:"===location.protocol||"undefined"==typeof MessageChannel?e():void r.isSupported((function(t){t?A({u2f:r,native:!1}):e()}))):e()}))),s}function a(A){return{isSupported:I.bind(A),ensureSupport:u.bind(A),register:h.bind(A),sign:l.bind(A),ErrorCodes:a.ErrorCodes,ErrorNames:a.ErrorNames}}function g(A,t){var e=null!=t?t.errorCode:1,r=a.ErrorNames[""+e],i=new Error(A);return i.metaData={type:r,code:e},i}function B(A,t){var e={};return e.promise=new A((function(A,r){e.resolve=A,e.reject=r,t.then(A,r)})),e.promise.cancel=function(t,r){E(A).then((function(A){r&&!A.native&&A.u2f.disconnect(),e.reject(g(t,{errorCode:-1}))}))},e}function I(){return E(this).then((function(A){return!!A.u2f}))}function c(A){if(!A.u2f){if("http:"===location.protocol)throw new Error("U2F isn't supported over http, only https");throw new Error("U2F not supported")}}function u(){return E(this).then(c)}function h(A,t,e){var r=this;return Array.isArray(A)||(A=[A]),"number"==typeof t&&void 0===e&&(e=t,t=null),t||(t=[]),B(r,E(r).then((function(i){c(i);var n=i.native,o=i.u2f;return new r((function(r,i){if(n){var s=A[0].appId;o.register(s,A,t,(function(A){A.errorCode?i(g("Registration failed",A)):(delete A.errorCode,r(A))}),e)}else o.register(A,t,(function(A,t){A?i(A):t.errorCode?i(g("Registration failed",t)):r(t)}),e)}))}))).promise}function l(A,t){var e=this;return Array.isArray(A)||(A=[A]),B(e,E(e).then((function(r){c(r);var i=r.native,n=r.u2f;return new e((function(e,r){if(i){var o=A[0].appId,s=A[0].challenge;n.sign(o,s,A,(function(A){A.errorCode?r(g("Sign failed",A)):(delete A.errorCode,e(A))}),t)}else n.sign(A,(function(A,t){A?r(A):t.errorCode?r(g("Sign failed",t)):e(t)}),t)}))}))).promise}function w(A){a[A]=function(){if(!t.Promise)throw new Error("The platform doesn't natively support promises");var e=[].slice.call(arguments);return a(t.Promise)[A].apply(null,e)}}a.ErrorCodes={CANCELLED:-1,OK:0,OTHER_ERROR:1,BAD_REQUEST:2,CONFIGURATION_UNSUPPORTED:3,DEVICE_INELIGIBLE:4,TIMEOUT:5},a.ErrorNames={"-1":"CANCELLED",0:"OK",1:"OTHER_ERROR",2:"BAD_REQUEST",3:"CONFIGURATION_UNSUPPORTED",4:"DEVICE_INELIGIBLE",5:"TIMEOUT"},w("isSupported"),w("ensureSupport"),w("register"),w("sign")}).call(this,e(12))},function(A,t,e){"use strict";var r=r||{};A.exports=r,r.EXTENSION_ID="kmendfapggjehodndflmmgagdbamhnfd",r.MessageTypes={U2F_REGISTER_REQUEST:"u2f_register_request",U2F_SIGN_REQUEST:"u2f_sign_request",U2F_REGISTER_RESPONSE:"u2f_register_response",U2F_SIGN_RESPONSE:"u2f_sign_response"},r.ErrorCodes={OK:0,OTHER_ERROR:1,BAD_REQUEST:2,CONFIGURATION_UNSUPPORTED:3,DEVICE_INELIGIBLE:4,TIMEOUT:5},r.Request,r.Response,r.Error,r.SignRequest,r.SignResponse,r.RegisterRequest,r.RegisterResponse,r.disconnect=function(){r.port_&&r.port_.port_&&(r.port_.port_.disconnect(),r.port_=null)},r.getMessagePort=function(A){if("undefined"!=typeof chrome&&chrome.runtime){var t={type:r.MessageTypes.U2F_SIGN_REQUEST,signRequests:[]};chrome.runtime.sendMessage(r.EXTENSION_ID,t,(function(){chrome.runtime.lastError?r.getIframePort_(A):r.getChromeRuntimePort_(A)}))}else r.getIframePort_(A)},r.getChromeRuntimePort_=function(A){var t=chrome.runtime.connect(r.EXTENSION_ID,{includeTlsChannelId:!0});setTimeout((function(){A(null,new r.WrappedChromeRuntimePort_(t))}),0)},r.WrappedChromeRuntimePort_=function(A){this.port_=A},r.WrappedChromeRuntimePort_.prototype.postMessage=function(A){this.port_.postMessage(A)},r.WrappedChromeRuntimePort_.prototype.addEventListener=function(A,t){var e=A.toLowerCase();"message"==e||"onmessage"==e?this.port_.onMessage.addListener((function(A){t({data:A})})):console.error("WrappedChromeRuntimePort only supports onMessage")},r.getIframePort_=function(A){var t="chrome-extension://"+r.EXTENSION_ID,e=document.createElement("iframe");e.src=t+"/u2f-comms.html",e.setAttribute("style","display:none"),document.body.appendChild(e);var i=!1,n=new MessageChannel,o=function(t){"ready"==t.data?(n.port1.removeEventListener("message",o),i||(i=!0,A(null,n.port1))):console.error('First event on iframe port was not "ready"')};n.port1.addEventListener("message",o),n.port1.start(),e.addEventListener("load",(function(){e.contentWindow.postMessage("init",t,[n.port2])})),setTimeout((function(){i||(i=!0,A(new Error("IFrame extension not supported")))}),200)},r.EXTENSION_TIMEOUT_SEC=30,r.port_=null,r.waitingForPort_=[],r.reqCounter_=0,r.callbackMap_={},r.getPortSingleton_=function(A){r.port_?A(null,r.port_):(0==r.waitingForPort_.length&&r.getMessagePort((function(A,t){for(A||(r.port_=t,r.port_.addEventListener("message",r.responseHandler_));r.waitingForPort_.length;)r.waitingForPort_.shift()(A,t)})),r.waitingForPort_.push(A))},r.responseHandler_=function(A){var t=A.data,e=t.requestId;if(e&&r.callbackMap_[e]){var i=r.callbackMap_[e];delete r.callbackMap_[e],i(null,t.responseData)}else console.error("Unknown or missing requestId in response.")},r.isSupported=function(A){r.getPortSingleton_((function(t,e){A(!t)}))},r.sign=function(A,t,e){r.getPortSingleton_((function(i,n){if(i)return t(i);var o=++r.reqCounter_;r.callbackMap_[o]=t;var s={type:r.MessageTypes.U2F_SIGN_REQUEST,signRequests:A,timeoutSeconds:void 0!==e?e:r.EXTENSION_TIMEOUT_SEC,requestId:o};n.postMessage(s)}))},r.register=function(A,t,e,i){r.getPortSingleton_((function(n,o){if(n)return e(n);var s=++r.reqCounter_;r.callbackMap_[s]=e;var E={type:r.MessageTypes.U2F_REGISTER_REQUEST,signRequests:t,registerRequests:A,timeoutSeconds:void 0!==i?i:r.EXTENSION_TIMEOUT_SEC,requestId:s};o.postMessage(E)}))}},function(A,t,e){"use strict";var r=e(7),i=e(32),n=e(62),o=e(38);var s=function A(t){var e=new n(t),s=i(n.prototype.request,e);return r.extend(s,n.prototype,e),r.extend(s,e),s.create=function(e){return A(o(t,e))},s}(e(22));s.Axios=n,s.Cancel=e(23),s.CancelToken=e(75),s.isCancel=e(37),s.VERSION=e(39).version,s.all=function(A){return Promise.all(A)},s.spread=e(76),s.isAxiosError=e(77),A.exports=s,A.exports.default=s},function(A,t,e){"use strict";var r=e(7),i=e(33),n=e(63),o=e(64),s=e(38),E=e(74),a=E.validators;function g(A){this.defaults=A,this.interceptors={request:new n,response:new n}}g.prototype.request=function(A){"string"==typeof A?(A=arguments[1]||{}).url=arguments[0]:A=A||{},(A=s(this.defaults,A)).method?A.method=A.method.toLowerCase():this.defaults.method?A.method=this.defaults.method.toLowerCase():A.method="get";var t=A.transitional;void 0!==t&&E.assertOptions(t,{silentJSONParsing:a.transitional(a.boolean),forcedJSONParsing:a.transitional(a.boolean),clarifyTimeoutError:a.transitional(a.boolean)},!1);var e=[],r=!0;this.interceptors.request.forEach((function(t){"function"==typeof t.runWhen&&!1===t.runWhen(A)||(r=r&&t.synchronous,e.unshift(t.fulfilled,t.rejected))}));var i,n=[];if(this.interceptors.response.forEach((function(A){n.push(A.fulfilled,A.rejected)})),!r){var g=[o,void 0];for(Array.prototype.unshift.apply(g,e),g=g.concat(n),i=Promise.resolve(A);g.length;)i=i.then(g.shift(),g.shift());return i}for(var B=A;e.length;){var I=e.shift(),c=e.shift();try{B=I(B)}catch(A){c(A);break}}try{i=o(B)}catch(A){return Promise.reject(A)}for(;n.length;)i=i.then(n.shift(),n.shift());return i},g.prototype.getUri=function(A){return A=s(this.defaults,A),i(A.url,A.params,A.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(A){g.prototype[A]=function(t,e){return this.request(s(e||{},{method:A,url:t,data:(e||{}).data}))}})),r.forEach(["post","put","patch"],(function(A){g.prototype[A]=function(t,e,r){return this.request(s(r||{},{method:A,url:t,data:e}))}})),A.exports=g},function(A,t,e){"use strict";var r=e(7);function i(){this.handlers=[]}i.prototype.use=function(A,t,e){return this.handlers.push({fulfilled:A,rejected:t,synchronous:!!e&&e.synchronous,runWhen:e?e.runWhen:null}),this.handlers.length-1},i.prototype.eject=function(A){this.handlers[A]&&(this.handlers[A]=null)},i.prototype.forEach=function(A){r.forEach(this.handlers,(function(t){null!==t&&A(t)}))},A.exports=i},function(A,t,e){"use strict";var r=e(7),i=e(65),n=e(37),o=e(22),s=e(23);function E(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new s("canceled")}A.exports=function(A){return E(A),A.headers=A.headers||{},A.data=i.call(A,A.data,A.headers,A.transformRequest),A.headers=r.merge(A.headers.common||{},A.headers[A.method]||{},A.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete A.headers[t]})),(A.adapter||o.adapter)(A).then((function(t){return E(A),t.data=i.call(A,t.data,t.headers,A.transformResponse),t}),(function(t){return n(t)||(E(A),t&&t.response&&(t.response.data=i.call(A,t.response.data,t.response.headers,A.transformResponse))),Promise.reject(t)}))}},function(A,t,e){"use strict";var r=e(7),i=e(22);A.exports=function(A,t,e){var n=this||i;return r.forEach(e,(function(e){A=e.call(n,A,t)})),A}},function(A,t,e){"use strict";var r=e(7);A.exports=function(A,t){r.forEach(A,(function(e,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(A[t]=e,delete A[r])}))}},function(A,t,e){"use strict";var r=e(36);A.exports=function(A,t,e){var i=e.config.validateStatus;e.status&&i&&!i(e.status)?t(r("Request failed with status code "+e.status,e.config,null,e.request,e)):A(e)}},function(A,t,e){"use strict";var r=e(7);A.exports=r.isStandardBrowserEnv()?{write:function(A,t,e,i,n,o){var s=[];s.push(A+"="+encodeURIComponent(t)),r.isNumber(e)&&s.push("expires="+new Date(e).toGMTString()),r.isString(i)&&s.push("path="+i),r.isString(n)&&s.push("domain="+n),!0===o&&s.push("secure"),document.cookie=s.join("; ")},read:function(A){var t=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(A,t,e){"use strict";var r=e(70),i=e(71);A.exports=function(A,t){return A&&!r(t)?i(A,t):t}},function(A,t,e){"use strict";A.exports=function(A){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(A)}},function(A,t,e){"use strict";A.exports=function(A,t){return t?A.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):A}},function(A,t,e){"use strict";var r=e(7),i=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];A.exports=function(A){var t,e,n,o={};return A?(r.forEach(A.split("\n"),(function(A){if(n=A.indexOf(":"),t=r.trim(A.substr(0,n)).toLowerCase(),e=r.trim(A.substr(n+1)),t){if(o[t]&&i.indexOf(t)>=0)return;o[t]="set-cookie"===t?(o[t]?o[t]:[]).concat([e]):o[t]?o[t]+", "+e:e}})),o):o}},function(A,t,e){"use strict";var r=e(7);A.exports=r.isStandardBrowserEnv()?function(){var A,t=/(msie|trident)/i.test(navigator.userAgent),e=document.createElement("a");function i(A){var r=A;return t&&(e.setAttribute("href",r),r=e.href),e.setAttribute("href",r),{href:e.href,protocol:e.protocol?e.protocol.replace(/:$/,""):"",host:e.host,search:e.search?e.search.replace(/^\?/,""):"",hash:e.hash?e.hash.replace(/^#/,""):"",hostname:e.hostname,port:e.port,pathname:"/"===e.pathname.charAt(0)?e.pathname:"/"+e.pathname}}return A=i(window.location.href),function(t){var e=r.isString(t)?i(t):t;return e.protocol===A.protocol&&e.host===A.host}}():function(){return!0}},function(A,t,e){"use strict";var r=e(39).version,i={};["object","boolean","number","function","string","symbol"].forEach((function(A,t){i[A]=function(e){return typeof e===A||"a"+(t<1?"n ":" ")+A}}));var n={};i.transitional=function(A,t,e){function i(A,t){return"[Axios v"+r+"] Transitional option '"+A+"'"+t+(e?". "+e:"")}return function(e,r,o){if(!1===A)throw new Error(i(r," has been removed"+(t?" in "+t:"")));return t&&!n[r]&&(n[r]=!0,console.warn(i(r," has been deprecated since v"+t+" and will be removed in the near future"))),!A||A(e,r,o)}},A.exports={assertOptions:function(A,t,e){if("object"!=typeof A)throw new TypeError("options must be an object");for(var r=Object.keys(A),i=r.length;i-- >0;){var n=r[i],o=t[n];if(o){var s=A[n],E=void 0===s||o(s,n,A);if(!0!==E)throw new TypeError("option "+n+" must be "+E)}else if(!0!==e)throw Error("Unknown option "+n)}},validators:i}},function(A,t,e){"use strict";var r=e(23);function i(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(A){t=A}));var e=this;this.promise.then((function(A){if(e._listeners){var t,r=e._listeners.length;for(t=0;t<r;t++)e._listeners[t](A);e._listeners=null}})),this.promise.then=function(A){var t,r=new Promise((function(A){e.subscribe(A),t=A})).then(A);return r.cancel=function(){e.unsubscribe(t)},r},A((function(A){e.reason||(e.reason=new r(A),t(e.reason))}))}i.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},i.prototype.subscribe=function(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]},i.prototype.unsubscribe=function(A){if(this._listeners){var t=this._listeners.indexOf(A);-1!==t&&this._listeners.splice(t,1)}},i.source=function(){var A;return{token:new i((function(t){A=t})),cancel:A}},A.exports=i},function(A,t,e){"use strict";A.exports=function(A){return function(t){return A.apply(null,t)}}},function(A,t,e){"use strict";A.exports=function(A){return"object"==typeof A&&!0===A.isAxiosError}},function(A,t){A.exports=function(A){return A.webpackPolyfill||(A.deprecate=function(){},A.paths=[],A.children||(A.children=[]),Object.defineProperty(A,"loaded",{enumerable:!0,get:function(){return A.l}}),Object.defineProperty(A,"id",{enumerable:!0,get:function(){return A.i}}),A.webpackPolyfill=1),A}},function(A,t){},function(A,t){"function"==typeof Object.create?A.exports=function(A,t){t&&(A.super_=t,A.prototype=Object.create(t.prototype,{constructor:{value:A,enumerable:!1,writable:!0,configurable:!0}}))}:A.exports=function(A,t){if(t){A.super_=t;var e=function(){};e.prototype=t.prototype,A.prototype=new e,A.prototype.constructor=A}}},function(A,t,e){"use strict";t.sha1=e(82),t.sha224=e(83),t.sha256=e(41),t.sha384=e(84),t.sha512=e(42)},function(A,t,e){"use strict";var r=e(10),i=e(17),n=e(40),o=r.rotl32,s=r.sum32,E=r.sum32_5,a=n.ft_1,g=i.BlockHash,B=[1518500249,1859775393,2400959708,3395469782];function I(){if(!(this instanceof I))return new I;g.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}r.inherits(I,g),A.exports=I,I.blockSize=512,I.outSize=160,I.hmacStrength=80,I.padLength=64,I.prototype._update=function(A,t){for(var e=this.W,r=0;r<16;r++)e[r]=A[t+r];for(;r<e.length;r++)e[r]=o(e[r-3]^e[r-8]^e[r-14]^e[r-16],1);var i=this.h[0],n=this.h[1],g=this.h[2],I=this.h[3],c=this.h[4];for(r=0;r<e.length;r++){var u=~~(r/20),h=E(o(i,5),a(u,n,g,I),c,e[r],B[u]);c=I,I=g,g=o(n,30),n=i,i=h}this.h[0]=s(this.h[0],i),this.h[1]=s(this.h[1],n),this.h[2]=s(this.h[2],g),this.h[3]=s(this.h[3],I),this.h[4]=s(this.h[4],c)},I.prototype._digest=function(A){return"hex"===A?r.toHex32(this.h,"big"):r.split32(this.h,"big")}},function(A,t,e){"use strict";var r=e(10),i=e(41);function n(){if(!(this instanceof n))return new n;i.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}r.inherits(n,i),A.exports=n,n.blockSize=512,n.outSize=224,n.hmacStrength=192,n.padLength=64,n.prototype._digest=function(A){return"hex"===A?r.toHex32(this.h.slice(0,7),"big"):r.split32(this.h.slice(0,7),"big")}},function(A,t,e){"use strict";var r=e(10),i=e(42);function n(){if(!(this instanceof n))return new n;i.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}r.inherits(n,i),A.exports=n,n.blockSize=1024,n.outSize=384,n.hmacStrength=192,n.padLength=128,n.prototype._digest=function(A){return"hex"===A?r.toHex32(this.h.slice(0,12),"big"):r.split32(this.h.slice(0,12),"big")}},function(A,t,e){"use strict";var r=e(10),i=e(17),n=r.rotl32,o=r.sum32,s=r.sum32_3,E=r.sum32_4,a=i.BlockHash;function g(){if(!(this instanceof g))return new g;a.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function B(A,t,e,r){return A<=15?t^e^r:A<=31?t&e|~t&r:A<=47?(t|~e)^r:A<=63?t&r|e&~r:t^(e|~r)}function I(A){return A<=15?0:A<=31?1518500249:A<=47?1859775393:A<=63?2400959708:2840853838}function c(A){return A<=15?1352829926:A<=31?1548603684:A<=47?1836072691:A<=63?2053994217:0}r.inherits(g,a),t.ripemd160=g,g.blockSize=512,g.outSize=160,g.hmacStrength=192,g.padLength=64,g.prototype._update=function(A,t){for(var e=this.h[0],r=this.h[1],i=this.h[2],a=this.h[3],g=this.h[4],f=e,Q=r,C=i,d=a,R=g,p=0;p<80;p++){var T=o(n(E(e,B(p,r,i,a),A[u[p]+t],I(p)),l[p]),g);e=g,g=a,a=n(i,10),i=r,r=T,T=o(n(E(f,B(79-p,Q,C,d),A[h[p]+t],c(p)),w[p]),R),f=R,R=d,d=n(C,10),C=Q,Q=T}T=s(this.h[1],i,d),this.h[1]=s(this.h[2],a,R),this.h[2]=s(this.h[3],g,f),this.h[3]=s(this.h[4],e,Q),this.h[4]=s(this.h[0],r,C),this.h[0]=T},g.prototype._digest=function(A){return"hex"===A?r.toHex32(this.h,"little"):r.split32(this.h,"little")};var u=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],h=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],l=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],w=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},function(A,t,e){"use strict";var r=e(10),i=e(16);function n(A,t,e){if(!(this instanceof n))return new n(A,t,e);this.Hash=A,this.blockSize=A.blockSize/8,this.outSize=A.outSize/8,this.inner=null,this.outer=null,this._init(r.toArray(t,e))}A.exports=n,n.prototype._init=function(A){A.length>this.blockSize&&(A=(new this.Hash).update(A).digest()),i(A.length<=this.blockSize);for(var t=A.length;t<this.blockSize;t++)A.push(0);for(t=0;t<A.length;t++)A[t]^=54;for(this.inner=(new this.Hash).update(A),t=0;t<A.length;t++)A[t]^=106;this.outer=(new this.Hash).update(A)},n.prototype.update=function(A,t){return this.inner.update(A,t),this},n.prototype.digest=function(A){return this.outer.update(this.inner.digest()),this.outer.digest(A)}},function(A,t){(function(t){A.exports=t}).call(this,{})},function(A,t,e){(function(A){var r=void 0!==A&&A||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function n(A,t){this._id=A,this._clearFn=t}t.setTimeout=function(){return new n(i.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new n(i.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(A){A&&A.close()},n.prototype.unref=n.prototype.ref=function(){},n.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(A,t){clearTimeout(A._idleTimeoutId),A._idleTimeout=t},t.unenroll=function(A){clearTimeout(A._idleTimeoutId),A._idleTimeout=-1},t._unrefActive=t.active=function(A){clearTimeout(A._idleTimeoutId);var t=A._idleTimeout;t>=0&&(A._idleTimeoutId=setTimeout((function(){A._onTimeout&&A._onTimeout()}),t))},e(89),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==A&&A.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==A&&A.clearImmediate||this&&this.clearImmediate}).call(this,e(12))},function(A,t,e){(function(A,t){!function(A,e){"use strict";if(!A.setImmediate){var r,i,n,o,s,E=1,a={},g=!1,B=A.document,I=Object.getPrototypeOf&&Object.getPrototypeOf(A);I=I&&I.setTimeout?I:A,"[object process]"==={}.toString.call(A.process)?r=function(A){t.nextTick((function(){u(A)}))}:!function(){if(A.postMessage&&!A.importScripts){var t=!0,e=A.onmessage;return A.onmessage=function(){t=!1},A.postMessage("","*"),A.onmessage=e,t}}()?A.MessageChannel?((n=new MessageChannel).port1.onmessage=function(A){u(A.data)},r=function(A){n.port2.postMessage(A)}):B&&"onreadystatechange"in B.createElement("script")?(i=B.documentElement,r=function(A){var t=B.createElement("script");t.onreadystatechange=function(){u(A),t.onreadystatechange=null,i.removeChild(t),t=null},i.appendChild(t)}):r=function(A){setTimeout(u,0,A)}:(o="setImmediate$"+Math.random()+"$",s=function(t){t.source===A&&"string"==typeof t.data&&0===t.data.indexOf(o)&&u(+t.data.slice(o.length))},A.addEventListener?A.addEventListener("message",s,!1):A.attachEvent("onmessage",s),r=function(t){A.postMessage(o+t,"*")}),I.setImmediate=function(A){"function"!=typeof A&&(A=new Function(""+A));for(var t=new Array(arguments.length-1),e=0;e<t.length;e++)t[e]=arguments[e+1];var i={callback:A,args:t};return a[E]=i,r(E),E++},I.clearImmediate=c}function c(A){delete a[A]}function u(A){if(g)setTimeout(u,0,A);else{var t=a[A];if(t){g=!0;try{!function(A){var t=A.callback,e=A.args;switch(e.length){case 0:t();break;case 1:t(e[0]);break;case 2:t(e[0],e[1]);break;case 3:t(e[0],e[1],e[2]);break;default:t.apply(void 0,e)}}(t)}finally{c(A),g=!1}}}}}("undefined"==typeof self?void 0===A?this:A:self)}).call(this,e(12),e(26))},function(A,t,e){"use strict";e.r(t);function r(A,t,e,r){return new(e||(e=Promise))((function(i,n){function o(A){try{E(r.next(A))}catch(A){n(A)}}function s(A){try{E(r.throw(A))}catch(A){n(A)}}function E(A){var t;A.done?i(A.value):(t=A.value,t instanceof e?t:new e((function(A){A(t)}))).then(o,s)}E((r=r.apply(A,t||[])).next())}))}function i(A,t){var e,r,i,n,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return n={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function s(n){return function(s){return function(n){if(e)throw new TypeError("Generator is already executing.");for(;o;)try{if(e=1,r&&(i=2&n[0]?r.return:n[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,n[1])).done)return i;switch(r=0,i&&(n=[2&n[0],i.value]),n[0]){case 0:case 1:i=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,r=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!(i=o.trys,(i=i.length>0&&i[i.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){o.label=n[1];break}if(6===n[0]&&o.label<i[1]){o.label=i[1],i=n;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(n);break}i[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(A,o)}catch(A){n=[6,A],r=0}finally{e=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,s])}}}Object.create;Object.create;var n=e(43),o=e(46),s=function(){function A(){this.addEventListeners(),this.transport={},this.app={}}return A.prototype.addEventListeners=function(){var A=this;window.addEventListener("message",(function(t){return r(A,void 0,void 0,(function(){var A,e,r,n;return i(this,(function(i){if(t&&t.data&&"LEDGER-IFRAME"===t.data.target)switch(A=t.data,e=A.action,r=A.params,n=e+"-reply",e){case"ledger-unlock":this.unlock(n,r.hdPath);break;case"ledger-sign-transaction":this.signTransaction(n,r.hdPath,r.tx);break;case"ledger-sign-personal-message":this.signPersonalMessage(n,r.hdPath,r.message);break;case"ledger-close-bridge":this.cleanUp(n)}return[2]}))}))}),!1)},A.prototype.sendMessageToExtension=function(A){window.parent.postMessage(A,"*")},A.prototype.makeApp=function(){return r(this,void 0,void 0,(function(){var A,t;return i(this,(function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),A=this,[4,n.a.create()];case 1:return A.transport=e.sent(),this.app=new o.a(this.transport),[3,3];case 2:throw t=e.sent(),console.log("LEDGER:::CREATE APP ERROR",t),t;case 3:return[2]}}))}))},A.prototype.cleanUp=function(A){this.app={},this.transport&&this.transport.close(),A&&this.sendMessageToExtension({action:A,success:!0})},A.prototype.unlock=function(A,t){return r(this,void 0,void 0,(function(){var e,r,n;return i(this,(function(i){switch(i.label){case 0:return i.trys.push([0,3,4,5]),[4,this.makeApp()];case 1:return i.sent(),[4,this.app.getAddress(t,!1,!0)];case 2:return e=i.sent(),this.sendMessageToExtension({action:A,success:!0,payload:e}),[3,5];case 3:return r=i.sent(),n=this.ledgerErrToMessage(r),this.sendMessageToExtension({action:A,success:!1,payload:{error:n.toString()}}),[3,5];case 4:return this.cleanUp(),[7];case 5:return[2]}}))}))},A.prototype.signTransaction=function(A,t,e){return r(this,void 0,void 0,(function(){var r,n,o;return i(this,(function(i){switch(i.label){case 0:return i.trys.push([0,3,4,5]),[4,this.makeApp()];case 1:return i.sent(),[4,this.app.signTransaction(t,e)];case 2:return r=i.sent(),this.sendMessageToExtension({action:A,success:!0,payload:r}),[3,5];case 3:return n=i.sent(),o=this.ledgerErrToMessage(n),this.sendMessageToExtension({action:A,success:!1,payload:{error:o.toString()}}),[3,5];case 4:return this.cleanUp(),[7];case 5:return[2]}}))}))},A.prototype.signPersonalMessage=function(A,t,e){return r(this,void 0,void 0,(function(){var r,n,o;return i(this,(function(i){switch(i.label){case 0:return i.trys.push([0,3,4,5]),[4,this.makeApp()];case 1:return i.sent(),[4,this.app.signPersonalMessage(t,e)];case 2:return r=i.sent(),this.sendMessageToExtension({action:A,success:!0,payload:r}),[3,5];case 3:return n=i.sent(),o=this.ledgerErrToMessage(n),this.sendMessageToExtension({action:A,success:!1,payload:{error:o.toString()}}),[3,5];case 4:return this.cleanUp(),[7];case 5:return[2]}}))}))},A.prototype.ledgerErrToMessage=function(A){return function(A){return!!A&&!!A.metaData}(A)?5===A.metaData.code?"LEDGER_TIMEOUT":A.metaData.type:function(A){return String(A.message||A).includes("6804")}(A)?"LEDGER_WRONG_APP":function(A){return A.message&&A.message.includes("OpenFailed")}(A)||function(A){return"string"==typeof A}(A)&&A.includes("6801")?"LEDGER_LOCKED":function(A){return A.hasOwnProperty("id")&&A.hasOwnProperty("message")}(A)&&A.message.includes("U2F not supported")?"U2F_NOT_SUPPORTED":A.toString()},A}();r(void 0,void 0,void 0,(function(){return i(this,(function(A){return new s,[2]}))})),console.log("BEW < = > Binance Chain Ledger Bridge(BSC) initialized from "+window.location+"!")},function(A,t,e){"use strict";(function(A){e.d(t,"a",(function(){return a}));var r=e(0),i=e(1),n=e(52);const o=new i.b(n.a);let s=null;try{if(s=window,null==s)throw new Error("try next")}catch(t){try{if(s=A,null==s)throw new Error("try next")}catch(A){s={}}}let E=s.crypto||s.msCrypto;function a(A){(A<=0||A>1024||A%1||A!=A)&&o.throwArgumentError("invalid length","length",A);const t=new Uint8Array(A);return E.getRandomValues(t),Object(r.a)(t)}E&&E.getRandomValues||(o.warn("WARNING: Missing strong random number source"),E={getRandomValues:function(A){return o.throwError("no secure random source avaialble",i.b.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}})}).call(this,e(12))}]);